#is this a debug build? if not, we will not watch for file changes
debug.debug = true
#location of the main src file
debug.mainFile = sweetrush/Transcompiler.as
#relative to the build directory
debug.outputDirs = ["./../tools/transcompiler/_excluded/_generated"]
#include Bootstrap.js in compiled code? always true if node=true
debug.bundle = true
#the name of the variable to expose the main class instance as, e.g. (window.helium) (blank for no exposure)
debug.expose = transcompiler
#is this expected to run in the browser?
debug.platform = node
#is this serverside node?
debug.server = false
#directories to exclude from build process
debug.excludeDirectories = ["_excluded", "node_modules"]
#translation mode
debug.translationMode = 1;
#compileConstants 
debug.compileConstants = {"CONFIG::air":"false", "CONFIG::node":"true"}
#if we should generate .min.js files
debug.min = true

#is this a debug build? if not, we will not watch for file changes
runtime.debug = true
#location of the main src file
runtime.mainFile = sweetrush/Transcompiler.as
#relative to the build directory
runtime.outputDirs = ["./js/transcompiler"]
#include Bootstrap.js in compiled code? always true if node=true
runtime.bundle = false
#the name of the variable to expose the main class instance as, e.g. (window.helium) (blank for no exposure)
runtime.expose = transcompiler
#is this expected to run in the browser?
runtime.platform = browser
#is this serverside node?
runtime.server = false
#directories to exclude from build process
runtime.excludeDirectories = ["_excluded", "node_modules"]
#files/directories to copy over
runtime.deploy = [{"from":"./_excluded/_generated/builtin.browser.swc", "to":"./js/transcompiler/swc/builtin.swc"}, {"from":"./_excluded/_generated/playerglobal.browser.swc", "to":"./js/transcompiler/swc/playerglobal.swc"}]
#translation mode
runtime.translationMode = 3;
#compileConstants 
runtime.compileConstants = {"CONFIG::air":"false", "CONFIG::node":"true"}

release.debug = false
release.mainFile = sweetrush/Transcompiler.as
release.outputDirs = ["./../tools/transcompiler/_excluded/_generated"]
release.bundle = true
release.expose = transcompiler
release.platform = node
release.server = false
release.excludeDirectories = ["_excluded", "node_modules"]
release.translationMode = 1;
release.compileConstants = {"CONFIG::air":"false", "CONFIG::node":"true"}
