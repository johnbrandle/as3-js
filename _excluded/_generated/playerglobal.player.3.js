//__ES4__

(function() { var $window = this; var window = $window.parent || $window; var global = window; var document = window.document; var $es4 = window.$es4 || (window.$es4 = {}); var _ = window._; var $ = window.$; var alert = window.alert; 

//flash.utils.flash_proxy
$es4.$$package('flash.utils').flash_proxy = $es4.$$namespace('http://www.sweetrush.com/flash/proxy', true);
//flash.utils.flash_proxy


//browser.Browser
$es4.$$package('browser').Browser = (function ()
{
	//imports
	var Sprite;
	var ByteArray;
	var Browser;

	//properties
	var $$j = {};
	Object.defineProperty(Browser, '$_transformOriginString', {
	get:function () { if (Browser.$$cinit !== undefined) Browser.$$cinit(); return $$j.$_transformOriginString; },
	set:function (value) { if (Browser.$$cinit !== undefined) Browser.$$cinit(); $$j.$_transformOriginString = $es4.$$coerce(value, String); }
	});

	Object.defineProperty(Browser, '$_transformString', {
	get:function () { if (Browser.$$cinit !== undefined) Browser.$$cinit(); return $$j.$_transformString; },
	set:function (value) { if (Browser.$$cinit !== undefined) Browser.$$cinit(); $$j.$_transformString = $es4.$$coerce(value, String); }
	});

	Object.defineProperty(Browser, '$_backfaceVisibilityString', {
	get:function () { if (Browser.$$cinit !== undefined) Browser.$$cinit(); return $$j.$_backfaceVisibilityString; },
	set:function (value) { if (Browser.$$cinit !== undefined) Browser.$$cinit(); $$j.$_backfaceVisibilityString = $es4.$$coerce(value, String); }
	});


	//class pre initializer
	Browser.$$sinit = (function ()
	{
		Browser.$$sinit = undefined;

		//initialize imports
		Sprite = $es4.$$['flash.display'].Sprite;
		ByteArray = $es4.$$['flash.utils'].ByteArray;

		//set prototype and constructor
		Browser.prototype = Object.create(Object.prototype);
		Object.defineProperty(Browser.prototype, "constructor", { value: Browser, enumerable: false });

		//hold private values
		Object.defineProperty(Browser.prototype, '$$v', {value:{}});
	});

	//class initializer
	Browser.$$cinit = (function ()
	{
		Browser.$$cinit = undefined;

		//initialize properties
		$$j.$_transformOriginString = $es4.$$coerce(undefined, String);
		$$j.$_transformString = $es4.$$coerce(undefined, String);
		$$j.$_backfaceVisibilityString = $es4.$$coerce(undefined, String);
	
	});

	//public static method
	Browser.doEval = (function ($$$$js)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var js = $es4.$$coerce($$$$js, String);

		var object = (window.execScript) ? window.execScript(js) : window.eval.call(window, js);
		if (object)
		{
			$es4.$$construct(object, []);
		}
		else
		{
			object = $es4.$$primitive(new Sprite());
		}
		return $es4.$$coerce(object, Sprite);
	});

	//public static method
	Browser.getWindow = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		return window;
	});

	//public static method
	Browser.domParseXML = (function ($$$$textValue)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var textValue = $es4.$$coerce($$$$textValue, String);

		return $es4.$$primitive(new window.DOMParser().parseFromString(textValue, 'text/xml'));
	});

	//public static method
	Browser.getNewAudio = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (window.audios && window.audios.length)
		{
			return window.audios.pop();
		}
		return document.createElement('audio');
	});

	//public static method
	Browser.getNewAudioContext = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		var audioContext;
		if (window.audioContexts && window.audioContexts.length)
		{
			audioContext = window.audioContexts[0];
		}
		else if (!window.mobile)
		{
			window.audioContexts = [];
			try
			{
				audioContext = window.audioContexts[0] = $es4.$$primitive(new (window.webkitAudioContext !== undefined ? window.webkitAudioContext : window.AudioContext)());
			}
			catch (error)
			{
				trace('failed to create audio context: ' + error);
			}
		}
		if (audioContext && audioContext.state !== undefined && audioContext.state != 'running' && window.mobile)
		{
			trace('invalid audioContext state: ' + audioContext.state);
			if (audioContext.close !== undefined)
			{
				audioContext.close();
			}
			window.audioContexts = [];
			return null;
		}
		return audioContext;
	});

	//public static method
	Browser.getNewVideo = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (window.videos && window.videos.length)
		{
			return window.videos.pop();
		}
		var video = document.createElement('video');
		video.setAttribute('webkit-playsinline', '');
		video.setAttribute('preload', 'auto');
		video.style.objectFit = video.style.imageFit = 'fill';
		return video;
	});

	//public static method
	Browser.getDisplayObjectElement = (function ($$$$displayObject)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var displayObject = $$$$displayObject;

		return displayObject.$__properties().DisplayObjectScope.$_domView;
	});

	//public static method
	Browser.getNewUint8Array = (function ($$$$value)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var value = $$$$value;

		return $es4.$$primitive(new window.Uint8Array(value));
	});

	//public static method
	Browser.getTransformOriginString = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (Browser.$_transformOriginString)
		{
			return Browser.$_transformOriginString;
		}
		var transformString = null;
		if (document.body.style.transformOrigin !== undefined)
		{
			transformString = 'transformOrigin';
		}
		else if (document.body.style.webkitTransformOrigin !== undefined)
		{
			transformString = 'webkitTransformOrigin';
		}
		else if (document.body.style.mozTransformOrigin !== undefined)
		{
			transformString = 'mozTransformOrigin';
		}
		else if (document.body.style.msTransformOrigin !== undefined)
		{
			transformString = 'msTransformOrigin';
		}
		else if (document.body.style.oTransformOrigin !== undefined)
		{
			transformString = 'oTransformOrigin';
		}
		return Browser.$_transformOriginString = transformString;
	});

	//public static method
	Browser.getTransformString = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (Browser.$_transformString)
		{
			return Browser.$_transformString;
		}
		var transformString = null;
		if (document.body.style.transform !== undefined)
		{
			transformString = 'transform';
		}
		else if (document.body.style.webkitTransform !== undefined)
		{
			transformString = 'webkitTransform';
		}
		else if (document.body.style.mozTransform !== undefined)
		{
			transformString = 'mozTransform';
		}
		else if (document.body.style.msTransform !== undefined)
		{
			transformString = 'msTransform';
		}
		else if (document.body.style.oTransform !== undefined)
		{
			transformString = 'oTransform';
		}
		return Browser.$_transformString = transformString;
	});

	//public static method
	Browser.getBackfaceVisibilityString = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (Browser.$_backfaceVisibilityString)
		{
			return Browser.$_backfaceVisibilityString;
		}
		var backfaceVisibilityString = null;
		if (document.body.style.backfaceVisibility !== undefined)
		{
			backfaceVisibilityString = 'backfaceVisibility';
		}
		else if (document.body.style.webkitBackfaceVisibility !== undefined)
		{
			backfaceVisibilityString = 'webkitBackfaceVisibility';
		}
		return Browser.$_backfaceVisibilityString = backfaceVisibilityString;
	});

	//public static method
	Browser.getTapHighlightColorString = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		return 'webkitTapHighlightColor';
	});

	//public static method
	Browser.getNewXMLSerializer = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		return $es4.$$primitive(new window.XMLSerializer());
	});

	//public static method
	Browser.getNewXMLHttpRequest = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		return $es4.$$primitive(new window.XMLHttpRequest());
	});

	//public static method
	Browser.getLWF = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (window.LWF)
		{
			return window.LWF;
		}
		var xmlHttpRequest = Browser.getNewXMLHttpRequest();
		xmlHttpRequest.open('GET', 'js/transcompiler/player/lwf/lwf.min.js', false);
		xmlHttpRequest.overrideMimeType('text/javascript');
		xmlHttpRequest.send(null);
		var js = $es4.$$coerce(xmlHttpRequest.responseText, String);
		(window.execScript) ? window.execScript(js) : window.eval.call(window, js);
		return window.LWF;
	});

	//public static method
	Browser.getFlashWebGL = (function ()
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		if (window.flwebgl)
		{
			return window.flwebgl;
		}
		var xmlHttpRequest = Browser.getNewXMLHttpRequest();
		xmlHttpRequest.open('GET', 'js/transcompiler/player/flwebgl/flwebgl-0.2.min.js', false);
		xmlHttpRequest.overrideMimeType('text/javascript');
		xmlHttpRequest.send(null);
		var js = $es4.$$coerce(xmlHttpRequest.responseText, String);
		(window.execScript) ? window.execScript(js) : window.eval.call(window, js);
		return window.flwebgl;
	});

	//public static method
	Browser.getByteArray = (function ($$$$url)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var url = $es4.$$coerce($$$$url, String);

		var xmlHttpRequest = Browser.getNewXMLHttpRequest();
		xmlHttpRequest.open('GET', url, false);
		xmlHttpRequest.responseType = 'arraybuffer';
		xmlHttpRequest.send(null);
		var byteArray = $es4.$$primitive(new ByteArray());
		byteArray['$__setArrayBuffer'](xmlHttpRequest.response);
		return byteArray;
	});

	//public static method
	Browser.convertArrayBufferToBase64String = (function () { return $es4.$$coerce((function ($$$$arrayBuffer)
	{
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//set default parameter values
		var arrayBuffer = $$$$arrayBuffer;


	var base64    = '';
	var encodings = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';

	var bytes         = new window.Uint8Array(arrayBuffer);
	var byteLength    = bytes.byteLength;
	var byteRemainder = byteLength % 3;
	var mainLength    = byteLength - byteRemainder;

	var a, b, c, d;
	var chunk;

	
	for (var i = 0; i < mainLength; i = i + 3)
	{
		
		chunk = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];

		
		a = (chunk & 16515072) >> 18 
		b = (chunk & 258048)   >> 12 
		c = (chunk & 4032)     >>  6 
		d = chunk & 63               

		
		base64 += encodings[a] + encodings[b] + encodings[c] + encodings[d];
	}

	
	if (byteRemainder == 1)
	{
		chunk = bytes[mainLength];

		a = (chunk & 252) >> 2 

		
		b = (chunk & 3)   << 4 

		base64 += encodings[a] + encodings[b] + '==';
	}
	else if (byteRemainder == 2)
	{
		chunk = (bytes[mainLength] << 8) | bytes[mainLength + 1];

		a = (chunk & 64512) >> 10 
		b = (chunk & 1008)  >>  4 

		
		c = (chunk & 15)    <<  2 

		base64 += encodings[a] + encodings[b] + encodings[c] + '=';
	}

	return base64;

	}).apply(this, arguments), String);});

	function Browser()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Browser) || $$this.$$Browser !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Browser) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Browser.$$construct($$this, $$args);
		}
	}

	//construct
	Browser.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Browser.$$cinit !== undefined) Browser.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Browser', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Browser.$$iinit($$this);

		//call constructor
		if (args !== undefined) Browser.$$constructor.apply($$this, args);
	});

	//initializer
	Browser.$$iinit = (function ($$this)
	{
	});

	//constructor
	Browser.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(Browser, null, 'browser::Browser');
})();
//browser.Browser


//fl.controls.ScrollBarDirection
$es4.$$package('fl.controls').ScrollBarDirection = (function ()
{
	//properties
	var $$j = {};
	ScrollBarDirection.VERTICAL = "vertical";
	ScrollBarDirection.HORIZONTAL = "horizontal";

	//class pre initializer
	ScrollBarDirection.$$sinit = (function ()
	{
		ScrollBarDirection.$$sinit = undefined;

		//set prototype and constructor
		ScrollBarDirection.prototype = Object.create(Object.prototype);
		Object.defineProperty(ScrollBarDirection.prototype, "constructor", { value: ScrollBarDirection, enumerable: false });

		//hold private values
		Object.defineProperty(ScrollBarDirection.prototype, '$$v', {value:{}});
	});

	//class initializer
	ScrollBarDirection.$$cinit = (function ()
	{
		ScrollBarDirection.$$cinit = undefined;
	});

	function ScrollBarDirection()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ScrollBarDirection) || $$this.$$ScrollBarDirection !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ScrollBarDirection) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ScrollBarDirection.$$construct($$this, $$args);
		}
	}

	//construct
	ScrollBarDirection.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ScrollBarDirection.$$cinit !== undefined) ScrollBarDirection.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ScrollBarDirection', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ScrollBarDirection.$$iinit($$this);

		//call constructor
		if (args !== undefined) ScrollBarDirection.$$constructor.apply($$this, args);
	});

	//initializer
	ScrollBarDirection.$$iinit = (function ($$this)
	{
	});

	//constructor
	ScrollBarDirection.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(ScrollBarDirection, null, 'fl.controls::ScrollBarDirection');
})();
//fl.controls.ScrollBarDirection


//flash.accessibility.Accessibility
$es4.$$package('flash.accessibility').Accessibility = (function ()
{
	//imports
	var DisplayObject;

	//class pre initializer
	Accessibility.$$sinit = (function ()
	{
		Accessibility.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;

		//set prototype and constructor
		Accessibility.prototype = Object.create(Object.prototype);
		Object.defineProperty(Accessibility.prototype, "constructor", { value: Accessibility, enumerable: false });

		//hold private values
		Object.defineProperty(Accessibility.prototype, '$$v', {value:{}});
	});

	//class initializer
	Accessibility.$$cinit = (function ()
	{
		Accessibility.$$cinit = undefined;
	});

	//public static method
	Accessibility.sendEvent = (function ($$$$source, $$$$childID, $$$$eventType, $$$$nonHTML)
	{
		if (Accessibility.$$cinit !== undefined) Accessibility.$$cinit();

		//set default parameter values
		var source = $es4.$$coerce($$$$source, DisplayObject);
		var childID = $es4.$$coerce($$$$childID, uint);
		var eventType = $es4.$$coerce($$$$eventType, uint);
		var nonHTML = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$nonHTML, Boolean);

		throw $es4.$$primitive(new Error('Accessibility: attempted call to an unimplemented function "sendEvent"'));
	});

	//public static method
	Accessibility.updateProperties = (function ()
	{
		if (Accessibility.$$cinit !== undefined) Accessibility.$$cinit();

	});
	Object.defineProperty(Accessibility, 'active', {get:function ()
	{
		if (Accessibility.$$cinit !== undefined) Accessibility.$$cinit();

		return false;
	}});

	function Accessibility()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Accessibility) || $$this.$$Accessibility !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Accessibility) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Accessibility.$$construct($$this, $$args);
		}
	}

	//construct
	Accessibility.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Accessibility.$$cinit !== undefined) Accessibility.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Accessibility', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Accessibility.$$iinit($$this);

		//call constructor
		if (args !== undefined) Accessibility.$$constructor.apply($$this, args);
	});

	//initializer
	Accessibility.$$iinit = (function ($$this)
	{
	});

	//constructor
	Accessibility.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('Accessibility: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(Accessibility, null, 'flash.accessibility::Accessibility');
})();
//flash.accessibility.Accessibility


//flash.accessibility.AccessibilityImplementation
$$package('flash.accessibility').AccessibilityImplementation = function () { throw new Error('Use of unimplemented class: AccessibilityImplementation'); }
//flash.accessibility.AccessibilityImplementation


//flash.accessibility.AccessibilityProperties
$es4.$$package('flash.accessibility').AccessibilityProperties = (function ()
{
	//imports
	var DisplayObject;

	//class pre initializer
	AccessibilityProperties.$$sinit = (function ()
	{
		AccessibilityProperties.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;

		//set prototype and constructor
		AccessibilityProperties.prototype = Object.create(Object.prototype);
		Object.defineProperty(AccessibilityProperties.prototype, "constructor", { value: AccessibilityProperties, enumerable: false });

		//hold private values
		Object.defineProperty(AccessibilityProperties.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(AccessibilityProperties.prototype, '$_setOwner', {
		get:function ()
		{
			var $$this = this;

			function $_setOwner($$$$owner)
			{
				//set default parameter values
				var owner = $es4.$$coerce($$$$owner, DisplayObject);

				$$this.$$AccessibilityProperties.$_owner = owner;
				$$this.$_applyProperties($$this.$$AccessibilityProperties.$_owner.$__properties().DisplayObjectScope.$_domView);
			}

			return $$this.$$AccessibilityProperties.$$$_setOwner || ($$this.$$AccessibilityProperties.$$$_setOwner = $_setOwner);
		}});


		//public instance method
		Object.defineProperty(AccessibilityProperties.prototype, '$_applyProperties', {
		get:function ()
		{
			var $$this = this;

			function $_applyProperties($$$$object)
			{
				//set default parameter values
				var object = $es4.$$coerce($$$$object, Object);

				object.setAttribute('title', $$this.$$AccessibilityProperties.$_name);
				object.setAttribute('data-description', $$this.$$AccessibilityProperties.$_description);
			}

			return $$this.$$AccessibilityProperties.$$$_applyProperties || ($$this.$$AccessibilityProperties.$$$_applyProperties = $_applyProperties);
		}});

		Object.defineProperty(AccessibilityProperties.prototype, 'name', {get:function ()
		{
			var $$this = this;
			return $$this.$$AccessibilityProperties.$_name;
		}, set:function ($$$$name)
		{
			//set default parameter values
			var name = $es4.$$coerce($$$$name, String);

			var $$this = this;
			$$this.$$AccessibilityProperties.$_name = name;
			if ($$this.$$AccessibilityProperties.$_owner)
			{
				var scope = $$this.$$AccessibilityProperties.$_owner.$__properties().DisplayObjectScope;
				scope.$_domView.setAttribute('title', name);
			}
		}});
		Object.defineProperty(AccessibilityProperties.prototype, 'description', {get:function ()
		{
			var $$this = this;
			return $$this.$$AccessibilityProperties.$_description;
		}, set:function ($$$$description)
		{
			//set default parameter values
			var description = $es4.$$coerce($$$$description, String);

			var $$this = this;
			$$this.$$AccessibilityProperties.$_description = description;
			if ($$this.$$AccessibilityProperties.$_owner)
			{
				var scope = $$this.$$AccessibilityProperties.$_owner.$__properties().DisplayObjectScope;
				scope.$_domView.setAttribute('data-description', description);
			}
		}});

		//properties
		AccessibilityProperties.prototype.$$v.$_description = {
		get:function () { var $$this = this.$$this; return $$this.$$AccessibilityProperties.$$p.$_description; },
		set:function (value) { var $$this = this.$$this; $$this.$$AccessibilityProperties.$$p.$_description = $es4.$$coerce(value, String); }
		};

		Object.defineProperty(AccessibilityProperties.prototype, 'forceSimple', {
		get:function () { var $$this = this; return $$this.$$AccessibilityProperties.forceSimple; },
		set:function (value) { var $$this = this; $$this.$$AccessibilityProperties.forceSimple = $es4.$$coerce(value, Boolean); }
		});

		AccessibilityProperties.prototype.$$v.$_name = {
		get:function () { var $$this = this.$$this; return $$this.$$AccessibilityProperties.$$p.$_name; },
		set:function (value) { var $$this = this.$$this; $$this.$$AccessibilityProperties.$$p.$_name = $es4.$$coerce(value, String); }
		};

		Object.defineProperty(AccessibilityProperties.prototype, 'noAutoLabeling', {
		get:function () { var $$this = this; return $$this.$$AccessibilityProperties.noAutoLabeling; },
		set:function (value) { var $$this = this; $$this.$$AccessibilityProperties.noAutoLabeling = $es4.$$coerce(value, Boolean); }
		});

		Object.defineProperty(AccessibilityProperties.prototype, 'shortcut', {
		get:function () { var $$this = this; return $$this.$$AccessibilityProperties.shortcut; },
		set:function (value) { var $$this = this; $$this.$$AccessibilityProperties.shortcut = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(AccessibilityProperties.prototype, 'silent', {
		get:function () { var $$this = this; return $$this.$$AccessibilityProperties.silent; },
		set:function (value) { var $$this = this; $$this.$$AccessibilityProperties.silent = $es4.$$coerce(value, Boolean); }
		});

		AccessibilityProperties.prototype.$$v.$_owner = {
		get:function () { var $$this = this.$$this; return $$this.$$AccessibilityProperties.$$p.$_owner; },
		set:function (value) { var $$this = this.$$this; $$this.$$AccessibilityProperties.$$p.$_owner = $es4.$$coerce(value, DisplayObject); }
		};

	});

	//class initializer
	AccessibilityProperties.$$cinit = (function ()
	{
		AccessibilityProperties.$$cinit = undefined;
	});

	function AccessibilityProperties()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof AccessibilityProperties) || $$this.$$AccessibilityProperties !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], AccessibilityProperties) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			AccessibilityProperties.$$construct($$this, $$args);
		}
	}

	//construct
	AccessibilityProperties.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (AccessibilityProperties.$$cinit !== undefined) AccessibilityProperties.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$AccessibilityProperties', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$AccessibilityProperties, '$_description', AccessibilityProperties.prototype.$$v.$_description);
		Object.defineProperty($$this.$$AccessibilityProperties, '$_name', AccessibilityProperties.prototype.$$v.$_name);
		Object.defineProperty($$this.$$AccessibilityProperties, '$_owner', AccessibilityProperties.prototype.$$v.$_owner);

		//initialize properties
		AccessibilityProperties.$$iinit($$this);

		//call constructor
		if (args !== undefined) AccessibilityProperties.$$constructor.apply($$this, args);
	});

	//initializer
	AccessibilityProperties.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$AccessibilityProperties.$$p.$_description = $es4.$$coerce('', String);
		$$this.$$AccessibilityProperties.forceSimple = $es4.$$coerce(undefined, Boolean);
		$$this.$$AccessibilityProperties.$$p.$_name = $es4.$$coerce('', String);
		$$this.$$AccessibilityProperties.noAutoLabeling = $es4.$$coerce(undefined, Boolean);
		$$this.$$AccessibilityProperties.shortcut = $es4.$$coerce('', String);
		$$this.$$AccessibilityProperties.silent = $es4.$$coerce(undefined, Boolean);
		$$this.$$AccessibilityProperties.$$p.$_owner = $es4.$$coerce(undefined, DisplayObject);
	
	});

	//constructor
	AccessibilityProperties.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(AccessibilityProperties, null, 'flash.accessibility::AccessibilityProperties');
})();
//flash.accessibility.AccessibilityProperties


//flash.desktop.Clipboard
$$package('flash.desktop').Clipboard = function () { throw new Error('Use of unimplemented class: Clipboard'); }
//flash.desktop.Clipboard


//flash.desktop.ClipboardFormats
$$package('flash.desktop').ClipboardFormats = function () { throw new Error('Use of unimplemented class: ClipboardFormats'); }
//flash.desktop.ClipboardFormats


//flash.desktop.ClipboardTransferMode
$$package('flash.desktop').ClipboardTransferMode = function () { throw new Error('Use of unimplemented class: ClipboardTransferMode'); }
//flash.desktop.ClipboardTransferMode


//flash.display.ActionScriptVersion
$$package('flash.display').ActionScriptVersion = function () { throw new Error('Use of unimplemented class: ActionScriptVersion'); }
//flash.display.ActionScriptVersion


//flash.display.AVM1Movie
$$package('flash.display').AVM1Movie = function () { throw new Error('Use of unimplemented class: AVM1Movie'); }
//flash.display.AVM1Movie


//flash.display.Bitmap
$es4.$$package('flash.display').Bitmap = (function ()
{
	//imports
	var Bitmap;
	var BitmapData;
	var DisplayObject;

	//class pre initializer
	Bitmap.$$sinit = (function ()
	{
		Bitmap.$$sinit = undefined;

		//initialize imports
		BitmapData = $es4.$$['flash.display'].BitmapData;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;

		//ensure $$sinit is called on super class
		if (DisplayObject.$$sinit !== undefined) DisplayObject.$$sinit();

		//set prototype and constructor
		Bitmap.prototype = Object.create(DisplayObject.prototype);
		Object.defineProperty(Bitmap.prototype, "constructor", { value: Bitmap, enumerable: false });

		//hold private values
		Object.defineProperty(Bitmap.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Bitmap.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Bitmap.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__properties', 'func', undefined)(object);
					var pscope = $es4.$$getOwnScope($$this, Bitmap);
					object.BitmapScope = {pscope:pscope};
					object.TLScope = $$this;
					return $$this.$$Bitmap.$_properties = object;
				}
				return $$this.$$Bitmap.$_properties;
			}

			return $$this.$$Bitmap.$$$__properties || ($$this.$$Bitmap.$$$__properties = $__properties);
		}});


		//protected instance method
		Object.defineProperty(Bitmap.prototype, '$__createDomView', {
		get:function ()
		{
			var $$this = this;

			function $__createDomView()
			{
				var canvas = document.createElement('canvas');
				canvas.setAttribute('tabindex', -1);
				return canvas;
			}

			return $$this.$$Bitmap.$$$__createDomView || ($$this.$$Bitmap.$$$__createDomView = $__createDomView);
		}});


		//private instance method
		Bitmap.prototype.$$v.setBitmapData = {
		get:function ()
		{
			var $$this = this.$$this;

			function setBitmapData($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, BitmapData);

				var properties = $$this.$$Bitmap.$_properties;
				var canvas = properties.DisplayObjectScope.$_domView;
				var bitmapDataProperties;
				if (value === null)
				{
					var bitmapData = $es4.$$coerce(properties.BitmapScope.$_bitmapData, BitmapData);
					if (bitmapData)
					{
						bitmapDataProperties = bitmapData.$__properties();
						bitmapDataProperties.BitmapDataScope.$_canvas = null;
						bitmapDataProperties.BitmapDataScope.$_createOrGetCanvas(bitmapData);
					}
					properties.BitmapScope.$_bitmapData = null;
					canvas.getContext('2d').clearRect(0, 0, canvas.width, canvas.height);
					canvas.width = 0;
					canvas.height = 0;
					properties.DisplayObjectScope.$_setExplicitBounds(0, 0);
					return;
				}
				bitmapDataProperties = value.$__properties();
				canvas.width = bitmapDataProperties.BitmapDataScope.$_width;
				canvas.height = bitmapDataProperties.BitmapDataScope.$_height;
				canvas.getContext('2d').drawImage(bitmapDataProperties.BitmapDataScope.$_createOrGetCanvas(value), 0, 0);
				bitmapDataProperties.BitmapDataScope.$_canvas = canvas;
				properties.BitmapScope.$_bitmapData = value;
				properties.DisplayObjectScope.$_setExplicitBounds(canvas.width, canvas.height);
			}

			return $$this.$$Bitmap.$$p.$$setBitmapData || ($$this.$$Bitmap.$$p.$$setBitmapData = setBitmapData);
		}};

		Object.defineProperty(Bitmap.prototype, 'bitmapData', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Bitmap.$_properties.BitmapScope.$_bitmapData, BitmapData);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, BitmapData);

			var $$this = this;
			$$this.$$Bitmap.setBitmapData(value);
		}});
		Object.defineProperty(Bitmap.prototype, 'pixelSnapping', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Bitmap.$_properties.BitmapScope.$_pixelSnapping, String);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$Bitmap.$_properties.BitmapScope.$_pixelSnapping = value;
		}});
		Object.defineProperty(Bitmap.prototype, 'smoothing', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Bitmap.$_properties.BitmapScope.$_smoothing, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$Bitmap.$_properties.BitmapScope.$_smoothing = value;
		}});

		//properties
		Bitmap.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Bitmap.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Bitmap.$$p.$_properties = value }
		};

	});

	//class initializer
	Bitmap.$$cinit = (function ()
	{
		Bitmap.$$cinit = undefined;
	});

	function Bitmap()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Bitmap) || $$this.$$Bitmap !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Bitmap) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Bitmap.$$construct($$this, $$args);
		}
	}

	//construct
	Bitmap.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Bitmap.$$cinit !== undefined) Bitmap.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Bitmap', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Bitmap, '$_properties', Bitmap.prototype.$$v.$_properties);

		//private instance method
		Object.defineProperty($$this.$$Bitmap, 'setBitmapData', Bitmap.prototype.$$v.setBitmapData);

		//call construct on super
		DisplayObject.$$construct($$this);

		//initialize properties
		Bitmap.$$iinit($$this);

		//call constructor
		if (args !== undefined) Bitmap.$$constructor.apply($$this, args);
	});

	//initializer
	Bitmap.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Bitmap.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObject.$$iinit($$this);
	});

	//constructor
	Bitmap.$$constructor = (function ($$$$bitmapData, $$$$pixelSnapping, $$$$smoothing)
	{
		var $$this = this;
		//set default parameter values
		var bitmapData = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$bitmapData, BitmapData);
		var pixelSnapping = (1 > arguments.length - 1) ? 'auto' : $es4.$$coerce($$$$pixelSnapping, String);
		var smoothing = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$smoothing, Boolean);

		var properties = $$this.$$Bitmap.$_properties || $$this.$__properties({});
		DisplayObject.$$constructor.call($$this);
		properties.BitmapScope.$_pixelSnapping = pixelSnapping;
		properties.BitmapScope.$_smoothing = smoothing;
		$$this.$$Bitmap.$_properties.DisplayObjectScope.$_domView.style.pointerEvents = 'inherit';
		if (bitmapData !== null)
		{
			$$this.$$Bitmap.setBitmapData(bitmapData);
		}
	});

	return $es4.$$class(Bitmap, {EXTENDS:'flash.display.DisplayObject'}, 'flash.display::Bitmap');
})();
//flash.display.Bitmap


//flash.display.BitmapData
$es4.$$package('flash.display').BitmapData = (function ()
{
	//imports
	var BitmapFilter;
	var ColorTransform;
	var Matrix;
	var Point;
	var Rectangle;
	var ByteArray;
	var Bitmap;
	var BitmapData;
	var DisplayObject;
	var IBitmapDrawable;

	//class pre initializer
	BitmapData.$$sinit = (function ()
	{
		BitmapData.$$sinit = undefined;

		//initialize imports
		BitmapFilter = $es4.$$['flash.filters'].BitmapFilter;
		ColorTransform = $es4.$$['flash.geom'].ColorTransform;
		Matrix = $es4.$$['flash.geom'].Matrix;
		Point = $es4.$$['flash.geom'].Point;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Bitmap = $es4.$$['flash.display'].Bitmap;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		IBitmapDrawable = $es4.$$['flash.display'].IBitmapDrawable;

		//set prototype and constructor
		BitmapData.prototype = Object.create(Object.prototype);
		Object.defineProperty(BitmapData.prototype, "constructor", { value: BitmapData, enumerable: false });

		//hold private values
		Object.defineProperty(BitmapData.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(BitmapData.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$BitmapData.$_properties === undefined)
				{
					object.BitmapDataScope = {$_createOrGetCanvas:BitmapData.$_createOrGetCanvas};
					object.TLScope = $$this;
					return $$this.$$BitmapData.$_properties = object;
				}
				return $$this.$$BitmapData.$_properties;
			}

			return $$this.$$BitmapData.$$$__properties || ($$this.$$BitmapData.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'applyFilter', {
		get:function ()
		{
			var $$this = this;

			function applyFilter($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$filter)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var filter = $es4.$$coerce($$$$filter, BitmapFilter);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "applyFilter"'));
			}

			return $$this.$$BitmapData.$$applyFilter || ($$this.$$BitmapData.$$applyFilter = applyFilter);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				var bitmapData = $es4.$$coerce($es4.$$primitive(new BitmapData($$this.$$BitmapData.$_properties.BitmapDataScope.$_width, $$this.$$BitmapData.$_properties.BitmapDataScope.$_height, $$this.$$BitmapData.$_properties.BitmapDataScope.$_transparent, $$this.$$BitmapData.$_properties.BitmapDataScope.$_fillColor)), $es4.$$['flash.display'].BitmapData);
				if ($$this.$$BitmapData.$_properties.BitmapDataScope.$_canvas)
				{
					var canvas = document.createElement('canvas');
					canvas.width = $$this.$$BitmapData.$_properties.BitmapDataScope.$_width;
					canvas.height = $$this.$$BitmapData.$_properties.BitmapDataScope.$_height;
					canvas.getContext('2d').drawImage($$this.$$BitmapData.$_properties.BitmapDataScope.$_canvas, 0, 0);
					bitmapData.$__properties().BitmapDataScope.$_canvas = canvas;
				}
				return bitmapData;
			}

			return $$this.$$BitmapData.$$clone || ($$this.$$BitmapData.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'colorTransform', {
		get:function ()
		{
			var $$this = this;

			function colorTransform($$$$rect, $$$$colorTransform)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);
				var colorTransform = $es4.$$coerce($$$$colorTransform, ColorTransform);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "colorTransform"'));
			}

			return $$this.$$BitmapData.$$colorTransform || ($$this.$$BitmapData.$$colorTransform = colorTransform);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'compare', {
		get:function ()
		{
			var $$this = this;

			function compare($$$$otherBitmapData)
			{
				//set default parameter values
				var otherBitmapData = $es4.$$coerce($$$$otherBitmapData, $es4.$$['flash.display'].BitmapData);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "compare"'));
			}

			return $$this.$$BitmapData.$$compare || ($$this.$$BitmapData.$$compare = compare);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'copyChannel', {
		get:function ()
		{
			var $$this = this;

			function copyChannel($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$sourceChannel, $$$$destChannel)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var sourceChannel = $es4.$$coerce($$$$sourceChannel, uint);
				var destChannel = $es4.$$coerce($$$$destChannel, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "copyChannel"'));
			}

			return $$this.$$BitmapData.$$copyChannel || ($$this.$$BitmapData.$$copyChannel = copyChannel);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'copyPixels', {
		get:function ()
		{
			var $$this = this;

			function copyPixels($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$alphaBitmapData, $$$$alphaPoint, $$$$mergeAlpha)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var alphaBitmapData = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$alphaBitmapData, $es4.$$['flash.display'].BitmapData);
				var alphaPoint = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$alphaPoint, Point);
				var mergeAlpha = (5 > arguments.length - 1) ? false : $es4.$$coerce($$$$mergeAlpha, Boolean);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "copyPixels"'));
			}

			return $$this.$$BitmapData.$$copyPixels || ($$this.$$BitmapData.$$copyPixels = copyPixels);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'dispose', {
		get:function ()
		{
			var $$this = this;

			function dispose()
			{
			}

			return $$this.$$BitmapData.$$dispose || ($$this.$$BitmapData.$$dispose = dispose);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'draw', {
		get:function ()
		{
			var $$this = this;

			function draw($$$$source, $$$$matrix, $$$$colorTransform, $$$$blendMode, $$$$clipRect, $$$$smoothing)
			{
				//set default parameter values
				var source = $es4.$$coerce($$$$source, IBitmapDrawable);
				var matrix = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);
				var colorTransform = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$colorTransform, ColorTransform);
				var blendMode = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$blendMode, String);
				var clipRect = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$clipRect, Rectangle);
				var smoothing = (5 > arguments.length - 1) ? false : $es4.$$coerce($$$$smoothing, Boolean);

				var sourceCanvas;
				if ($es4.$$is(source, Bitmap))
				{
					sourceCanvas = ($es4.$$as(source, DisplayObject)).$__properties().DisplayObjectScope.$_domView;
				}
				else if ($es4.$$is(source, DisplayObject))
				{
					sourceCanvas = ($es4.$$as(source, DisplayObject)).$__properties().DisplayObjectScope.$_toCanvas();
				}
				else if (($es4.$$is(source, BitmapData)))
				{
					sourceCanvas = BitmapData.$_createOrGetCanvas($es4.$$as(source, BitmapData));
				}
				else
				{
					throw $es4.$$primitive(new Error('bitmapdata draw implementation only supports a ibitmapdrawable source of type bitmapdata'));
				}
				if (!matrix)
				{
					matrix = $es4.$$primitive(new Matrix());
					matrix.identity();
				}
				if (!clipRect)
				{
					clipRect = $es4.$$primitive(new Rectangle(0, 0, sourceCanvas.width, sourceCanvas.height));
				}
				var canvas = BitmapData.$_createOrGetCanvas($$this);
				var context = canvas.getContext('2d');
				context.save();
				context.imageSmoothingEnabled = smoothing;
				context.mozImageSmoothingEnabled = smoothing;
				context.beginPath();
				context.rect(clipRect.x, clipRect.y, clipRect.width, clipRect.height);
				context.clip();
				context.setTransform(matrix.a, matrix.b, matrix.c, matrix.d, matrix.tx, matrix.ty);
				context.drawImage(sourceCanvas, 0, 0);
				context.closePath();
				context.restore();
			}

			return $$this.$$BitmapData.$$draw || ($$this.$$BitmapData.$$draw = draw);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'fillRect', {
		get:function ()
		{
			var $$this = this;

			function fillRect($$$$rect, $$$$argb)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);
				var argb = $es4.$$coerce($$$$argb, uint);

				var canvas = BitmapData.$_createOrGetCanvas($$this);
				var context = canvas.getContext('2d');
				var alpha = $es4.$$coerce(argb >> 24, int);
				var red = $es4.$$coerce(argb >> 16 & 0xff, int);
				var green = $es4.$$coerce(argb >> 8 & 0xff, int);
				var blue = $es4.$$coerce(argb & 0xff, int);
				context.fillStyle = 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';
				context.clearRect(rect.x, rect.y, rect.width, rect.height);
				context.fillRect(rect.x, rect.y, rect.width, rect.height);
			}

			return $$this.$$BitmapData.$$fillRect || ($$this.$$BitmapData.$$fillRect = fillRect);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'floodFill', {
		get:function ()
		{
			var $$this = this;

			function floodFill($$$$x, $$$$y, $$$$color)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);
				var color = $es4.$$coerce($$$$color, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "floodFill"'));
			}

			return $$this.$$BitmapData.$$floodFill || ($$this.$$BitmapData.$$floodFill = floodFill);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'generateFilterRect', {
		get:function ()
		{
			var $$this = this;

			function generateFilterRect($$$$sourceRect, $$$$filter)
			{
				//set default parameter values
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var filter = $es4.$$coerce($$$$filter, BitmapFilter);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "generateFilterRect"'));
			}

			return $$this.$$BitmapData.$$generateFilterRect || ($$this.$$BitmapData.$$generateFilterRect = generateFilterRect);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'getColorBoundsRect', {
		get:function ()
		{
			var $$this = this;

			function getColorBoundsRect($$$$mask, $$$$color, $$$$findColor)
			{
				//set default parameter values
				var mask = $es4.$$coerce($$$$mask, uint);
				var color = $es4.$$coerce($$$$color, uint);
				var findColor = (2 > arguments.length - 1) ? true : $es4.$$coerce($$$$findColor, Boolean);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "getColorBoundsRect"'));
			}

			return $$this.$$BitmapData.$$getColorBoundsRect || ($$this.$$BitmapData.$$getColorBoundsRect = getColorBoundsRect);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'getPixel', {
		get:function ()
		{
			var $$this = this;

			function getPixel($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "getPixel"'));
			}

			return $$this.$$BitmapData.$$getPixel || ($$this.$$BitmapData.$$getPixel = getPixel);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'getPixel32', {
		get:function ()
		{
			var $$this = this;

			function getPixel32($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "getPixel32"'));
			}

			return $$this.$$BitmapData.$$getPixel32 || ($$this.$$BitmapData.$$getPixel32 = getPixel32);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'getPixels', {
		get:function ()
		{
			var $$this = this;

			function getPixels($$$$rect)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "getPixels"'));
			}

			return $$this.$$BitmapData.$$getPixels || ($$this.$$BitmapData.$$getPixels = getPixels);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'getVector', {
		get:function ()
		{
			var $$this = this;

			function getVector($$$$rect)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "getVector"'));
			}

			return $$this.$$BitmapData.$$getVector || ($$this.$$BitmapData.$$getVector = getVector);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'histogram', {
		get:function ()
		{
			var $$this = this;

			function histogram($$$$hRect)
			{
				//set default parameter values
				var hRect = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$hRect, Rectangle);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "histogram"'));
			}

			return $$this.$$BitmapData.$$histogram || ($$this.$$BitmapData.$$histogram = histogram);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'hitTest', {
		get:function ()
		{
			var $$this = this;

			function hitTest($$$$firstPoint, $$$$firstAlphaThreshold, $$$$secondObject, $$$$secondBitmapDataPoint, $$$$secondAlphaThreshold)
			{
				//set default parameter values
				var firstPoint = $es4.$$coerce($$$$firstPoint, Point);
				var firstAlphaThreshold = $es4.$$coerce($$$$firstAlphaThreshold, uint);
				var secondObject = $es4.$$coerce($$$$secondObject, Object);
				var secondBitmapDataPoint = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$secondBitmapDataPoint, Point);
				var secondAlphaThreshold = (4 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$secondAlphaThreshold, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "hitTest"'));
			}

			return $$this.$$BitmapData.$$hitTest || ($$this.$$BitmapData.$$hitTest = hitTest);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'lock', {
		get:function ()
		{
			var $$this = this;

			function lock()
			{
				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "lock"'));
			}

			return $$this.$$BitmapData.$$lock || ($$this.$$BitmapData.$$lock = lock);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'merge', {
		get:function ()
		{
			var $$this = this;

			function merge($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$redMultiplier, $$$$greenMultiplier, $$$$blueMultiplier, $$$$alphaMultiplier)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var redMultiplier = $es4.$$coerce($$$$redMultiplier, uint);
				var greenMultiplier = $es4.$$coerce($$$$greenMultiplier, uint);
				var blueMultiplier = $es4.$$coerce($$$$blueMultiplier, uint);
				var alphaMultiplier = $es4.$$coerce($$$$alphaMultiplier, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "merge"'));
			}

			return $$this.$$BitmapData.$$merge || ($$this.$$BitmapData.$$merge = merge);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'noise', {
		get:function ()
		{
			var $$this = this;

			function noise($$$$randomSeed, $$$$low, $$$$high, $$$$channelOptions, $$$$grayScale)
			{
				//set default parameter values
				var randomSeed = $es4.$$coerce($$$$randomSeed, int);
				var low = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$low, uint);
				var high = (2 > arguments.length - 1) ? 255 : $es4.$$coerce($$$$high, uint);
				var channelOptions = (3 > arguments.length - 1) ? 7 : $es4.$$coerce($$$$channelOptions, uint);
				var grayScale = (4 > arguments.length - 1) ? false : $es4.$$coerce($$$$grayScale, Boolean);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "noise"'));
			}

			return $$this.$$BitmapData.$$noise || ($$this.$$BitmapData.$$noise = noise);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'paletteMap', {
		get:function ()
		{
			var $$this = this;

			function paletteMap($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$redArray, $$$$greenArray, $$$$blueArray, $$$$alphaArray)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var redArray = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$redArray, Array);
				var greenArray = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$greenArray, Array);
				var blueArray = (5 > arguments.length - 1) ? null : $es4.$$coerce($$$$blueArray, Array);
				var alphaArray = (6 > arguments.length - 1) ? null : $es4.$$coerce($$$$alphaArray, Array);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "paletteMap"'));
			}

			return $$this.$$BitmapData.$$paletteMap || ($$this.$$BitmapData.$$paletteMap = paletteMap);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'perlinNoise', {
		get:function ()
		{
			var $$this = this;

			function perlinNoise($$$$baseX, $$$$baseY, $$$$numOctaves, $$$$randomSeed, $$$$stitch, $$$$fractalNoise, $$$$channelOptions, $$$$grayScale, $$$$offsets)
			{
				//set default parameter values
				var baseX = $es4.$$coerce($$$$baseX, Number);
				var baseY = $es4.$$coerce($$$$baseY, Number);
				var numOctaves = $es4.$$coerce($$$$numOctaves, uint);
				var randomSeed = $es4.$$coerce($$$$randomSeed, int);
				var stitch = $es4.$$coerce($$$$stitch, Boolean);
				var fractalNoise = $es4.$$coerce($$$$fractalNoise, Boolean);
				var channelOptions = (6 > arguments.length - 1) ? 7 : $es4.$$coerce($$$$channelOptions, uint);
				var grayScale = (7 > arguments.length - 1) ? false : $es4.$$coerce($$$$grayScale, Boolean);
				var offsets = (8 > arguments.length - 1) ? null : $es4.$$coerce($$$$offsets, Array);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "perlinNoise"'));
			}

			return $$this.$$BitmapData.$$perlinNoise || ($$this.$$BitmapData.$$perlinNoise = perlinNoise);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'pixelDissolve', {
		get:function ()
		{
			var $$this = this;

			function pixelDissolve($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$randomSeed, $$$$numPixels, $$$$fillColor)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var randomSeed = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$randomSeed, int);
				var numPixels = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$numPixels, int);
				var fillColor = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$fillColor, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "pixelDissolve"'));
			}

			return $$this.$$BitmapData.$$pixelDissolve || ($$this.$$BitmapData.$$pixelDissolve = pixelDissolve);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'scroll', {
		get:function ()
		{
			var $$this = this;

			function scroll($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "scroll"'));
			}

			return $$this.$$BitmapData.$$scroll || ($$this.$$BitmapData.$$scroll = scroll);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'setPixel', {
		get:function ()
		{
			var $$this = this;

			function setPixel($$$$x, $$$$y, $$$$color)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);
				var color = $es4.$$coerce($$$$color, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "setPixel"'));
			}

			return $$this.$$BitmapData.$$setPixel || ($$this.$$BitmapData.$$setPixel = setPixel);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'setPixel32', {
		get:function ()
		{
			var $$this = this;

			function setPixel32($$$$x, $$$$y, $$$$color)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, int);
				var y = $es4.$$coerce($$$$y, int);
				var color = $es4.$$coerce($$$$color, uint);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "setPixel32"'));
			}

			return $$this.$$BitmapData.$$setPixel32 || ($$this.$$BitmapData.$$setPixel32 = setPixel32);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'setPixels', {
		get:function ()
		{
			var $$this = this;

			function setPixels($$$$rect, $$$$inputByteArray)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);
				var inputByteArray = $es4.$$coerce($$$$inputByteArray, ByteArray);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "setPixels"'));
			}

			return $$this.$$BitmapData.$$setPixels || ($$this.$$BitmapData.$$setPixels = setPixels);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'setVector', {
		get:function ()
		{
			var $$this = this;

			function setVector($$$$rect, $$$$inputVector)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, Rectangle);
				var inputVector = $es4.$$coerce($$$$inputVector, Array);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "setVector"'));
			}

			return $$this.$$BitmapData.$$setVector || ($$this.$$BitmapData.$$setVector = setVector);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'threshold', {
		get:function ()
		{
			var $$this = this;

			function threshold($$$$sourceBitmapData, $$$$sourceRect, $$$$destPoint, $$$$operation, $$$$threshold, $$$$color, $$$$mask, $$$$copySource)
			{
				//set default parameter values
				var sourceBitmapData = $es4.$$coerce($$$$sourceBitmapData, $es4.$$['flash.display'].BitmapData);
				var sourceRect = $es4.$$coerce($$$$sourceRect, Rectangle);
				var destPoint = $es4.$$coerce($$$$destPoint, Point);
				var operation = $es4.$$coerce($$$$operation, String);
				var threshold = $es4.$$coerce($$$$threshold, uint);
				var color = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$color, uint);
				var mask = (6 > arguments.length - 1) ? 4294967295 : $es4.$$coerce($$$$mask, uint);
				var copySource = (7 > arguments.length - 1) ? false : $es4.$$coerce($$$$copySource, Boolean);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "threshold"'));
			}

			return $$this.$$BitmapData.$$threshold || ($$this.$$BitmapData.$$threshold = threshold);
		}});


		//public instance method
		Object.defineProperty(BitmapData.prototype, 'unlock', {
		get:function ()
		{
			var $$this = this;

			function unlock($$$$changeRect)
			{
				//set default parameter values
				var changeRect = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$changeRect, Rectangle);

				throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "unlock"'));
			}

			return $$this.$$BitmapData.$$unlock || ($$this.$$BitmapData.$$unlock = unlock);
		}});

		Object.defineProperty(BitmapData.prototype, 'height', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$BitmapData.$_properties.BitmapDataScope.$_height, int);
		}});
		Object.defineProperty(BitmapData.prototype, 'rect', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('BitmapData: attempted call to an unimplemented function "rect"'));
		}});
		Object.defineProperty(BitmapData.prototype, 'transparent', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$BitmapData.$_properties.BitmapDataScope.$_transparent, Boolean);
		}});
		Object.defineProperty(BitmapData.prototype, 'width', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$BitmapData.$_properties.BitmapDataScope.$_width, int);
		}});

		//properties
		BitmapData.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$BitmapData.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$BitmapData.$$p.$_properties = value }
		};

	});

	//class initializer
	BitmapData.$$cinit = (function ()
	{
		BitmapData.$$cinit = undefined;
	});

	//private static method
	BitmapData.$_createOrGetCanvas = (function ($$$$bitmapData)
	{
		if (BitmapData.$$cinit !== undefined) BitmapData.$$cinit();

		//set default parameter values
		var bitmapData = $es4.$$coerce($$$$bitmapData, $es4.$$['flash.display'].BitmapData);

		var properties = bitmapData.$__properties().BitmapDataScope;
		if (!properties.$_canvas)
		{
			var canvas = document.createElement('canvas');
			canvas.width = properties.$_width;
			canvas.height = properties.$_height;
			var context = canvas.getContext('2d');
			context.rect(0, 0, properties.$_width, properties.$_height);
			var argb = $es4.$$coerce(properties.$_fillColor, uint);
			var alpha = $es4.$$coerce(argb >> 24, int);
			var red = $es4.$$coerce(argb >> 16 & 0xff, int);
			var green = $es4.$$coerce(argb >> 8 & 0xff, int);
			var blue = $es4.$$coerce(argb & 0xff, int);
			context.fillStyle = 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';
			context.fill();
			properties.$_canvas = canvas;
		}
		return properties.$_canvas;
	});
	function BitmapData()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof BitmapData) || $$this.$$BitmapData !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], BitmapData) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			BitmapData.$$construct($$this, $$args);
		}
	}

	//construct
	BitmapData.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (BitmapData.$$cinit !== undefined) BitmapData.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$BitmapData', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$BitmapData, '$_properties', BitmapData.prototype.$$v.$_properties);

		//initialize properties
		BitmapData.$$iinit($$this);

		//call constructor
		if (args !== undefined) BitmapData.$$constructor.apply($$this, args);
	});

	//initializer
	BitmapData.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$BitmapData.$$p.$_properties = undefined;
	
	});

	//constructor
	BitmapData.$$constructor = (function ($$$$width, $$$$height, $$$$transparent, $$$$fillColor)
	{
		var $$this = this;
		//set default parameter values
		var width = $es4.$$coerce($$$$width, int);
		var height = $es4.$$coerce($$$$height, int);
		var transparent = (2 > arguments.length - 1) ? true : $es4.$$coerce($$$$transparent, Boolean);
		var fillColor = (3 > arguments.length - 1) ? 0xFFFFFFFF : $es4.$$coerce($$$$fillColor, uint);

		var properties = $$this.$$BitmapData.$_properties || $$this.$__properties({});
		properties.BitmapDataScope.$_width = width;
		properties.BitmapDataScope.$_height = height;
		properties.BitmapDataScope.$_transparent = transparent;
		properties.BitmapDataScope.$_fillColor = fillColor;
	});

	return $es4.$$class(BitmapData, {IMPLEMENTS:['flash.display.IBitmapDrawable']}, 'flash.display::BitmapData');
})();
//flash.display.BitmapData


//flash.display.BitmapDataChannel
$$package('flash.display').BitmapDataChannel = function () { throw new Error('Use of unimplemented class: BitmapDataChannel'); }
//flash.display.BitmapDataChannel


//flash.display.BlendMode
$$package('flash.display').BlendMode = function () { throw new Error('Use of unimplemented class: BlendMode'); }
//flash.display.BlendMode


//flash.display.CapsStyle
$es4.$$package('flash.display').CapsStyle = (function ()
{
	//properties
	var $$j = {};
	CapsStyle.NONE = "none";
	CapsStyle.ROUND = "round";
	CapsStyle.SQUARE = "square";

	//class pre initializer
	CapsStyle.$$sinit = (function ()
	{
		CapsStyle.$$sinit = undefined;

		//set prototype and constructor
		CapsStyle.prototype = Object.create(Object.prototype);
		Object.defineProperty(CapsStyle.prototype, "constructor", { value: CapsStyle, enumerable: false });

		//hold private values
		Object.defineProperty(CapsStyle.prototype, '$$v', {value:{}});
	});

	//class initializer
	CapsStyle.$$cinit = (function ()
	{
		CapsStyle.$$cinit = undefined;
	});

	function CapsStyle()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof CapsStyle) || $$this.$$CapsStyle !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], CapsStyle) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			CapsStyle.$$construct($$this, $$args);
		}
	}

	//construct
	CapsStyle.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (CapsStyle.$$cinit !== undefined) CapsStyle.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$CapsStyle', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		CapsStyle.$$iinit($$this);

		//call constructor
		if (args !== undefined) CapsStyle.$$constructor.apply($$this, args);
	});

	//initializer
	CapsStyle.$$iinit = (function ($$this)
	{
	});

	//constructor
	CapsStyle.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(CapsStyle, null, 'flash.display::CapsStyle');
})();
//flash.display.CapsStyle


//flash.display.ColorCorrection
$es4.$$package('flash.display').ColorCorrection = (function ()
{
	//properties
	var $$j = {};
	ColorCorrection.DEFAULT = "default";
	ColorCorrection.OFF = "off";
	ColorCorrection.ON = "on";

	//class pre initializer
	ColorCorrection.$$sinit = (function ()
	{
		ColorCorrection.$$sinit = undefined;

		//set prototype and constructor
		ColorCorrection.prototype = Object.create(Object.prototype);
		Object.defineProperty(ColorCorrection.prototype, "constructor", { value: ColorCorrection, enumerable: false });

		//hold private values
		Object.defineProperty(ColorCorrection.prototype, '$$v', {value:{}});
	});

	//class initializer
	ColorCorrection.$$cinit = (function ()
	{
		ColorCorrection.$$cinit = undefined;
	});

	function ColorCorrection()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ColorCorrection) || $$this.$$ColorCorrection !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ColorCorrection) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ColorCorrection.$$construct($$this, $$args);
		}
	}

	//construct
	ColorCorrection.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ColorCorrection.$$cinit !== undefined) ColorCorrection.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ColorCorrection', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ColorCorrection.$$iinit($$this);

		//call constructor
		if (args !== undefined) ColorCorrection.$$constructor.apply($$this, args);
	});

	//initializer
	ColorCorrection.$$iinit = (function ($$this)
	{
	});

	//constructor
	ColorCorrection.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(ColorCorrection, null, 'flash.display::ColorCorrection');
})();
//flash.display.ColorCorrection


//flash.display.ColorCorrectionSupport
$es4.$$package('flash.display').ColorCorrectionSupport = (function ()
{
	//properties
	var $$j = {};
	ColorCorrectionSupport.DEFAULT_OFF = "defaultOff";
	ColorCorrectionSupport.DEFAULT_ON = "defaultOn";
	ColorCorrectionSupport.UNSUPPORTED = "unsupported";

	//class pre initializer
	ColorCorrectionSupport.$$sinit = (function ()
	{
		ColorCorrectionSupport.$$sinit = undefined;

		//set prototype and constructor
		ColorCorrectionSupport.prototype = Object.create(Object.prototype);
		Object.defineProperty(ColorCorrectionSupport.prototype, "constructor", { value: ColorCorrectionSupport, enumerable: false });

		//hold private values
		Object.defineProperty(ColorCorrectionSupport.prototype, '$$v', {value:{}});
	});

	//class initializer
	ColorCorrectionSupport.$$cinit = (function ()
	{
		ColorCorrectionSupport.$$cinit = undefined;
	});

	function ColorCorrectionSupport()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ColorCorrectionSupport) || $$this.$$ColorCorrectionSupport !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ColorCorrectionSupport) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ColorCorrectionSupport.$$construct($$this, $$args);
		}
	}

	//construct
	ColorCorrectionSupport.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ColorCorrectionSupport.$$cinit !== undefined) ColorCorrectionSupport.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ColorCorrectionSupport', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ColorCorrectionSupport.$$iinit($$this);

		//call constructor
		if (args !== undefined) ColorCorrectionSupport.$$constructor.apply($$this, args);
	});

	//initializer
	ColorCorrectionSupport.$$iinit = (function ($$this)
	{
	});

	//constructor
	ColorCorrectionSupport.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(ColorCorrectionSupport, null, 'flash.display::ColorCorrectionSupport');
})();
//flash.display.ColorCorrectionSupport


//flash.display.DisplayObject
$es4.$$package('flash.display').DisplayObject = (function ()
{
	//imports
	var AccessibilityProperties;
	var enterDebugger;
	var DisplayObjectContainer;
	var IBitmapDrawable;
	var LoaderInfo;
	var Shader;
	var Stage;
	var EventDispatcher;
	var Matrix;
	var Point;
	var Rectangle;
	var Transform;
	var Vector3D;
	var Browser;
	var DisplayObject;

	//properties
	var $$j = {};
	Object.defineProperty(DisplayObject, '$_instanceCounter', {
	get:function () { if (DisplayObject.$$cinit !== undefined) DisplayObject.$$cinit(); return $$j.$_instanceCounter; },
	set:function (value) { if (DisplayObject.$$cinit !== undefined) DisplayObject.$$cinit(); $$j.$_instanceCounter = $es4.$$coerce(value, int); }
	});


	//class pre initializer
	DisplayObject.$$sinit = (function ()
	{
		DisplayObject.$$sinit = undefined;

		//initialize imports
		AccessibilityProperties = $es4.$$['flash.accessibility'].AccessibilityProperties;
		enterDebugger = $es4.$$['flash.debugger'].enterDebugger;
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;
		IBitmapDrawable = $es4.$$['flash.display'].IBitmapDrawable;
		LoaderInfo = $es4.$$['flash.display'].LoaderInfo;
		Shader = $es4.$$['flash.display'].Shader;
		Stage = $es4.$$['flash.display'].Stage;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		Matrix = $es4.$$['flash.geom'].Matrix;
		Point = $es4.$$['flash.geom'].Point;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		Transform = $es4.$$['flash.geom'].Transform;
		Vector3D = $es4.$$['flash.geom'].Vector3D;
		Browser = $es4.$$['browser'].Browser;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		DisplayObject.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(DisplayObject.prototype, "constructor", { value: DisplayObject, enumerable: false });

		//hold private values
		Object.defineProperty(DisplayObject.prototype, '$$v', {value:{}});

		//protected instance method
		Object.defineProperty(DisplayObject.prototype, '$__createDomView', {
		get:function ()
		{
			var $$this = this;

			function $__createDomView()
			{
				return document.createElement('div');
			}

			return $$this.$$DisplayObject.$$$__createDomView || ($$this.$$DisplayObject.$$$__createDomView = $__createDomView);
		}});


		//internal instance method
		Object.defineProperty(DisplayObject.prototype, '$__addDomGraphicsView', {
		get:function ()
		{
			var $$this = this;

			function $__addDomGraphicsView($$$$domGraphicsView)
			{
				//set default parameter values
				var domGraphicsView = $es4.$$coerce($$$$domGraphicsView, Object);

				$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domGraphicsView = domGraphicsView;
				$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView.appendChild(domGraphicsView);
				if ($$this.$$DisplayObject.$_properties.DisplayObjectScope.accessibilityProperties)
				{
					$$this.$$DisplayObject.$_properties.DisplayObjectScope.accessibilityProperties.$_applyProperties(domGraphicsView);
				}
			}

			return $$this.$$DisplayObject.$$$__addDomGraphicsView || ($$this.$$DisplayObject.$$$__addDomGraphicsView = $__addDomGraphicsView);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$DisplayObject.$_properties === undefined)
				{
					object = $es4.$$super2($$this, EventDispatcher, '$$EventDispatcher', '$__properties', 'func', undefined)(object);
					var pscope = $es4.$$getOwnScope($$this, DisplayObject);
					var id = 'instance' + (DisplayObject.$_instanceCounter++);
					var matrix = $es4.$$primitive(new Matrix());
					object.DisplayObjectScope = {pscope:pscope, $_id:id, $_sudoScaleX:1, $_sudoScaleY:1, $_sudoRotation:0, $_childBoundsData:{}, $_matrix:matrix, $_scaleX:1, $_scaleY:1, $_rotation:0, $_x:0, $_y:0, $_x1:0, $_y1:0, $_width:0, $_height:0, $_bounds:[0, 0, 0, 0], $_onChildBoundsChange:$$this.$$DisplayObject.$_onChildBoundsChange, $_notifyParentOfBoundsChange:$$this.$$DisplayObject.$_notifyParentOfBoundsChange, $_setExplicitBounds:$$this.$$DisplayObject.$_setExplicitBounds, $_scrollRectXOffset:0, $_scrollRectYOffset:0, $_opacity:1, $_visible:true, $_cacheAsBitmap:false, $_toCanvas:$$this.$$DisplayObject.$_toCanvas, $_scrollRect:null};
					object.TLScope = $$this;
					return $$this.$$DisplayObject.$_properties = object;
				}
				return $$this.$$DisplayObject.$_properties;
			}

			return $$this.$$DisplayObject.$$$__properties || ($$this.$$DisplayObject.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

			}

			return $$this.$$DisplayObject.$$$__notify || ($$this.$$DisplayObject.$$$__notify = $__notify);
		}});


		//private instance method
		DisplayObject.prototype.$$v.$_setExplicitBounds = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_setExplicitBounds($$$$width, $$$$height)
			{
				//set default parameter values
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);

				var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				scope.$_width = width;
				scope.$_height = height;
				$$this.$$DisplayObject.$_recalculateBounds();
			}

			return $$this.$$DisplayObject.$$p.$$$_setExplicitBounds || ($$this.$$DisplayObject.$$p.$$$_setExplicitBounds = $_setExplicitBounds);
		}};


		//private instance method
		DisplayObject.prototype.$$v.$_notifyParentOfBoundsChange = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_notifyParentOfBoundsChange()
			{
				var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var domView = scope.$_domView;
				var parent = domView.parentNode ? domView.parentNode.displayObject : null;
				if (!parent)
				{
					return;
				}
				if (scope.$_visible === true)
				{
					$$this.$$DisplayObject.$_transform();
				}
				var parentScope = parent.$__properties().DisplayObjectScope;
				parentScope.$_onChildBoundsChange(scope.$_id, scope.$_height !== 0 || scope.$_width !== 0 || scope.$_scrollRect !== null ? scope.$_bounds : null);
			}

			return $$this.$$DisplayObject.$$p.$$$_notifyParentOfBoundsChange || ($$this.$$DisplayObject.$$p.$$$_notifyParentOfBoundsChange = $_notifyParentOfBoundsChange);
		}};


		//private instance method
		DisplayObject.prototype.$$v.$_onChildBoundsChange = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_onChildBoundsChange($$$$childID, $$$$bounds)
			{
				//set default parameter values
				var childID = $$$$childID;
				var bounds = $$$$bounds;

				var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var childBoundsData = scope.$_childBoundsData;
				if (!bounds)
				{
					delete childBoundsData[childID];
				}
				else
				{
					childBoundsData[childID] = bounds.slice();
				}
				$$this.$$DisplayObject.$_recalculateChildBasedBounds();
			}

			return $$this.$$DisplayObject.$$p.$$$_onChildBoundsChange || ($$this.$$DisplayObject.$$p.$$$_onChildBoundsChange = $_onChildBoundsChange);
		}};


		//private instance method
		DisplayObject.prototype.$$v.$_recalculateChildBasedBounds = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_recalculateChildBasedBounds()
			{
				var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var childBoundsData = scope.$_childBoundsData;
				var x1 = Number.POSITIVE_INFINITY;
				var y1 = Number.POSITIVE_INFINITY;
				var x2 = Number.NEGATIVE_INFINITY;
				var y2 = Number.NEGATIVE_INFINITY;
				var x = 0;
				var y = 0;
				var width = 0;
				var height = 0;
				var abs = Math.abs;
				for (var eachChildID in childBoundsData)
				{
					var eachBounds = childBoundsData[eachChildID];
					var innerX = eachBounds[0];
					var innerY = eachBounds[1];
					if (innerX < x1)
					{
						x1 = innerX;
					}
					if (innerY < y1)
					{
						y1 = innerY;
					}
					if (innerX + eachBounds[2] > x2)
					{
						x2 = innerX + eachBounds[2];
					}
					if (innerY + eachBounds[3] > y2)
					{
						y2 = innerY + eachBounds[3];
					}
				}
				if (x1 === Number.POSITIVE_INFINITY)
				{
					scope.$_x1 = scope.$_x;
					scope.$_y1 = scope.$_y;
					$$this.$$DisplayObject.$_recalculateBounds();
					return;
				}
				x = x1 + scope.$_x;
				y = y1 + scope.$_y;
				width = abs(x2 - x1);
				height = abs(y2 - y1);
				if (height === scope.$_height && width === scope.$_width && x === scope.$_x1 && y === scope.$_y1)
				{
					return;
				}
				scope.$_x1 = x;
				scope.$_y1 = y;
				scope.$_height = height;
				scope.$_width = width;
				if (scope.$_scrollRect !== null)
				{
					$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
					return;
				}
				$$this.$$DisplayObject.$_recalculateBounds();
			}

			return $$this.$$DisplayObject.$$p.$$$_recalculateChildBasedBounds || ($$this.$$DisplayObject.$$p.$$$_recalculateChildBasedBounds = $_recalculateChildBasedBounds);
		}};


		//private instance method
		DisplayObject.prototype.$$v.$_recalculateBounds = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_recalculateBounds()
			{
				var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var matrix = scope.$_matrix;
				var width = scope.$_scrollRect !== null ? scope.$_scrollRect.width : scope.$_width;
				var height = scope.$_scrollRect !== null ? scope.$_scrollRect.height : scope.$_height;
				var rotation = scope.$_rotation;
				var value;
				var bounds = scope.$_bounds;
				if (rotation)
				{
					var xDiff = $es4.$$coerce(scope.$_x1 - scope.$_x, Number);
					var yDiff = $es4.$$coerce(scope.$_y1 - scope.$_y, Number);
					var point1 = matrix.$__transformPoint(xDiff, yDiff);
					var point2 = matrix.$__transformPoint(xDiff + width, yDiff);
					var point3 = matrix.$__transformPoint(xDiff + width, yDiff + height);
					var point4 = matrix.$__transformPoint(xDiff, yDiff + height);
					var left = Math.min(point1[0], point2[0], point3[0], point4[0]);
					var right = Math.max(point1[0], point2[0], point3[0], point4[0]);
					var top = Math.min(point1[1], point2[1], point3[1], point4[1]);
					var bottom = Math.max(point1[1], point2[1], point3[1], point4[1]);
					var x2 = right - left;
					var y2 = bottom - top;
					bounds[0] = left;
					bounds[1] = top;
					bounds[2] = x2;
					bounds[3] = y2;
				}
				else
				{
					value = matrix.$__transformPoint(scope.$_x1 - scope.$_x, 0)[0];
					bounds[0] = value;
					value = matrix.$__transformPoint(0, scope.$_y1 - scope.$_y)[1];
					bounds[1] = value;
					value = matrix.$__deltaTransformPoint(width, 0)[0];
					bounds[2] = value;
					value = matrix.$__deltaTransformPoint(0, height)[1];
					bounds[3] = value;
				}
				$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
			}

			return $$this.$$DisplayObject.$$p.$$$_recalculateBounds || ($$this.$$DisplayObject.$$p.$$$_recalculateBounds = $_recalculateBounds);
		}};


		//private instance method
		DisplayObject.prototype.$$v.$_transform = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_transform()
			{
				var properties = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var previousTransformValues = $$this.$$DisplayObject.$_previousTransformValues;
				var style = properties.$_domView.style;
				var cacheAsBitmap = $es4.$$coerce(properties.$_cacheAsBitmap, Boolean);
				if (cacheAsBitmap)
				{
					if (previousTransformValues.rotation != properties.$_rotation || previousTransformValues.scaleX != properties.$_scaleX || previousTransformValues.scaleY != properties.$_scaleY || previousTransformValues.x != (properties.$_x + properties.$_scrollRectXOffset) || previousTransformValues.y != (properties.$_y + properties.$_scrollRectYOffset))
					{
						style[Browser.getTransformString()] = 'translate3d(' + (properties.$_x + properties.$_scrollRectXOffset) + 'px, ' + (properties.$_y + properties.$_scrollRectYOffset) + 'px, 0px) rotate3d(0, 0, 1,' + properties.$_rotation + 'deg) scale3d(' + properties.$_scaleX + ',' + properties.$_scaleY + ', 1)';
						previousTransformValues.y = properties.$_y + properties.$_scrollRectYOffset;
						previousTransformValues.x = properties.$_x + properties.$_scrollRectXOffset;
						previousTransformValues.rotation = properties.$_rotation;
						previousTransformValues.scaleX = properties.$_scaleX;
						previousTransformValues.scaleY = properties.$_scaleY;
					}
					return;
				}
				if (previousTransformValues.x != (properties.$_x + properties.$_scrollRectXOffset))
				{
					style.left = (properties.$_x + properties.$_scrollRectXOffset) + 'px';
					previousTransformValues.x = properties.$_x + properties.$_scrollRectXOffset;
				}
				if (previousTransformValues.y != (properties.$_y + properties.$_scrollRectYOffset))
				{
					style.top = (properties.$_y + properties.$_scrollRectYOffset) + 'px';
					previousTransformValues.y = properties.$_y + properties.$_scrollRectYOffset;
				}
				if (previousTransformValues.rotation != properties.$_rotation || previousTransformValues.scaleX != properties.$_scaleX || previousTransformValues.scaleY != properties.$_scaleY)
				{
					style[Browser.getTransformString()] = 'rotate(' + properties.$_rotation + 'deg) scale(' + properties.$_scaleX + ',' + properties.$_scaleY + ')';
					previousTransformValues.rotation = properties.$_rotation;
					previousTransformValues.scaleX = properties.$_scaleX;
					previousTransformValues.scaleY = properties.$_scaleY;
				}
			}

			return $$this.$$DisplayObject.$$p.$$$_transform || ($$this.$$DisplayObject.$$p.$$$_transform = $_transform);
		}};


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'localToGlobal', {
		get:function ()
		{
			var $$this = this;

			function localToGlobal($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				if ($es4.$$is($$this, Stage))
				{
					return point.clone();
				}
				var thisScope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var thisBoundsRelativeToParent = thisScope.$_bounds;
				var current = null;
				var currentScope;
				var width = thisScope.$_width;
				var height = thisScope.$_height;
				var value;
				var x1;
				var y1;
				var thisMatrix = $es4.$$coerce(thisScope.$_matrix.clone(), Matrix);
				current = $es4.$$coerce(thisScope.$_domView.parentNode ? thisScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				while (current !== null)
				{
					currentScope = current.$__properties().DisplayObjectScope;
					thisMatrix.concat(currentScope.$_matrix);
					current = $es4.$$coerce(currentScope.$_domView.parentNode ? currentScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				}
				var xDiff = 0;
				var yDiff = 0;
				var array = thisMatrix.$__transformPoint(xDiff + point.x, yDiff + point.y);
				value = array[0];
				x1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				value = array[1];
				y1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				return $es4.$$primitive(new Point(x1, y1));
			}

			return $$this.$$DisplayObject.$$localToGlobal || ($$this.$$DisplayObject.$$localToGlobal = localToGlobal);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'globalToLocal', {
		get:function ()
		{
			var $$this = this;

			function globalToLocal($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				if ($es4.$$is($$this, Stage))
				{
					return point.clone();
				}
				var thisScope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var thisBoundsRelativeToParent = thisScope.$_bounds;
				var current = null;
				var currentScope;
				var width = thisScope.$_width;
				var height = thisScope.$_height;
				var value;
				var x1;
				var y1;
				var thisMatrix = $es4.$$coerce(thisScope.$_matrix.clone(), Matrix);
				current = $es4.$$coerce(thisScope.$_domView.parentNode ? thisScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				while (current !== null)
				{
					currentScope = current.$__properties().DisplayObjectScope;
					thisMatrix.concat(currentScope.$_matrix);
					current = $es4.$$coerce(currentScope.$_domView.parentNode ? currentScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				}
				thisMatrix.invert();
				var xDiff = 0;
				var yDiff = 0;
				var array = thisMatrix.$__transformPoint(xDiff + point.x, yDiff + point.y);
				value = array[0];
				x1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				value = array[1];
				y1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				return $es4.$$primitive(new Point(x1, y1));
			}

			return $$this.$$DisplayObject.$$globalToLocal || ($$this.$$DisplayObject.$$globalToLocal = globalToLocal);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'hitTestObject', {
		get:function ()
		{
			var $$this = this;

			function hitTestObject($$$$obj)
			{
				//set default parameter values
				var obj = $es4.$$coerce($$$$obj, $es4.$$['flash.display'].DisplayObject);

				throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "hitTestObject"'));
			}

			return $$this.$$DisplayObject.$$hitTestObject || ($$this.$$DisplayObject.$$hitTestObject = hitTestObject);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'hitTestPoint', {
		get:function ()
		{
			var $$this = this;

			function hitTestPoint($$$$x, $$$$y, $$$$shapeFlag)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var shapeFlag = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$shapeFlag, Boolean);

				throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "hitTestPoint"'));
			}

			return $$this.$$DisplayObject.$$hitTestPoint || ($$this.$$DisplayObject.$$hitTestPoint = hitTestPoint);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'getBounds', {
		get:function ()
		{
			var $$this = this;

			function getBounds($$$$targetCoordinateSpace)
			{
				//set default parameter values
				var targetCoordinateSpace = $es4.$$coerce($$$$targetCoordinateSpace, $es4.$$['flash.display'].DisplayObject);

				targetCoordinateSpace = $es4.$$coerce(targetCoordinateSpace || $$this, $es4.$$['flash.display'].DisplayObject);
				var thisScope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
				var thisBoundsRelativeToParent = thisScope.$_bounds;
				var targetScope = targetCoordinateSpace.$__properties().DisplayObjectScope;
				var targetBoundsRelativeToParent = targetScope.$_bounds;
				var x1;
				var y1;
				var x2;
				var y2;
				var width = thisScope.$_width;
				var height = thisScope.$_height;
				var value;
				if (targetCoordinateSpace === $$this)
				{
					value = thisScope.$_x1 - thisScope.$_x;
					x1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
					value = thisScope.$_y1 - thisScope.$_y;
					y1 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
					value = width;
					x2 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
					value = height;
					y2 = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
					return $es4.$$primitive(new Rectangle(x1, y1, x2, y2));
				}
				var current = null;
				var currentScope;
				var matrix = null;
				var thisMatrix = $es4.$$coerce(thisScope.$_matrix.clone(), Matrix);
				current = $es4.$$coerce(thisScope.$_domView.parentNode ? thisScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				while (current !== null && current !== targetCoordinateSpace)
				{
					currentScope = current.$__properties().DisplayObjectScope;
					thisMatrix.concat(currentScope.$_matrix);
					current = $es4.$$coerce(currentScope.$_domView.parentNode ? currentScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
				}
				if (current === targetCoordinateSpace)
				{
					matrix = thisMatrix;
				}
				else
				{
					var targetMatrix = $es4.$$coerce(targetScope.$_matrix.clone(), Matrix);
					current = $es4.$$coerce(targetScope.$_domView.parentNode ? targetScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
					while (current !== null && current !== $$this)
					{
						currentScope = current.$__properties().DisplayObjectScope;
						targetMatrix.concat(currentScope.$_matrix);
						current = $es4.$$coerce(currentScope.$_domView.parentNode ? currentScope.$_domView.parentNode.displayObject : null, DisplayObjectContainer);
					}
					targetMatrix.invert();
					if (current === $$this)
					{
						matrix = targetMatrix;
					}
				}
				if (matrix === null)
				{
					thisMatrix.concat(targetMatrix);
					matrix = thisMatrix;
				}
				var xDiff = $es4.$$coerce(thisScope.$_x1 - thisScope.$_x, Number);
				var yDiff = $es4.$$coerce(thisScope.$_y1 - thisScope.$_y, Number);
				var point1 = matrix.$__transformPoint(xDiff, yDiff);
				var point2 = matrix.$__transformPoint(xDiff + width, yDiff);
				var point3 = matrix.$__transformPoint(xDiff + width, yDiff + height);
				var point4 = matrix.$__transformPoint(xDiff, yDiff + height);
				var left = Math.min(point1[0], point2[0], point3[0], point4[0]);
				var right = Math.max(point1[0], point2[0], point3[0], point4[0]);
				var top = Math.min(point1[1], point2[1], point3[1], point4[1]);
				var bottom = Math.max(point1[1], point2[1], point3[1], point4[1]);
				value = right - left;
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				var x2 = value;
				value = bottom - top;
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				var y2 = value;
				value = left;
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				var x1 = value;
				value = top;
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
				var y1 = value;
				return $es4.$$primitive(new Rectangle(x1, y1, x2, y2));
			}

			return $$this.$$DisplayObject.$$getBounds || ($$this.$$DisplayObject.$$getBounds = getBounds);
		}});


		//private instance method
		DisplayObject.prototype.$$v.$_toCanvas = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_toCanvas()
			{
				var node = $$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView;
				var canvas;
				var bitmapData = null;
				if (node.nodeName == 'CANVAS')
				{
					canvas = document.createElement('canvas');
					canvas.width = node.width;
					canvas.height = node.height;
					canvas.getContext('2d').drawImage(node, 0, 0);
					return canvas;
				}
				var clone = node.cloneNode(true);
				var img;
				var wrap;
				var data = null;
				var bin;
				var childNodesArray = [clone.childNodes];
				while (childNodesArray.length)
				{
					var childNodes = childNodesArray.pop();
					for (var i = $es4.$$coerce(childNodes.length, int); i--;)
					{
						var child = childNodes[i];
						if (child.nodeName == 'SVG')
						{
							img = document.createElement('img');
							img.style.cssText = child.style.cssText;
							child.parentNode.replaceChild(img, child);
							wrap = document.createElement('div');
							wrap.appendChild(child);
							data = $es4.$$coerce(wrap.innerHTML, String);
							bin = window.btoa(data);
							img.setAttribute('src', 'data:' + 'image/svg+xml;charset=utf-8' + ';base64,' + bin);
						}
						else if (child.nodeName == 'CANVAS')
						{
							img = document.createElement('img');
							img.style.cssText = child.style.cssText;
							child.parentNode.replaceChild(img, child);
						}
						else if (child.childNodes)
						{
							childNodesArray.push(child.childNodes);
						}
					}
				}
				wrap = document.createElement('div');
				wrap.appendChild(clone);
				var doc = document.implementation.createHTMLDocument('');
				doc.body.innerHTML = wrap.innerHTML;
				var wellFormedHTML = $es4.$$primitive(new window.XMLSerializer().serializeToString(doc.body.firstChild));
				var width = $es4.$$coerce($$this.width, Number);
				var height = $es4.$$coerce($$this.height, Number);
				data = '<svg xmlns="http://www.w3.org/2000/svg" width="' + width + '" height="' + height + '"><foreignObject width="' + width + '" height="' + height + '">' + wellFormedHTML + '</foreignObject></svg>';
				bin = window.btoa(data);
				img = document.createElement('img');
				img.setAttribute('src', 'data:' + 'image/svg+xml;charset=utf-8' + ';base64,' + bin);
				canvas = document.createElement('canvas');
				canvas.width = width;
				canvas.height = height;
				canvas.getContext('2d').drawImage(img, 0, 0);
				return canvas;
			}

			return $$this.$$DisplayObject.$$p.$$$_toCanvas || ($$this.$$DisplayObject.$$p.$$$_toCanvas = $_toCanvas);
		}};


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'globalToLocal3D', {
		get:function ()
		{
			var $$this = this;

			function globalToLocal3D($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "globalToLocal3D"'));
			}

			return $$this.$$DisplayObject.$$globalToLocal3D || ($$this.$$DisplayObject.$$globalToLocal3D = globalToLocal3D);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'local3DToGlobal', {
		get:function ()
		{
			var $$this = this;

			function local3DToGlobal($$$$point3d)
			{
				//set default parameter values
				var point3d = $es4.$$coerce($$$$point3d, Vector3D);

				throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "local3DToGlobal"'));
			}

			return $$this.$$DisplayObject.$$local3DToGlobal || ($$this.$$DisplayObject.$$local3DToGlobal = local3DToGlobal);
		}});


		//public instance method
		Object.defineProperty(DisplayObject.prototype, 'getRect', {
		get:function ()
		{
			var $$this = this;

			function getRect($$$$targetCoordinateSpace)
			{
				//set default parameter values
				var targetCoordinateSpace = $es4.$$coerce($$$$targetCoordinateSpace, $es4.$$['flash.display'].DisplayObject);

				throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "getRect"'));
			}

			return $$this.$$DisplayObject.$$getRect || ($$this.$$DisplayObject.$$getRect = getRect);
		}});

		Object.defineProperty(DisplayObject.prototype, 'x', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_x, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (isNaN(value))
			{
				value = 0;
			}
			else if (Math.abs(value) >= 107374182.4)
			{
				value = -107374182.4;
			}
			else
			{
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
			}
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var matrix = scope.$_matrix;
			if (value === matrix.tx)
			{
				return;
			}
			matrix.translate(-matrix.tx, 0);
			matrix.translate(value, 0);
			scope.$_x = value;
			$$this.$$DisplayObject.$_recalculateChildBasedBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'y', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_y, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (isNaN(value))
			{
				value = 0;
			}
			else if (Math.abs(value) >= 107374182.4)
			{
				value = -107374182.4;
			}
			else
			{
				value = (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
			}
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var matrix = scope.$_matrix;
			if (value === matrix.ty)
			{
				return;
			}
			matrix.translate(0, -matrix.ty);
			matrix.translate(0, value);
			scope.$_y = value;
			$$this.$$DisplayObject.$_recalculateChildBasedBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'height', {get:function ()
		{
			var $$this = this;
			var value = $$this.$$DisplayObject.$_properties.DisplayObjectScope.$_bounds[3];
			return (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (value < 0)
			{
				return;
			}
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var scaleY = scope.$_scaleY;
			var matrix = scope.$_matrix;
			var height = scope.$_height;
			if (isNaN(value))
			{
				value = 0;
			}
			if (value === 0 || height === 0)
			{
				var scaleX = scope.$_scaleX;
				if (scaleY !== 0 || scaleX !== 0)
				{
					if (scaleY !== 0)
					{
						matrix.$__scale(1, 1 / scaleY);
					}
					if (scaleX !== 0)
					{
						matrix.$__scale(1 / scaleX, 1);
					}
					scope.$_sudoScaleX = scope.$_sudoScaleY = scope.$_scaleX = scope.$_scaleY = 0;
					scope.$_bounds[2] = 0;
					scope.$_bounds[3] = 0;
					$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
				}
				return;
			}
			var desiredYScale = value / height;
			if (desiredYScale === scaleY)
			{
				return;
			}
			if (desiredYScale > 0x8000)
			{
				desiredYScale = 0x8000;
			}
			if (desiredYScale * height > 0x6666660)
			{
				desiredYScale = 0x6666660 / height;
			}
			if (scaleY !== 0)
			{
				matrix.$__scale(1, 1 / scaleY);
			}
			matrix.$__scale(1, desiredYScale);
			scope.$_sudoScaleY = scope.$_scaleY = desiredYScale;
			if (scope.$_rotation)
			{
				throw $es4.$$primitive(new Error('changing the width/height of a rotated object does not appear to function properly in flash. recommend setting object to rotation 0, then resizing, then rotating back to desired position; or, resize via scaleX and scaleY'));
			}
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'width', {get:function ()
		{
			var $$this = this;
			var value = $$this.$$DisplayObject.$_properties.DisplayObjectScope.$_bounds[2];
			return (Math.round((Math.floor(Math.abs(value + .00125) * 1000) / 1000) * 20) / 20) * (value > 0 ? 1 : -1);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (value < 0)
			{
				return;
			}
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var scaleX = scope.$_scaleX;
			var matrix = scope.$_matrix;
			var width = scope.$_width;
			if (isNaN(value))
			{
				value = 0;
			}
			if (value === 0 || width === 0)
			{
				var scaleY = scope.$_scaleY;
				if (scaleY !== 0 || scaleX !== 0)
				{
					if (scaleY !== 0)
					{
						matrix.$__scale(1, 1 / scaleY);
					}
					if (scaleX !== 0)
					{
						matrix.$__scale(1 / scaleX, 1);
					}
					scope.$_sudoScaleX = scope.$_sudoScaleY = scope.$_scaleX = scope.$_scaleY = 0;
					scope.$_bounds[2] = 0;
					scope.$_bounds[3] = 0;
					$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
				}
				return;
			}
			var desiredXScale = value / width;
			if (desiredXScale === scaleX)
			{
				return;
			}
			if (desiredXScale > 0x8000)
			{
				desiredXScale = 0x8000;
			}
			if (desiredXScale * width > 0x6666660)
			{
				desiredXScale = 0x6666660 / width;
			}
			if (scaleX !== 0)
			{
				matrix.$__scale(1 / scaleX, 1);
			}
			matrix.$__scale(desiredXScale, 1);
			scope.$_sudoScaleX = scope.$_scaleX = desiredXScale;
			if (scope.$_rotation)
			{
				throw $es4.$$primitive(new Error('changing the width/height of a rotated object does not appear to function properly in flash. recommend setting object to rotation 0, then resizing, then rotating back to desired position; or, resize via scaleX and scaleY'));
			}
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'scaleX', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_sudoScaleX, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var sudoScaleX = scope.$_sudoScaleX;
			var scaleX = scope.$_scaleX;
			var matrix = scope.$_matrix;
			var width = scope.$_scrollRect !== null ? scope.$_scrollRect.width : scope.$_width;
			if (value === sudoScaleX)
			{
				return;
			}
			scope.$_sudoScaleX = value;
			if (isNaN(value))
			{
				value = 0;
			}
			else if (Math.abs(value) > 0x8000)
			{
				value = 0x8000;
			}
			else if (value < 0)
			{
				value = Math.abs(value);
			}
			if (value === scaleX)
			{
				return;
			}
			if (value === 0)
			{
				if (scaleX !== 0)
				{
					if (scaleX !== 0)
					{
						matrix.$__scale(1 / scaleX, 1);
					}
					scope.$_scaleX = 0;
					scope.$_bounds[2] = 0;
					$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
				}
				return;
			}
			if (value * width > 0x6666660)
			{
				value = $es4.$$coerce(0x6666660 / width, Number);
			}
			var rotation = scope.$_rotation;
			if (rotation !== 0)
			{
				matrix.$__rotate(-(rotation * (Math.PI / 180)));
			}
			if (scaleX !== 0)
			{
				matrix.$__scale(1 / scaleX, 1);
			}
			value = Math.floor(value * 16384) / 16384;
			matrix.$__scale(value, 1);
			if (rotation !== 0)
			{
				matrix.$__rotate(rotation * (Math.PI / 180));
			}
			scope.$_scaleX = value;
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'scaleY', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_sudoScaleY, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var sudoScaleY = scope.$_sudoScaleY;
			var scaleY = scope.$_scaleY;
			var matrix = scope.$_matrix;
			var height = scope.$_scrollRect !== null ? scope.$_scrollRect.height : scope.$_height;
			if (value === sudoScaleY)
			{
				return;
			}
			scope.$_sudoScaleY = value;
			if (isNaN(value))
			{
				value = 0;
			}
			else if (Math.abs(value) > 0x8000)
			{
				value = 0x8000;
			}
			else if (value < 0)
			{
				value = Math.abs(value);
			}
			if (value === scaleY)
			{
				return;
			}
			if (value === 0)
			{
				if (scaleY !== 0)
				{
					if (scaleY !== 0)
					{
						matrix.$__scale(1, 1 / scaleY);
					}
					scope.$_scaleY = 0;
					scope.$_bounds[3] = 0;
					$$this.$$DisplayObject.$_notifyParentOfBoundsChange();
				}
				return;
			}
			if (value * height > 0x6666660)
			{
				value = $es4.$$coerce(0x6666660 / height, Number);
			}
			var rotation = scope.$_rotation;
			if (rotation !== 0)
			{
				matrix.$__rotate(-(rotation * (Math.PI / 180)));
			}
			if (scaleY !== 0)
			{
				matrix.$__scale(1, 1 / scaleY);
			}
			value = Math.floor(value * 16384) / 16384;
			matrix.$__scale(1, value);
			if (rotation !== 0)
			{
				matrix.$__rotate(rotation * (Math.PI / 180));
			}
			scope.$_scaleY = value;
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'rotation', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_sudoRotation, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var sudoRotation = scope.$_sudoRotation;
			var rotation = scope.$_rotation;
			var matrix = scope.$_matrix;
			if (value === sudoRotation || value === rotation)
			{
				return;
			}
			scope.$_sudoRotation = value;
			if (isNaN(value))
			{
				value = 0;
			}
			else if (!isFinite(value))
			{
				scope.$_sudoRotation = NaN;
				value = 0;
			}
			else if (Math.abs(value) > 180)
			{
				if (Math.abs(value) > 32767)
				{
					throw $es4.$$primitive(new Error('cannot set rotation to value greater than 32767 due to flash rotation bug'));
				}
				value = value % 360;
				value = (value + 360) % 360;
				if (value > 180)
				{
					value -= 360;
				}
				scope.$_sudoRotation = value;
			}
			if (scope.$_sudoRotation === sudoRotation || value === rotation)
			{
				return;
			}
			if (rotation !== 0)
			{
				matrix.$__rotate(-(rotation * (Math.PI / 180)));
			}
			matrix.$__rotate((value * (Math.PI / 180)));
			scope.$_rotation = value;
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'visible', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_visible, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			var scope = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			if (scope.$_visible === value)
			{
				return;
			}
			if (value === false)
			{
				$$this.$__notify('visibleFalse', null);
			}
			scope.$_visible = value;
			$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView.style.visibility = (value === true) ? 'inherit' : 'hidden';
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'scrollRect', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_scrollRect, Rectangle);
		}, set:function ($$$$rectangle)
		{
			//set default parameter values
			var rectangle = $es4.$$coerce($$$$rectangle, Rectangle);

			var $$this = this;
			var properties = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			var style = properties.$_domView.style;
			if (!rectangle)
			{
				style.removeProperty('clip');
				style.removeProperty('width');
				style.removeProperty('height');
				properties.$_scrollRectXOffset = 0;
				properties.$_scrollRectYOffset = 0;
				properties.$_scrollRect = null;
				$$this.$$DisplayObject.$_recalculateBounds();
				return;
			}
			style.clip = 'rect(' + int(rectangle.y) + 'px ' + int(rectangle.x + rectangle.width) + 'px ' + int(rectangle.y + rectangle.height) + 'px ' + int(rectangle.x) + 'px)';
			properties.$_scrollRectXOffset = int(-rectangle.x);
			properties.$_scrollRectYOffset = int(-rectangle.y);
			properties.$_scrollRect = rectangle;
			style.width = rectangle.width + 'px';
			style.height = rectangle.height + 'px';
			$$this.$$DisplayObject.$_recalculateBounds();
		}});
		Object.defineProperty(DisplayObject.prototype, 'transform', {get:function ()
		{
			var $$this = this;
			return $es4.$$primitive(new Transform($$this));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Transform);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "transform"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'mask', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented accessor "mask"'));
		}, set:function ($$$$displayObject)
		{
			//set default parameter values
			var displayObject = $es4.$$coerce($$$$displayObject, $es4.$$['flash.display'].DisplayObject);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented accessor "mask"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'mouseX', {get:function ()
		{
			var $$this = this;
			var mouseXPositionRelativeToStage = Math.max(0, Stage.$__pageX - Stage.$__stageLeft);
			var mouseYPositionRelativeToStage = Math.max(0, Stage.$__pageY - Stage.$__stageTop);
			return $$this.globalToLocal($es4.$$primitive(new Point(mouseXPositionRelativeToStage / window.globalScale, mouseYPositionRelativeToStage / window.globalScale))).x;
		}});
		Object.defineProperty(DisplayObject.prototype, 'mouseY', {get:function ()
		{
			var $$this = this;
			var mouseXPositionRelativeToStage = Math.max(0, Stage.$__pageX - Stage.$__stageLeft);
			var mouseYPositionRelativeToStage = Math.max(0, Stage.$__pageY - Stage.$__stageTop);
			return $$this.globalToLocal($es4.$$primitive(new Point(mouseXPositionRelativeToStage / window.globalScale, mouseYPositionRelativeToStage / window.globalScale))).y;
		}});
		Object.defineProperty(DisplayObject.prototype, 'cacheAsBitmap', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_cacheAsBitmap, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			var properties = $$this.$$DisplayObject.$_properties.DisplayObjectScope;
			if (value == properties.$_cacheAsBitmap)
			{
				return;
			}
			var previousTransformValues = $$this.$$DisplayObject.$_previousTransformValues;
			var style = properties.$_domView.style;
			properties.$_cacheAsBitmap = value;
			if (value)
			{
				style.top = style.left = '0px';
			}
			previousTransformValues.y = NaN;
			previousTransformValues.x = NaN;
			previousTransformValues.rotation = NaN;
			previousTransformValues.scaleX = NaN;
			previousTransformValues.scaleY = NaN;
			$$this.$$DisplayObject.$_transform();
		}});
		Object.defineProperty(DisplayObject.prototype, 'name', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView.getAttribute('name'), String);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView.setAttribute('name', value);
		}});
		Object.defineProperty(DisplayObject.prototype, 'alpha', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_opacity, Number);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_opacity = value;
			$$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView.style.opacity = value;
		}});
		Object.defineProperty(DisplayObject.prototype, 'parent', {get:function ()
		{
			var $$this = this;
			var domView = $$this.$$DisplayObject.$_properties.DisplayObjectScope.$_domView;
			return $es4.$$coerce(domView.parentNode ? domView.parentNode.displayObject : null, DisplayObjectContainer);
		}});
		Object.defineProperty(DisplayObject.prototype, 'root', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_root, $es4.$$['flash.display'].DisplayObject);
		}});
		Object.defineProperty(DisplayObject.prototype, 'stage', {get:function ()
		{
			var $$this = this;
			var parent = $es4.$$coerce($$this, $es4.$$['flash.display'].DisplayObject);
			while (parent)
			{
				if ($es4.$$is(parent, Stage))
				{
					return $es4.$$coerce($es4.$$as(parent, Stage), Stage);
				}
				var domView = parent.$__properties().DisplayObjectScope.$_domView;
				parent = $es4.$$coerce(domView.parentNode ? domView.parentNode.displayObject : null, $es4.$$['flash.display'].DisplayObject);
			}
			return null;
		}});
		Object.defineProperty(DisplayObject.prototype, 'loaderInfo', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.$_loaderInfo, LoaderInfo);
		}});
		Object.defineProperty(DisplayObject.prototype, 'blendMode', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "blendMode"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "blendMode"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'blendShader', {set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Shader);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "blendShader"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'filters', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "filters"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Array);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "filters"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'opaqueBackground', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "opaqueBackground"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "opaqueBackground"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'rotationX', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationX"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationX"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'rotationY', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationY"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationY"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'rotationZ', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationZ"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "rotationZ"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'scale9Grid', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "scale9Grid"'));
		}, set:function ($$$$innerRectangle)
		{
			//set default parameter values
			var innerRectangle = $es4.$$coerce($$$$innerRectangle, Rectangle);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "scale9Grid"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'scaleZ', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "scaleZ"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "scaleZ"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'z', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "z"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObject: attempted call to an unimplemented function "z"'));
		}});
		Object.defineProperty(DisplayObject.prototype, 'accessibilityProperties', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObject.$_properties.DisplayObjectScope.accessibilityProperties, AccessibilityProperties);
		}, set:function ($$$$accessibilityProperties)
		{
			//set default parameter values
			var accessibilityProperties = $es4.$$coerce($$$$accessibilityProperties, AccessibilityProperties);

			var $$this = this;
			$$this.$$DisplayObject.$_properties.DisplayObjectScope.accessibilityProperties = accessibilityProperties;
			if (accessibilityProperties)
			{
				accessibilityProperties.$_setOwner($$this);
			}
		}});

		//properties
		DisplayObject.prototype.$$v.$_previousTransformValues = {
		get:function () { var $$this = this.$$this; return $$this.$$DisplayObject.$$p.$_previousTransformValues; },
		set:function (value) { var $$this = this.$$this; $$this.$$DisplayObject.$$p.$_previousTransformValues = value }
		};

		DisplayObject.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$DisplayObject.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$DisplayObject.$$p.$_properties = value }
		};

	});

	//class initializer
	DisplayObject.$$cinit = (function ()
	{
		DisplayObject.$$cinit = undefined;

		//initialize properties
		$$j.$_instanceCounter = $es4.$$coerce(0, int);
	
	});

	function DisplayObject()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof DisplayObject) || $$this.$$DisplayObject !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], DisplayObject) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			DisplayObject.$$construct($$this, $$args);
		}
	}

	//construct
	DisplayObject.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (DisplayObject.$$cinit !== undefined) DisplayObject.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$DisplayObject', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$DisplayObject, '$_previousTransformValues', DisplayObject.prototype.$$v.$_previousTransformValues);
		Object.defineProperty($$this.$$DisplayObject, '$_properties', DisplayObject.prototype.$$v.$_properties);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_setExplicitBounds', DisplayObject.prototype.$$v.$_setExplicitBounds);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_notifyParentOfBoundsChange', DisplayObject.prototype.$$v.$_notifyParentOfBoundsChange);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_onChildBoundsChange', DisplayObject.prototype.$$v.$_onChildBoundsChange);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_recalculateChildBasedBounds', DisplayObject.prototype.$$v.$_recalculateChildBasedBounds);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_recalculateBounds', DisplayObject.prototype.$$v.$_recalculateBounds);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_transform', DisplayObject.prototype.$$v.$_transform);

		//private instance method
		Object.defineProperty($$this.$$DisplayObject, '$_toCanvas', DisplayObject.prototype.$$v.$_toCanvas);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		DisplayObject.$$iinit($$this);

		//call constructor
		if (args !== undefined) DisplayObject.$$constructor.apply($$this, args);
	});

	//initializer
	DisplayObject.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$DisplayObject.$$p.$_previousTransformValues = {x:0, y:0, rotation:0, scaleX:1, scaleY:1};
		$$this.$$DisplayObject.$$p.$_properties = undefined;
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	DisplayObject.$$constructor = (function ()
	{
		var $$this = this;
		var properties = $$this.$$DisplayObject.$_properties || $$this.$__properties({});
		EventDispatcher.$$constructor.call($$this);
		var domView = properties.DisplayObjectScope.$_domView = $$this.$__createDomView();
		domView.setAttribute('name', properties.DisplayObjectScope.$_id);
		domView.setAttribute('data-type', Object($$this).constructor.name);
		domView.setAttribute('tabindex', -1);
		domView.setAttribute('role', 'presentation');
		domView.displayObject = $$this;
		domView.style.position = 'absolute';
		domView.style.pointerEvents = 'auto';
		domView.style[Browser.getTapHighlightColorString()] = 'rgba(0, 0, 0, 0)';
		domView.style[Browser.getTransformOriginString()] = '0% 0%';
	});

	return $es4.$$class(DisplayObject, {EXTENDS:'flash.events.EventDispatcher', IMPLEMENTS:['flash.display.IBitmapDrawable']}, 'flash.display::DisplayObject');
})();
//flash.display.DisplayObject


//flash.display.DisplayObjectContainer
$es4.$$package('flash.display').DisplayObjectContainer = (function ()
{
	//imports
	var Event;
	var Point;
	var TextSnapshot;
	var DisplayObject;
	var DisplayObjectContainer;
	var InteractiveObject;

	//class pre initializer
	DisplayObjectContainer.$$sinit = (function ()
	{
		DisplayObjectContainer.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		Point = $es4.$$['flash.geom'].Point;
		TextSnapshot = $es4.$$['flash.text'].TextSnapshot;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;

		//ensure $$sinit is called on super class
		if (InteractiveObject.$$sinit !== undefined) InteractiveObject.$$sinit();

		//set prototype and constructor
		DisplayObjectContainer.prototype = Object.create(InteractiveObject.prototype);
		Object.defineProperty(DisplayObjectContainer.prototype, "constructor", { value: DisplayObjectContainer, enumerable: false });

		//hold private values
		Object.defineProperty(DisplayObjectContainer.prototype, '$$v', {value:{}});

		//internal instance method
		Object.defineProperty(DisplayObjectContainer.prototype, '$__addDomGraphicsView', {
		get:function ()
		{
			var $$this = this;

			function $__addDomGraphicsView($$$$domGraphicsView)
			{
				//set default parameter values
				var domGraphicsView = $es4.$$coerce($$$$domGraphicsView, Object);

				var properties = $$this.$$DisplayObjectContainer.$_properties.DisplayObjectScope;
				var domView = properties.$_domView;
				if (domView.childElementCount)
				{
					domView.insertBefore(domGraphicsView, domView.childNodes[0]);
				}
				else
				{
					domView.appendChild(domGraphicsView);
				}
				return properties.$_domGraphicsView = domGraphicsView;
			}

			return $$this.$$DisplayObjectContainer.$$$__addDomGraphicsView || ($$this.$$DisplayObjectContainer.$$$__addDomGraphicsView = $__addDomGraphicsView);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$DisplayObjectContainer.$_properties === undefined)
				{
					object = $es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', '$__properties', 'func', undefined)(object);
					object.DisplayObjectContainerScope = {$_children:[], $_mouseChildren:true, $_internalAddChildAt:DisplayObjectContainer.$_internalAddChildAt, $_internalRemoveChild:DisplayObjectContainer.$_internalRemoveChild};
					object.TLScope = $$this;
					return $$this.$$DisplayObjectContainer.$_properties = object;
				}
				return $$this.$$DisplayObjectContainer.$_properties;
			}

			return $$this.$$DisplayObjectContainer.$$$__properties || ($$this.$$DisplayObjectContainer.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

				var children = $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children, Array);
				for (var i = $es4.$$coerce(children.length, int); i--;)
				{
					children[i].$__notify(name, args);
				}
				$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', '$__notify', 'func', undefined)(name, args);
			}

			return $$this.$$DisplayObjectContainer.$$$__notify || ($$this.$$DisplayObjectContainer.$$$__notify = $__notify);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'addChild', {
		get:function ()
		{
			var $$this = this;

			function addChild($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);

				return DisplayObjectContainer.$_internalAddChildAt($$this, child, $$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children.length);
			}

			return $$this.$$DisplayObjectContainer.$$addChild || ($$this.$$DisplayObjectContainer.$$addChild = addChild);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'addChildAt', {
		get:function ()
		{
			var $$this = this;

			function addChildAt($$$$child, $$$$index)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);
				var index = $es4.$$coerce($$$$index, int);

				return DisplayObjectContainer.$_internalAddChildAt($$this, child, index);
			}

			return $$this.$$DisplayObjectContainer.$$addChildAt || ($$this.$$DisplayObjectContainer.$$addChildAt = addChildAt);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'getChildAt', {
		get:function ()
		{
			var $$this = this;

			function getChildAt($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children[index], DisplayObject);
			}

			return $$this.$$DisplayObjectContainer.$$getChildAt || ($$this.$$DisplayObjectContainer.$$getChildAt = getChildAt);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'getChildByName', {
		get:function ()
		{
			var $$this = this;

			function getChildByName($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				var children = $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children, Array);
				var childrenLength = children.length;
				for (var i = 0; i < childrenLength; i++)
				{
					if (name == children[i].name)
					{
						return $es4.$$coerce(children[i], DisplayObject);
					}
				}
				throw $es4.$$primitive(new ArgumentError('getChildByName, Child is not a child of this DisplayObjectContainer'));
			}

			return $$this.$$DisplayObjectContainer.$$getChildByName || ($$this.$$DisplayObjectContainer.$$getChildByName = getChildByName);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'getChildIndex', {
		get:function ()
		{
			var $$this = this;

			function getChildIndex($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);

				var index = $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children.indexOf(child), int);
				if (index == -1)
				{
					throw $es4.$$primitive(new ArgumentError('getChildIndex, Child is not a child of this DisplayObjectContainer'));
				}
				return index;
			}

			return $$this.$$DisplayObjectContainer.$$getChildIndex || ($$this.$$DisplayObjectContainer.$$getChildIndex = getChildIndex);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'contains', {
		get:function ()
		{
			var $$this = this;

			function contains($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);

				if (child === $$this)
				{
					return true;
				}
				return containsInner($$this);

				function containsInner($$$$parent) 
				{
					//set default parameter values
					var parent = $es4.$$coerce($$$$parent, $es4.$$['flash.display'].DisplayObjectContainer);

					var displayObjectScope = parent.$__properties().DisplayObjectContainerScope;
					var numChildren = $es4.$$coerce(displayObjectScope.$_children.length, uint);
					for (var i = $es4.$$coerce(numChildren, int); i--;)
					{
						var innerChild = $es4.$$coerce(displayObjectScope.$_children[i], DisplayObject);
						if (child === innerChild)
						{
							return true;
						}
						var innerParent = $es4.$$as(innerChild, DisplayObjectContainer);
						if (innerParent)
						{
							var value = containsInner(innerParent);
							if (value)
							{
								return true;
							}
						}
					}
					return false;
				}
;
			}

			return $$this.$$DisplayObjectContainer.$$contains || ($$this.$$DisplayObjectContainer.$$contains = contains);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'removeChild', {
		get:function ()
		{
			var $$this = this;

			function removeChild($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);

				return DisplayObjectContainer.$_internalRemoveChild($$this, child);
			}

			return $$this.$$DisplayObjectContainer.$$removeChild || ($$this.$$DisplayObjectContainer.$$removeChild = removeChild);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'removeChildAt', {
		get:function ()
		{
			var $$this = this;

			function removeChildAt($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return DisplayObjectContainer.$_internalRemoveChild($$this, $$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children[index]);
			}

			return $$this.$$DisplayObjectContainer.$$removeChildAt || ($$this.$$DisplayObjectContainer.$$removeChildAt = removeChildAt);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'removeChildren', {
		get:function ()
		{
			var $$this = this;

			function removeChildren($$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var beginIndex = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$beginIndex, int);
				var endIndex = (1 > arguments.length - 1) ? 0x7fffffff : $es4.$$coerce($$$$endIndex, int);

				var children = $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children.slice(beginIndex, endIndex), Array);
				var length = children.length;
				for (var i = 0; i < length; i++)
				{
					DisplayObjectContainer.$_internalRemoveChild($$this, children[i]);
				}
			}

			return $$this.$$DisplayObjectContainer.$$removeChildren || ($$this.$$DisplayObjectContainer.$$removeChildren = removeChildren);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'setChildIndex', {
		get:function ()
		{
			var $$this = this;

			function setChildIndex($$$$child, $$$$index)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, DisplayObject);
				var index = $es4.$$coerce($$$$index, int);

				var children = $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children, Array);
				var currentIndex = children.indexOf(child);
				if (currentIndex == -1)
				{
					throw $es4.$$primitive(new ArgumentError('not a child of parent'));
				}
				if (index >= children.length)
				{
					throw $es4.$$primitive(new RangeError('out of range index provided'));
				}
				if (currentIndex == index)
				{
					return;
				}
				if (index == (children.length - 1))
				{
					$$this.$$DisplayObjectContainer.$_properties.DisplayObjectScope.$_domView.appendChild(child.$__properties().DisplayObjectScope.$_domView);
				}
				else
				{
					var displayObject = children[index];
					$$this.$$DisplayObjectContainer.$_properties.DisplayObjectScope.$_domView.insertBefore(child.$__properties().DisplayObjectScope.$_domView, displayObject.$__properties().DisplayObjectScope.$_domView);
				}
				children.splice(currentIndex, 1);
				children.splice(index, 0, child);
			}

			return $$this.$$DisplayObjectContainer.$$setChildIndex || ($$this.$$DisplayObjectContainer.$$setChildIndex = setChildIndex);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'swapChildren', {
		get:function ()
		{
			var $$this = this;

			function swapChildren($$$$child1, $$$$child2)
			{
				//set default parameter values
				var child1 = $es4.$$coerce($$$$child1, DisplayObject);
				var child2 = $es4.$$coerce($$$$child2, DisplayObject);

				throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "swapChildren"'));
			}

			return $$this.$$DisplayObjectContainer.$$swapChildren || ($$this.$$DisplayObjectContainer.$$swapChildren = swapChildren);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'swapChildrenAt', {
		get:function ()
		{
			var $$this = this;

			function swapChildrenAt($$$$index1, $$$$index2)
			{
				//set default parameter values
				var index1 = $es4.$$coerce($$$$index1, int);
				var index2 = $es4.$$coerce($$$$index2, int);

				throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "swapChildrenAt"'));
			}

			return $$this.$$DisplayObjectContainer.$$swapChildrenAt || ($$this.$$DisplayObjectContainer.$$swapChildrenAt = swapChildrenAt);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'areInaccessibleObjectsUnderPoint', {
		get:function ()
		{
			var $$this = this;

			function areInaccessibleObjectsUnderPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "areInaccessibleObjectsUnderPoint"'));
			}

			return $$this.$$DisplayObjectContainer.$$areInaccessibleObjectsUnderPoint || ($$this.$$DisplayObjectContainer.$$areInaccessibleObjectsUnderPoint = areInaccessibleObjectsUnderPoint);
		}});


		//public instance method
		Object.defineProperty(DisplayObjectContainer.prototype, 'getObjectsUnderPoint', {
		get:function ()
		{
			var $$this = this;

			function getObjectsUnderPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				var win = window;
				var displayObjectScope;
				var pscope = null;
				var x = NaN;
				var y = NaN;
				var width = NaN;
				var height = NaN;
				var visible = false;
				var graphicsDomView;
				var add = true;
				displayObjectScope = $$this.$$DisplayObjectContainer.$_properties.DisplayObjectScope;
				pscope = displayObjectScope.pscope;
				visible = $es4.$$coerce(win.$$getDescriptor(pscope, 'visible').get.call($$this), Boolean);
				if (!visible)
				{
					return [];
				}
				x = $es4.$$coerce(win.$$getDescriptor(pscope, 'x').get.call($$this), Number);
				if (point.x < x)
				{
					add = false;
				}
				else
				{
					width = $es4.$$coerce(win.$$getDescriptor(pscope, 'width').get.call($$this), Number);
					if (point.x > x + width)
					{
						return [];
					}
				}
				y = $es4.$$coerce(win.$$getDescriptor(pscope, 'y').get.call($$this), Number);
				if (point.y < y)
				{
					add = false;
				}
				else
				{
					height = $es4.$$coerce(win.$$getDescriptor(pscope, 'height').get.call($$this), Number);
					if (point.y > y + height)
					{
						return [];
					}
				}
				graphicsDomView = displayObjectScope.$_domGraphicsView;
				var children = (add && graphicsDomView && (graphicsDomView.width || graphicsDomView.height)) ? [$$this] : [];
				getChildrenAtPoint($$this);

				function getChildrenAtPoint($$$$parent) 
				{
					//set default parameter values
					var parent = $es4.$$coerce($$$$parent, $es4.$$['flash.display'].DisplayObjectContainer);

					var innerPoint = parent.globalToLocal(point);
					var displayObjectScope;
					var pscope = null;
					var x = NaN;
					var y = NaN;
					var width = NaN;
					var height = NaN;
					var visible = false;
					var graphicsDomView;
					var add = false;
					var numChildren = $es4.$$coerce(parent.numChildren, uint);
					for (var i = 0; i < numChildren; i++)
					{
						var child = parent.getChildAt(i);
						displayObjectScope = child.$__properties().DisplayObjectScope;
						pscope = displayObjectScope.pscope;
						add = true;
						visible = $es4.$$coerce(win.$$getDescriptor(pscope, 'visible').get.call(child), Boolean);
						if (!visible)
						{
							continue;
						}
						x = $es4.$$coerce(win.$$getDescriptor(pscope, 'x').get.call(child), Number);
						if (innerPoint.x < x)
						{
							add = false;
						}
						else
						{
							width = $es4.$$coerce(win.$$getDescriptor(pscope, 'width').get.call(child), Number);
							if (innerPoint.x > x + width)
							{
								continue;
							}
						}
						y = $es4.$$coerce(win.$$getDescriptor(pscope, 'y').get.call(child), Number);
						if (innerPoint.y < y)
						{
							add = false;
						}
						else
						{
							height = $es4.$$coerce(win.$$getDescriptor(pscope, 'height').get.call(child), Number);
							if (innerPoint.y > y + height)
							{
								continue;
							}
						}
						var innerParent = $es4.$$as(child, DisplayObjectContainer);
						if (innerParent)
						{
							graphicsDomView = displayObjectScope.$_domGraphicsView;
							if (add && graphicsDomView && (graphicsDomView.width || graphicsDomView.height))
							{
								children.push(child);
							}
							getChildrenAtPoint(innerParent);
						}
						else if (add)
						{
							children.push(child);
						}
					}
				}
;

				return children;
			}

			return $$this.$$DisplayObjectContainer.$$getObjectsUnderPoint || ($$this.$$DisplayObjectContainer.$$getObjectsUnderPoint = getObjectsUnderPoint);
		}});

		Object.defineProperty(DisplayObjectContainer.prototype, 'numChildren', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_children.length, int);
		}});
		Object.defineProperty(DisplayObjectContainer.prototype, 'mouseChildren', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_mouseChildren, Boolean);
		}, set:function ($$$$enable)
		{
			//set default parameter values
			var enable = $es4.$$coerce($$$$enable, Boolean);

			var $$this = this;
			$$this.$$DisplayObjectContainer.$_properties.DisplayObjectContainerScope.$_mouseChildren = enable;
		}});
		Object.defineProperty(DisplayObjectContainer.prototype, 'tabChildren', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "tabChildren"'));
		}, set:function ($$$$enable)
		{
			//set default parameter values
			var enable = $es4.$$coerce($$$$enable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "tabChildren"'));
		}});
		Object.defineProperty(DisplayObjectContainer.prototype, 'textSnapshot', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('DisplayObjectContainer: attempted call to an unimplemented function "textSnapshot"'));
		}});

		//properties
		DisplayObjectContainer.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$DisplayObjectContainer.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$DisplayObjectContainer.$$p.$_properties = value }
		};

	});

	//class initializer
	DisplayObjectContainer.$$cinit = (function ()
	{
		DisplayObjectContainer.$$cinit = undefined;
	});

	//private static method
	DisplayObjectContainer.$_internalAddChildAt = (function ($$$$displayObjectContainer, $$$$child, $$$$index, $$$$dispatchEvents)
	{
		if (DisplayObjectContainer.$$cinit !== undefined) DisplayObjectContainer.$$cinit();

		//set default parameter values
		var displayObjectContainer = $es4.$$coerce($$$$displayObjectContainer, $es4.$$['flash.display'].DisplayObjectContainer);
		var child = $es4.$$coerce($$$$child, DisplayObject);
		var index = $es4.$$coerce($$$$index, int);
		var dispatchEvents = (3 > arguments.length - 1) ? true : $es4.$$coerce($$$$dispatchEvents, Boolean);

		if (child === null)
		{
			throw $es4.$$primitive(new Error('attempting to add null child to display list'));
		}
		var childProperties = child.$__properties();
		var properties = displayObjectContainer.$__properties();
		var children = $es4.$$coerce(properties.DisplayObjectContainerScope.$_children, Array);
		var originalIndex = children.indexOf(child);
		var childWasOnStage = $es4.$$coerce(childProperties.TLScope.stage != null, Boolean);
		var hasChild = $es4.$$coerce(originalIndex != -1, Boolean);
		var parent;
		if (hasChild)
		{
			if (index > originalIndex)
			{
				index--;
			}
			DisplayObjectContainer.$_internalRemoveChild(displayObjectContainer, child, false, true);
		}
		else
		{
			parent = childProperties.TLScope.parent;
			if (parent)
			{
				parent.$__properties().DisplayObjectContainerScope.$_internalRemoveChild(parent, child, true, true);
			}
		}
		var childrenLength = children.length;
		if (index > childrenLength)
		{
			throw $es4.$$primitive(new RangeError('out of range index provided'));
		}
		if (index == childrenLength)
		{
			properties.DisplayObjectScope.$_domView.appendChild(childProperties.DisplayObjectScope.$_domView);
		}
		else
		{
			var displayObject = children[index];
			properties.DisplayObjectScope.$_domView.insertBefore(childProperties.DisplayObjectScope.$_domView, displayObject.$__properties().DisplayObjectScope.$_domView);
		}
		children.splice(index, 0, child);
		if (childProperties.DisplayObjectScope.$_height !== 0 || childProperties.DisplayObjectScope.$_width !== 0 || childProperties.DisplayObjectScope.$_scrollRect !== null)
		{
			childProperties.DisplayObjectScope.$_notifyParentOfBoundsChange();
		}
		if (!hasChild && dispatchEvents)
		{
			childProperties.TLScope.dispatchEvent($es4.$$primitive(new Event(Event.ADDED, true)));
		}
		if (!childWasOnStage && properties.TLScope.stage)
		{
			if (!childProperties.DisplayObjectScope.$_root)
			{
				parent = child;
				var found = false;
				while (parent)
				{
					var parentProperties = parent.$__properties();
					if (parentProperties.DisplayObjectScope.$_isRoot)
					{
						found = true;
						parentProperties.DisplayObjectScope.$_root = parent;
						break;
					}
					parent = parentProperties.TLScope.parent;
				}
				if (!found)
				{
					throw $es4.$$primitive(new Error('no root found'));
				}
			}
			if (dispatchEvents)
			{
				notifyAddedToStage(child);
			}
		}

		function notifyAddedToStage($$$$child) 
		{
			//set default parameter values
			var child = $$$$child;

			var childProperties = child.$__properties();
			if (childProperties.EventDispatcherScope.$_listeners[Event.ADDED_TO_STAGE])
			{
				childProperties.TLScope.dispatchEvent($es4.$$primitive(new Event(Event.ADDED_TO_STAGE)));
			}
			var displayObjectContainer = $es4.$$as(child, DisplayObjectContainer);
			if (displayObjectContainer == null)
			{
				return;
			}
			var children = $es4.$$coerce(childProperties.DisplayObjectContainerScope.$_children, Array);
			var childrenLength = children.length;
			for (var i = 0; i < childrenLength; i++)
			{
				notifyAddedToStage(children[i]);
			}
		}
;

		return child;
	});

	//private static method
	DisplayObjectContainer.$_internalRemoveChild = (function ($$$$displayObjectContainer, $$$$child, $$$$dispatchRemovedEvent, $$$$beingAdded)
	{
		if (DisplayObjectContainer.$$cinit !== undefined) DisplayObjectContainer.$$cinit();

		//set default parameter values
		var displayObjectContainer = $es4.$$coerce($$$$displayObjectContainer, $es4.$$['flash.display'].DisplayObjectContainer);
		var child = $es4.$$coerce($$$$child, DisplayObject);
		var dispatchRemovedEvent = (2 > arguments.length - 1) ? true : $es4.$$coerce($$$$dispatchRemovedEvent, Boolean);
		var beingAdded = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$beingAdded, Boolean);

		if (child === null)
		{
			throw $es4.$$primitive(new Error('attempting to remove null child from display list'));
		}
		var properties = displayObjectContainer.$__properties();
		var childProperties = child.$__properties();
		if (childProperties.DisplayObjectScope.$_domView.parentNode != properties.DisplayObjectScope.$_domView)
		{
			throw $es4.$$primitive(new ArgumentError('Error removing child from parent that is not a child of parent'));
		}
		var children = $es4.$$coerce(properties.DisplayObjectContainerScope.$_children, Array);
		if (dispatchRemovedEvent)
		{
			childProperties.TLScope.dispatchEvent($es4.$$primitive(new Event(Event.REMOVED, true)));
		}
		if (properties.TLScope.stage && !beingAdded)
		{
			notifyRemovedFromStage(child);
		}
		properties.DisplayObjectScope.$_domView.removeChild(childProperties.DisplayObjectScope.$_domView);
		children.splice(children.indexOf(child), 1);
		properties.DisplayObjectScope.$_onChildBoundsChange(childProperties.DisplayObjectScope.$_id, null);

		function notifyRemovedFromStage($$$$child) 
		{
			//set default parameter values
			var child = $$$$child;

			var childProperties = child.$__properties();
			if (childProperties.EventDispatcherScope.$_listeners[Event.REMOVED_FROM_STAGE])
			{
				childProperties.TLScope.dispatchEvent($es4.$$primitive(new Event(Event.REMOVED_FROM_STAGE)));
			}
			var displayObjectContainer = $es4.$$as(child, DisplayObjectContainer);
			if (displayObjectContainer == null)
			{
				return;
			}
			var children = $es4.$$coerce(childProperties.DisplayObjectContainerScope.$_children, Array);
			var childrenLength = children.length;
			for (var i = 0; i < childrenLength; i++)
			{
				notifyRemovedFromStage(children[i]);
			}
		}
;

		return child;
	});
	function DisplayObjectContainer()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof DisplayObjectContainer) || $$this.$$DisplayObjectContainer !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], DisplayObjectContainer) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			DisplayObjectContainer.$$construct($$this, $$args);
		}
	}

	//construct
	DisplayObjectContainer.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (DisplayObjectContainer.$$cinit !== undefined) DisplayObjectContainer.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$DisplayObjectContainer', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$DisplayObjectContainer, '$_properties', DisplayObjectContainer.prototype.$$v.$_properties);

		//call construct on super
		InteractiveObject.$$construct($$this);

		//initialize properties
		DisplayObjectContainer.$$iinit($$this);

		//call constructor
		if (args !== undefined) DisplayObjectContainer.$$constructor.apply($$this, args);
	});

	//initializer
	DisplayObjectContainer.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$DisplayObjectContainer.$$p.$_properties = undefined;
	
		//call iinit on super
		InteractiveObject.$$iinit($$this);
	});

	//constructor
	DisplayObjectContainer.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$DisplayObjectContainer.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		InteractiveObject.$$constructor.call($$this);
	});

	return $es4.$$class(DisplayObjectContainer, {EXTENDS:'flash.display.InteractiveObject'}, 'flash.display::DisplayObjectContainer');
})();
//flash.display.DisplayObjectContainer


//flash.display.FrameLabel
$$package('flash.display').FrameLabel = function () { throw new Error('Use of unimplemented class: FrameLabel'); }
//flash.display.FrameLabel


//flash.display.GradientType
$$package('flash.display').GradientType = function () { throw new Error('Use of unimplemented class: GradientType'); }
//flash.display.GradientType


//flash.display.Graphics
$es4.$$package('flash.display').Graphics = (function ()
{
	//imports
	var BitmapData;
	var DisplayObject;
	var IGraphicsData;
	var Shader;
	var Matrix;
	var Browser;
	var CapsStyle;
	var Graphics;
	var InteractiveObject;
	var Stage;

	//properties
	var $$j = {};
	Object.defineProperty(Graphics, '$_uniqueIDCounter', {
	get:function () { if (Graphics.$$cinit !== undefined) Graphics.$$cinit(); return $$j.$_uniqueIDCounter; },
	set:function (value) { if (Graphics.$$cinit !== undefined) Graphics.$$cinit(); $$j.$_uniqueIDCounter = $es4.$$coerce(value, Number); }
	});

	Object.defineProperty(Graphics, '$_objects', {
	get:function () { if (Graphics.$$cinit !== undefined) Graphics.$$cinit(); return $$j.$_objects; },
	set:function (value) { if (Graphics.$$cinit !== undefined) Graphics.$$cinit(); $$j.$_objects = $es4.$$coerce(value, Array); }
	});


	//class pre initializer
	Graphics.$$sinit = (function ()
	{
		Graphics.$$sinit = undefined;

		//initialize imports
		BitmapData = $es4.$$['flash.display'].BitmapData;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		IGraphicsData = $es4.$$['flash.display'].IGraphicsData;
		Shader = $es4.$$['flash.display'].Shader;
		Matrix = $es4.$$['flash.geom'].Matrix;
		Browser = $es4.$$['browser'].Browser;
		CapsStyle = $es4.$$['flash.display'].CapsStyle;
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Stage = $es4.$$['flash.display'].Stage;

		//set prototype and constructor
		Graphics.prototype = Object.create(Object.prototype);
		Object.defineProperty(Graphics.prototype, "constructor", { value: Graphics, enumerable: false });

		//hold private values
		Object.defineProperty(Graphics.prototype, '$$v', {value:{}});

		//private instance method
		Graphics.prototype.$$v.$_doFillAndLine = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_doFillAndLine($$$$element)
			{
				//set default parameter values
				var element = $es4.$$coerce($$$$element, Object);

				if ($$this.$$Graphics.$_fillType == 'beginFill')
				{
					element.setAttribute('fill', Graphics.$_convertToColorString($$this.$$Graphics.$_fillColor));
					element.setAttribute('fill-opacity', $$this.$$Graphics.$_fillAlpha);
				}
				else if ($$this.$$Graphics.$_fillType == 'beginBitmapFill')
				{
					element.setAttribute('fill', 'url(#' + $$this.$$Graphics.$_fillBitmapData + ')');
				}
				else
				{
					element.setAttribute('fill-opacity', 0);
				}
				if (!element.getAttribute('shape-rendering'))
				{
					element.setAttribute('shape-rendering', (window.mobile) ? 'optimizeSpeed' : 'auto');
				}
				var interactiveObject = $es4.$$as($$this.$$Graphics.$_displayObject, InteractiveObject);
				element.style.pointerEvents = (interactiveObject && interactiveObject.$__properties().InteractiveObjectScope.$_mouseEnabled) ? 'visible' : 'none';
				if (!$$this.$$Graphics.$_strokeThickness)
				{
					return;
				}
				element.setAttribute('stroke-width', $$this.$$Graphics.$_strokeThickness);
				element.setAttribute('stroke', Graphics.$_convertToColorString($$this.$$Graphics.$_strokeColor));
				element.setAttribute('stroke-opacity', $$this.$$Graphics.$_strokeAlpha);
				element.setAttribute('stroke-miterlimit', $$this.$$Graphics.$_strokeMiterLimit);
				if ($$this.$$Graphics.$_strokeCaps == CapsStyle.SQUARE)
				{
					element.setAttribute('stroke-linecap', 'square');
				}
				else if ($$this.$$Graphics.$_strokeCaps == CapsStyle.NONE)
				{
					element.setAttribute('stroke-linecap', 'butt');
				}
				else
				{
					element.setAttribute('stroke-linecap', 'round');
				}
			}

			return $$this.$$Graphics.$$p.$$$_doFillAndLine || ($$this.$$Graphics.$$p.$$$_doFillAndLine = $_doFillAndLine);
		}};


		//public instance method
		Object.defineProperty(Graphics.prototype, 'beginFill', {
		get:function ()
		{
			var $$this = this;

			function beginFill($$$$color, $$$$alpha)
			{
				//set default parameter values
				var color = $es4.$$coerce($$$$color, uint);
				var alpha = (1 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$alpha, Number);

				$$this.$$Graphics.$_fillType = 'beginFill';
				$$this.$$Graphics.$_fillColor = color;
				$$this.$$Graphics.$_fillAlpha = alpha;
			}

			return $$this.$$Graphics.$$beginFill || ($$this.$$Graphics.$$beginFill = beginFill);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawRect', {
		get:function ()
		{
			var $$this = this;

			function drawRect($$$$x, $$$$y, $$$$width, $$$$height)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);

				var rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
				rect.setAttribute('x', x + 'px');
				rect.setAttribute('y', y + 'px');
				rect.setAttribute('width', width + 'px');
				rect.setAttribute('height', height + 'px');
				$$this.$$Graphics.$_doFillAndLine(rect);
				$$this.$$Graphics.$_domGraphicsView.appendChild(rect);
				var val;
				val = width + x + ($$this.$$Graphics.$_strokeThickness / 2);
				if (val > $$this.$$Graphics.$_maxWidth)
				{
					$$this.$$Graphics.$_maxWidth = val;
				}
				val = height + y + ($$this.$$Graphics.$_strokeThickness / 2);
				if (val > $$this.$$Graphics.$_maxHeight)
				{
					$$this.$$Graphics.$_maxHeight = val;
				}
				$$this.$$Graphics.$_domGraphicsView.style.width = $$this.$$Graphics.$_maxWidth + 'px';
				$$this.$$Graphics.$_domGraphicsView.style.height = $$this.$$Graphics.$_maxHeight + 'px';
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$drawRect || ($$this.$$Graphics.$$drawRect = drawRect);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawCircle', {
		get:function ()
		{
			var $$this = this;

			function drawCircle($$$$x, $$$$y, $$$$radius)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var radius = $es4.$$coerce($$$$radius, Number);

				var circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
				circle.setAttribute('cx', x);
				circle.setAttribute('cy', y);
				circle.setAttribute('r', radius);
				$$this.$$Graphics.$_doFillAndLine(circle);
				$$this.$$Graphics.$_domGraphicsView.appendChild(circle);
				var minX = x - radius;
				var minY = y - radius;
				var maxX = radius + x;
				var maxY = radius + y;
				var xTransform = NaN;
				var yTransform = NaN;
				if (minX < $$this.$$Graphics.$_maxNegX)
				{
					$$this.$$Graphics.$_maxNegX = xTransform = minX;
				}
				if (minY < $$this.$$Graphics.$_maxNegY)
				{
					$$this.$$Graphics.$_maxNegY = yTransform = minY;
				}
				if (!isNaN(xTransform) || !isNaN(yTransform))
				{
					circle.style[Browser.getTransformString()] = 'translate3d(' + -($$this.$$Graphics.$_maxNegX) + 'px, ' + -($$this.$$Graphics.$_maxNegY) + 'px, 0px)';
					$$this.$$Graphics.$_domGraphicsView.style[Browser.getTransformString()] = 'translate3d(' + $$this.$$Graphics.$_maxNegX + 'px, ' + $$this.$$Graphics.$_maxNegY + 'px, 0px)';
				}
				if (maxX + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxWidth)
				{
					$$this.$$Graphics.$_maxWidth = maxX + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				if (maxY + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxHeight)
				{
					$$this.$$Graphics.$_maxHeight = maxY + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				$$this.$$Graphics.$_domGraphicsView.style.width = ($$this.$$Graphics.$_maxWidth + -($$this.$$Graphics.$_maxNegX)) + 'px';
				$$this.$$Graphics.$_domGraphicsView.style.height = ($$this.$$Graphics.$_maxHeight + -($$this.$$Graphics.$_maxNegY)) + 'px';
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$drawCircle || ($$this.$$Graphics.$$drawCircle = drawCircle);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawEllipse', {
		get:function ()
		{
			var $$this = this;

			function drawEllipse($$$$x, $$$$y, $$$$width, $$$$height)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);

				var ellipse = document.createElementNS('http://www.w3.org/2000/svg', 'ellipse');
				ellipse.setAttribute('cx', x + (width / 2));
				ellipse.setAttribute('cy', y + (height / 2));
				ellipse.setAttribute('rx', width / 2);
				ellipse.setAttribute('ry', height / 2);
				$$this.$$Graphics.$_doFillAndLine(ellipse);
				$$this.$$Graphics.$_domGraphicsView.appendChild(ellipse);
				if (width + x + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxWidth)
				{
					$$this.$$Graphics.$_maxWidth = width + x + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				if (height + y + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxHeight)
				{
					$$this.$$Graphics.$_maxHeight = height + y + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				$$this.$$Graphics.$_domGraphicsView.style.width = $$this.$$Graphics.$_maxWidth + 'px';
				$$this.$$Graphics.$_domGraphicsView.style.height = $$this.$$Graphics.$_maxHeight + 'px';
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$drawEllipse || ($$this.$$Graphics.$$drawEllipse = drawEllipse);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawRoundRect', {
		get:function ()
		{
			var $$this = this;

			function drawRoundRect($$$$x, $$$$y, $$$$width, $$$$height, $$$$ellipseWidth, $$$$ellipseHeight)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);
				var ellipseWidth = $es4.$$coerce($$$$ellipseWidth, Number);
				var ellipseHeight = (5 > arguments.length - 1) ? NaN : $es4.$$coerce($$$$ellipseHeight, Number);

				if (isNaN(ellipseHeight))
				{
					ellipseHeight = ellipseWidth;
				}
				var rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');
				rect.setAttribute('x', x);
				rect.setAttribute('y', y);
				rect.setAttribute('width', width);
				rect.setAttribute('height', height);
				rect.setAttribute('rx', ellipseWidth / 2);
				rect.setAttribute('ry', ellipseHeight / 2);
				$$this.$$Graphics.$_doFillAndLine(rect);
				$$this.$$Graphics.$_domGraphicsView.appendChild(rect);
				if (width + x + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxWidth)
				{
					$$this.$$Graphics.$_maxWidth = width + x + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				if (height + y + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxHeight)
				{
					$$this.$$Graphics.$_maxHeight = height + y + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				$$this.$$Graphics.$_domGraphicsView.style.width = $$this.$$Graphics.$_maxWidth + 'px';
				$$this.$$Graphics.$_domGraphicsView.style.height = $$this.$$Graphics.$_maxHeight + 'px';
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$drawRoundRect || ($$this.$$Graphics.$$drawRoundRect = drawRoundRect);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawRoundRectComplex', {
		get:function ()
		{
			var $$this = this;

			function drawRoundRectComplex($$$$x, $$$$y, $$$$width, $$$$height, $$$$topLeftRadius, $$$$topRightRadius, $$$$bottomLeftRadius, $$$$bottomRightRadius)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);
				var topLeftRadius = $es4.$$coerce($$$$topLeftRadius, Number);
				var topRightRadius = $es4.$$coerce($$$$topRightRadius, Number);
				var bottomLeftRadius = $es4.$$coerce($$$$bottomLeftRadius, Number);
				var bottomRightRadius = $es4.$$coerce($$$$bottomRightRadius, Number);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "drawRoundRectComplex"'));
			}

			return $$this.$$Graphics.$$drawRoundRectComplex || ($$this.$$Graphics.$$drawRoundRectComplex = drawRoundRectComplex);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'clear', {
		get:function ()
		{
			var $$this = this;

			function clear()
			{
				$$this.$$Graphics.$_fillType = '';
				$$this.$$Graphics.$_fillColor = 0;
				$$this.$$Graphics.$_fillAlpha = 0;
				$$this.$$Graphics.$_fillBitmapData = null;
				$$this.$$Graphics.$_strokeThickness = 0;
				$$this.$$Graphics.$_strokeColor = 0;
				$$this.$$Graphics.$_strokeAlpha = 0;
				$$this.$$Graphics.$_strokePixelHinting = false;
				$$this.$$Graphics.$_strokeScaleMode = '';
				$$this.$$Graphics.$_strokeCaps = '';
				$$this.$$Graphics.$_strokeJoints = '';
				$$this.$$Graphics.$_strokeMiterLimit = 0;
				$$this.$$Graphics.$_maxNegX = $$this.$$Graphics.$_maxNegY = 0;
				$$this.$$Graphics.$_maxWidth = $$this.$$Graphics.$_maxHeight = 0;
				$$this.$$Graphics.$_domGraphicsView.style.width = '0px';
				$$this.$$Graphics.$_domGraphicsView.style.height = '0px';
				$$this.$$Graphics.$_domGraphicsView.style.transform = 'translate3d(0px, 0px, 0px)';
				$$this.$$Graphics.$_domPathView = null;
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, null);
				var interactiveObject = $es4.$$as($$this.$$Graphics.$_displayObject, InteractiveObject);
				var childNode;
				var i;
				if (interactiveObject)
				{
					if (window.mobile)
					{
						if (interactiveObject.$__properties().InteractiveObjectScope.$_onMouseUp && !Graphics.$_objects)
						{
							Graphics.$_objects = [];
						}
						else if (!interactiveObject.$__properties().InteractiveObjectScope.$_onMouseUp && Graphics.$_objects)
						{
							for (i = Graphics.$_objects.length; i--;)
							{
								var object = Graphics.$_objects[i];
								object.removeEventListener('touchend', $$this.$$Graphics.onMouseUp, false);
								object.removeEventListener('touchmove', $$this.$$Graphics.onMouseMove, false);
							}
							Graphics.$_objects = null;
						}
						while ($$this.$$Graphics.$_domGraphicsView.childElementCount)
						{
							childNode = $$this.$$Graphics.$_domGraphicsView.childNodes[0];
							if (Graphics.$_objects)
							{
								Graphics.$_objects.push(childNode);
								childNode.addEventListener('touchend', $$this.$$Graphics.onMouseUp, false);
								childNode.addEventListener('touchmove', $$this.$$Graphics.onMouseMove, false);
							}
							$$this.$$Graphics.$_domGraphicsView.removeChild(childNode);
						}
					}
					else
					{
						if (interactiveObject.$__properties().InteractiveObjectScope.$_onMouseOut && !Graphics.$_objects)
						{
							Graphics.$_objects = [];
						}
						else if (!interactiveObject.$__properties().InteractiveObjectScope.$_onMouseOut && Graphics.$_objects)
						{
							for (i = Graphics.$_objects.length; i--;)
							{
								Graphics.$_objects[i].removeEventListener('mouseout', $$this.$$Graphics.onMouseOut, false);
							}
							for (i = Graphics.$_objects.length; i--;)
							{
								if (Graphics.$_objects[i].parentNode)
								{
									Graphics.$_objects[i].parentNode.removeChild(Graphics.$_objects[i]);
								}
							}
							Graphics.$_objects = null;
						}
						for (i = $$this.$$Graphics.$_domGraphicsView.childElementCount; i--;)
						{
							childNode = $$this.$$Graphics.$_domGraphicsView.childNodes[i];
							if (Graphics.$_objects)
							{
								Graphics.$_objects.push(childNode);
								childNode.addEventListener('mouseout', $$this.$$Graphics.onMouseOut, false);
								childNode.addEventListener('mouseup', $$this.$$Graphics.onMouseOut, false);
							}
							childNode.style.opacity = 0;
						}
					}
				}
				else
				{
					for (i = $$this.$$Graphics.$_domGraphicsView.childElementCount; i--;)
					{
						childNode = $$this.$$Graphics.$_domGraphicsView.childNodes[i];
						$$this.$$Graphics.$_domGraphicsView.removeChild(childNode);
					}
				}
			}

			return $$this.$$Graphics.$$clear || ($$this.$$Graphics.$$clear = clear);
		}});


		//private instance method
		Graphics.prototype.$$v.onMouseUp = {
		get:function ()
		{
			var $$this = this.$$this;

			function onMouseUp($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				if (!Graphics.$_objects)
				{
					return;
				}
				for (var i = Graphics.$_objects.length; i--;)
				{
					var object = Graphics.$_objects[i];
					object.removeEventListener('touchend', $$this.$$Graphics.onMouseUp, false);
					object.removeEventListener('touchmove', $$this.$$Graphics.onMouseMove, false);
				}
				Graphics.$_objects = null;
				($es4.$$as($$this.$$Graphics.$_displayObject, InteractiveObject)).$__properties().InteractiveObjectScope.$_onMouseUp(event);
			}

			return $$this.$$Graphics.$$p.$$onMouseUp || ($$this.$$Graphics.$$p.$$onMouseUp = onMouseUp);
		}};


		//private instance method
		Graphics.prototype.$$v.onMouseMove = {
		get:function ()
		{
			var $$this = this.$$this;

			function onMouseMove($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				var interactiveObject = $es4.$$as($$this.$$Graphics.$_displayObject, InteractiveObject);
				var stage = interactiveObject.stage;
				if (stage)
				{
					Stage.$__pageX = event.touches[0].pageX;
					Stage.$__pageY = event.touches[0].pageY;
					stage.$__properties().InteractiveObjectScope.$_onMouseMove(event);
				}
			}

			return $$this.$$Graphics.$$p.$$onMouseMove || ($$this.$$Graphics.$$p.$$onMouseMove = onMouseMove);
		}};


		//private instance method
		Graphics.prototype.$$v.onMouseOut = {
		get:function ()
		{
			var $$this = this.$$this;

			function onMouseOut($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				if (!Graphics.$_objects)
				{
					return;
				}
				var i;
				for (i = Graphics.$_objects.length; i--;)
				{
					Graphics.$_objects[i].removeEventListener('mouseout', $$this.$$Graphics.onMouseOut, false);
					Graphics.$_objects[i].removeEventListener('mouseup', $$this.$$Graphics.onMouseOut, false);
				}
				for (i = Graphics.$_objects.length; i--;)
				{
					if (Graphics.$_objects[i].parentNode)
					{
						Graphics.$_objects[i].parentNode.removeChild(Graphics.$_objects[i]);
					}
				}
				Graphics.$_objects = null;
				var onMouseOut = $es4.$$coerce(($es4.$$as($$this.$$Graphics.$_displayObject, InteractiveObject)).$__properties().InteractiveObjectScope.$_onMouseOut, Function);
				if (onMouseOut != null)
				{
					onMouseOut(event);
				}
			}

			return $$this.$$Graphics.$$p.$$onMouseOut || ($$this.$$Graphics.$$p.$$onMouseOut = onMouseOut);
		}};


		//public instance method
		Object.defineProperty(Graphics.prototype, 'endFill', {
		get:function ()
		{
			var $$this = this;

			function endFill()
			{
			}

			return $$this.$$Graphics.$$endFill || ($$this.$$Graphics.$$endFill = endFill);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'lineStyle', {
		get:function ()
		{
			var $$this = this;

			function lineStyle($$$$thickness, $$$$color, $$$$alpha, $$$$pixelHinting, $$$$scaleMode, $$$$caps, $$$$joints, $$$$miterLimit)
			{
				//set default parameter values
				var thickness = (0 > arguments.length - 1) ? NaN : $es4.$$coerce($$$$thickness, Number);
				var color = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$color, uint);
				var alpha = (2 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$alpha, Number);
				var pixelHinting = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$pixelHinting, Boolean);
				var scaleMode = (4 > arguments.length - 1) ? "normal" : $es4.$$coerce($$$$scaleMode, String);
				var caps = (5 > arguments.length - 1) ? null : $es4.$$coerce($$$$caps, String);
				var joints = (6 > arguments.length - 1) ? null : $es4.$$coerce($$$$joints, String);
				var miterLimit = (7 > arguments.length - 1) ? 3 : $es4.$$coerce($$$$miterLimit, Number);

				$$this.$$Graphics.$_strokeThickness = thickness;
				$$this.$$Graphics.$_strokeColor = color;
				$$this.$$Graphics.$_strokeAlpha = alpha;
				$$this.$$Graphics.$_strokePixelHinting = pixelHinting;
				$$this.$$Graphics.$_strokeScaleMode = scaleMode;
				$$this.$$Graphics.$_strokeCaps = caps;
				$$this.$$Graphics.$_strokeJoints = joints;
				$$this.$$Graphics.$_strokeMiterLimit = miterLimit;
				$$this.$$Graphics.$_domPathView = document.createElementNS('http://www.w3.org/2000/svg', 'path');
				$$this.$$Graphics.$_domGraphicsView.appendChild($$this.$$Graphics.$_domPathView);
			}

			return $$this.$$Graphics.$$lineStyle || ($$this.$$Graphics.$$lineStyle = lineStyle);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'moveTo', {
		get:function ()
		{
			var $$this = this;

			function moveTo($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				if (!$$this.$$Graphics.$_domPathView)
				{
					$$this.lineStyle(0);
				}
				var d = $es4.$$coerce(($$this.$$Graphics.$_domPathView.getAttribute('d')) ? $$this.$$Graphics.$_domPathView.getAttribute('d') : '', String);
				$$this.$$Graphics.$_domPathView.setAttribute('d', d + ' M ' + x + ',' + y);
				$$this.$$Graphics.$_doFillAndLine($$this.$$Graphics.$_domPathView);
			}

			return $$this.$$Graphics.$$moveTo || ($$this.$$Graphics.$$moveTo = moveTo);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'lineTo', {
		get:function ()
		{
			var $$this = this;

			function lineTo($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				var d = $es4.$$coerce(($$this.$$Graphics.$_domPathView.getAttribute('d')) ? $$this.$$Graphics.$_domPathView.getAttribute('d') : '', String);
				$$this.$$Graphics.$_domPathView.setAttribute('d', d + ' L ' + x + ',' + y);
				$$this.$$Graphics.$_doFillAndLine($$this.$$Graphics.$_domPathView);
				var xTransform = NaN;
				var yTransform = NaN;
				if (x < $$this.$$Graphics.$_maxNegX)
				{
					$$this.$$Graphics.$_maxNegX = xTransform = x;
				}
				if (y < $$this.$$Graphics.$_maxNegY)
				{
					$$this.$$Graphics.$_maxNegY = yTransform = y;
				}
				if (!isNaN(xTransform) || !isNaN(yTransform))
				{
					$$this.$$Graphics.$_domPathView.style[Browser.getTransformString()] = 'translate3d(' + -($$this.$$Graphics.$_maxNegX) + 'px, ' + -($$this.$$Graphics.$_maxNegY) + 'px, 0px)';
					$$this.$$Graphics.$_domGraphicsView.style[Browser.getTransformString()] = 'translate3d(' + $$this.$$Graphics.$_maxNegX + 'px, ' + $$this.$$Graphics.$_maxNegY + 'px, 0px)';
				}
				if (x < 0)
				{
					x = 0;
				}
				if (y < 0)
				{
					y = 0;
				}
				if (x + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxWidth)
				{
					$$this.$$Graphics.$_maxWidth = x + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				if (y + ($$this.$$Graphics.$_strokeThickness / 2) > $$this.$$Graphics.$_maxHeight)
				{
					$$this.$$Graphics.$_maxHeight = y + ($$this.$$Graphics.$_strokeThickness / 2);
				}
				$$this.$$Graphics.$_domGraphicsView.style.width = ($$this.$$Graphics.$_maxWidth + -($$this.$$Graphics.$_maxNegX)) + 'px';
				$$this.$$Graphics.$_domGraphicsView.style.height = ($$this.$$Graphics.$_maxHeight + -($$this.$$Graphics.$_maxNegY)) + 'px';
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$lineTo || ($$this.$$Graphics.$$lineTo = lineTo);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'curveTo', {
		get:function ()
		{
			var $$this = this;

			function curveTo($$$$controlX, $$$$controlY, $$$$anchorX, $$$$anchorY)
			{
				//set default parameter values
				var controlX = $es4.$$coerce($$$$controlX, Number);
				var controlY = $es4.$$coerce($$$$controlY, Number);
				var anchorX = $es4.$$coerce($$$$anchorX, Number);
				var anchorY = $es4.$$coerce($$$$anchorY, Number);

				var d = $es4.$$coerce(($$this.$$Graphics.$_domPathView.getAttribute('d')) ? $$this.$$Graphics.$_domPathView.getAttribute('d') : '', String);
				$$this.$$Graphics.$_domPathView.setAttribute('d', d + ' Q ' + controlX + ',' + controlY + ', ' + anchorX + ',' + anchorY);
				$$this.$$Graphics.$_doFillAndLine($$this.$$Graphics.$_domPathView);
			}

			return $$this.$$Graphics.$$curveTo || ($$this.$$Graphics.$$curveTo = curveTo);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'beginBitmapFill', {
		get:function ()
		{
			var $$this = this;

			function beginBitmapFill($$$$bitmapData, $$$$matrix, $$$$repeat, $$$$smooth)
			{
				//set default parameter values
				var bitmapData = $es4.$$coerce($$$$bitmapData, BitmapData);
				var matrix = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);
				var repeat = (2 > arguments.length - 1) ? true : $es4.$$coerce($$$$repeat, Boolean);
				var smooth = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$smooth, Boolean);

				$$this.$$Graphics.$_fillType = 'beginBitmapFill';
				$$this.$$Graphics.$_fillBitmapData = '__' + (Graphics.$_uniqueIDCounter++) + '_GraphicsID__';
				var defs = document.createElementNS('http://www.w3.org/2000/svg', 'defs');
				var pattern = document.createElementNS('http://www.w3.org/2000/svg', 'pattern');
				var image = document.createElementNS('http://www.w3.org/2000/svg', 'image');
				pattern.setAttribute('id', $$this.$$Graphics.$_fillBitmapData);
				pattern.setAttribute('patternUnits', 'userSpaceOnUse');
				pattern.setAttribute('width', bitmapData.width);
				pattern.setAttribute('height', bitmapData.height);
				var canvas = bitmapData.$__properties().BitmapDataScope.$_createOrGetCanvas(bitmapData);
				var dataURL = $es4.$$coerce(canvas.toDataURL(), String);
				image.setAttributeNS('http://www.w3.org/1999/xlink', 'href', dataURL);
				image.setAttribute('x', 0);
				image.setAttribute('y', 0);
				image.setAttribute('width', bitmapData.width);
				image.setAttribute('height', bitmapData.height);
				pattern.appendChild(image);
				defs.appendChild(pattern);
				$$this.$$Graphics.$_domGraphicsView.appendChild(defs);
				var scope = $$this.$$Graphics.$_displayObject.$__properties().DisplayObjectScope;
				scope.$_onChildBoundsChange('graphics_' + scope.$_id, ($$this.$$Graphics.$_maxWidth !== 0 || $$this.$$Graphics.$_maxHeight !== 0) ? [$$this.$$Graphics.$_maxNegX, $$this.$$Graphics.$_maxNegY, $$this.$$Graphics.$_maxWidth, $$this.$$Graphics.$_maxHeight] : null);
			}

			return $$this.$$Graphics.$$beginBitmapFill || ($$this.$$Graphics.$$beginBitmapFill = beginBitmapFill);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'beginGradientFill', {
		get:function ()
		{
			var $$this = this;

			function beginGradientFill($$$$type, $$$$colors, $$$$alphas, $$$$ratios, $$$$matrix, $$$$spreadMethod, $$$$interpolationMethod, $$$$focalPointRatio)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);
				var colors = $es4.$$coerce($$$$colors, Array);
				var alphas = $es4.$$coerce($$$$alphas, Array);
				var ratios = $es4.$$coerce($$$$ratios, Array);
				var matrix = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);
				var spreadMethod = (5 > arguments.length - 1) ? "pad" : $es4.$$coerce($$$$spreadMethod, String);
				var interpolationMethod = (6 > arguments.length - 1) ? "rgb" : $es4.$$coerce($$$$interpolationMethod, String);
				var focalPointRatio = (7 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$focalPointRatio, Number);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "beginGradientFill"'));
			}

			return $$this.$$Graphics.$$beginGradientFill || ($$this.$$Graphics.$$beginGradientFill = beginGradientFill);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'beginShaderFill', {
		get:function ()
		{
			var $$this = this;

			function beginShaderFill($$$$shader, $$$$matrix)
			{
				//set default parameter values
				var shader = $es4.$$coerce($$$$shader, Shader);
				var matrix = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "beginShaderFill"'));
			}

			return $$this.$$Graphics.$$beginShaderFill || ($$this.$$Graphics.$$beginShaderFill = beginShaderFill);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'copyFrom', {
		get:function ()
		{
			var $$this = this;

			function copyFrom($$$$sourceGraphics)
			{
				//set default parameter values
				var sourceGraphics = $es4.$$coerce($$$$sourceGraphics, $es4.$$['flash.display'].Graphics);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "copyFrom"'));
			}

			return $$this.$$Graphics.$$copyFrom || ($$this.$$Graphics.$$copyFrom = copyFrom);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawGraphicsData', {
		get:function ()
		{
			var $$this = this;

			function drawGraphicsData($$$$graphicsData)
			{
				//set default parameter values
				var graphicsData = $es4.$$coerce($$$$graphicsData, Array);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "drawGraphicsData"'));
			}

			return $$this.$$Graphics.$$drawGraphicsData || ($$this.$$Graphics.$$drawGraphicsData = drawGraphicsData);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawPath', {
		get:function ()
		{
			var $$this = this;

			function drawPath($$$$commands, $$$$data, $$$$winding)
			{
				//set default parameter values
				var commands = $es4.$$coerce($$$$commands, Array);
				var data = $es4.$$coerce($$$$data, Array);
				var winding = (2 > arguments.length - 1) ? "evenOdd" : $es4.$$coerce($$$$winding, String);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "drawPath"'));
			}

			return $$this.$$Graphics.$$drawPath || ($$this.$$Graphics.$$drawPath = drawPath);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'drawTriangles', {
		get:function ()
		{
			var $$this = this;

			function drawTriangles($$$$vertices, $$$$indices, $$$$uvtData, $$$$culling)
			{
				//set default parameter values
				var vertices = $es4.$$coerce($$$$vertices, Array);
				var indices = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$indices, Array);
				var uvtData = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$uvtData, Array);
				var culling = (3 > arguments.length - 1) ? "none" : $es4.$$coerce($$$$culling, String);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "drawTriangles"'));
			}

			return $$this.$$Graphics.$$drawTriangles || ($$this.$$Graphics.$$drawTriangles = drawTriangles);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'lineBitmapStyle', {
		get:function ()
		{
			var $$this = this;

			function lineBitmapStyle($$$$bitmap, $$$$matrix, $$$$repeat, $$$$smooth)
			{
				//set default parameter values
				var bitmap = $es4.$$coerce($$$$bitmap, BitmapData);
				var matrix = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);
				var repeat = (2 > arguments.length - 1) ? true : $es4.$$coerce($$$$repeat, Boolean);
				var smooth = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$smooth, Boolean);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "lineBitmapStyle"'));
			}

			return $$this.$$Graphics.$$lineBitmapStyle || ($$this.$$Graphics.$$lineBitmapStyle = lineBitmapStyle);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'lineGradientStyle', {
		get:function ()
		{
			var $$this = this;

			function lineGradientStyle($$$$type, $$$$colors, $$$$alphas, $$$$ratios, $$$$matrix, $$$$spreadMethod, $$$$interpolationMethod, $$$$focalPointRatio)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);
				var colors = $es4.$$coerce($$$$colors, Array);
				var alphas = $es4.$$coerce($$$$alphas, Array);
				var ratios = $es4.$$coerce($$$$ratios, Array);
				var matrix = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);
				var spreadMethod = (5 > arguments.length - 1) ? "pad" : $es4.$$coerce($$$$spreadMethod, String);
				var interpolationMethod = (6 > arguments.length - 1) ? "rgb" : $es4.$$coerce($$$$interpolationMethod, String);
				var focalPointRatio = (7 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$focalPointRatio, Number);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "lineGradientStyle"'));
			}

			return $$this.$$Graphics.$$lineGradientStyle || ($$this.$$Graphics.$$lineGradientStyle = lineGradientStyle);
		}});


		//public instance method
		Object.defineProperty(Graphics.prototype, 'lineShaderStyle', {
		get:function ()
		{
			var $$this = this;

			function lineShaderStyle($$$$shader, $$$$matrix)
			{
				//set default parameter values
				var shader = $es4.$$coerce($$$$shader, Shader);
				var matrix = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$matrix, Matrix);

				throw $es4.$$primitive(new Error('Graphics: attempted call to an unimplemented function "lineShaderStyle"'));
			}

			return $$this.$$Graphics.$$lineShaderStyle || ($$this.$$Graphics.$$lineShaderStyle = lineShaderStyle);
		}});

		//properties
		Graphics.prototype.$$v.$_displayObject = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_displayObject; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_displayObject = $es4.$$coerce(value, DisplayObject); }
		};

		Graphics.prototype.$$v.$_domGraphicsView = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_domGraphicsView; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_domGraphicsView = $es4.$$coerce(value, Object); }
		};

		Graphics.prototype.$$v.$_fillType = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_fillType; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_fillType = $es4.$$coerce(value, String); }
		};

		Graphics.prototype.$$v.$_fillColor = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_fillColor; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_fillColor = $es4.$$coerce(value, uint); }
		};

		Graphics.prototype.$$v.$_fillAlpha = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_fillAlpha; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_fillAlpha = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_fillBitmapData = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_fillBitmapData; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_fillBitmapData = $es4.$$coerce(value, String); }
		};

		Graphics.prototype.$$v.$_strokeThickness = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeThickness; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeThickness = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_strokeColor = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeColor; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeColor = $es4.$$coerce(value, uint); }
		};

		Graphics.prototype.$$v.$_strokeAlpha = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeAlpha; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeAlpha = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_strokePixelHinting = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokePixelHinting; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokePixelHinting = $es4.$$coerce(value, Boolean); }
		};

		Graphics.prototype.$$v.$_strokeScaleMode = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeScaleMode; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeScaleMode = $es4.$$coerce(value, String); }
		};

		Graphics.prototype.$$v.$_strokeCaps = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeCaps; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeCaps = $es4.$$coerce(value, String); }
		};

		Graphics.prototype.$$v.$_strokeJoints = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeJoints; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeJoints = $es4.$$coerce(value, String); }
		};

		Graphics.prototype.$$v.$_strokeMiterLimit = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_strokeMiterLimit; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_strokeMiterLimit = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_domPathView = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_domPathView; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_domPathView = $es4.$$coerce(value, Object); }
		};

		Graphics.prototype.$$v.$_maxWidth = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_maxWidth; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_maxWidth = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_maxHeight = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_maxHeight; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_maxHeight = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_maxNegX = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_maxNegX; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_maxNegX = $es4.$$coerce(value, Number); }
		};

		Graphics.prototype.$$v.$_maxNegY = {
		get:function () { var $$this = this.$$this; return $$this.$$Graphics.$$p.$_maxNegY; },
		set:function (value) { var $$this = this.$$this; $$this.$$Graphics.$$p.$_maxNegY = $es4.$$coerce(value, Number); }
		};

	});

	//class initializer
	Graphics.$$cinit = (function ()
	{
		Graphics.$$cinit = undefined;

		//initialize properties
		$$j.$_uniqueIDCounter = $es4.$$coerce(0, Number);
		$$j.$_objects = $es4.$$coerce(undefined, Array);
	
	});

	//private static method
	Graphics.$_convertToColorString = (function ($$$$color)
	{
		if (Graphics.$$cinit !== undefined) Graphics.$$cinit();

		//set default parameter values
		var color = $es4.$$coerce($$$$color, uint);

		var colorString = color.toString(16);
		while (colorString.length < 6)
		{
			colorString = '0' + colorString;
		}
		return '#' + colorString;
	});
	function Graphics()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Graphics) || $$this.$$Graphics !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Graphics) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Graphics.$$construct($$this, $$args);
		}
	}

	//construct
	Graphics.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Graphics.$$cinit !== undefined) Graphics.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Graphics', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Graphics, '$_displayObject', Graphics.prototype.$$v.$_displayObject);
		Object.defineProperty($$this.$$Graphics, '$_domGraphicsView', Graphics.prototype.$$v.$_domGraphicsView);
		Object.defineProperty($$this.$$Graphics, '$_fillType', Graphics.prototype.$$v.$_fillType);
		Object.defineProperty($$this.$$Graphics, '$_fillColor', Graphics.prototype.$$v.$_fillColor);
		Object.defineProperty($$this.$$Graphics, '$_fillAlpha', Graphics.prototype.$$v.$_fillAlpha);
		Object.defineProperty($$this.$$Graphics, '$_fillBitmapData', Graphics.prototype.$$v.$_fillBitmapData);
		Object.defineProperty($$this.$$Graphics, '$_strokeThickness', Graphics.prototype.$$v.$_strokeThickness);
		Object.defineProperty($$this.$$Graphics, '$_strokeColor', Graphics.prototype.$$v.$_strokeColor);
		Object.defineProperty($$this.$$Graphics, '$_strokeAlpha', Graphics.prototype.$$v.$_strokeAlpha);
		Object.defineProperty($$this.$$Graphics, '$_strokePixelHinting', Graphics.prototype.$$v.$_strokePixelHinting);
		Object.defineProperty($$this.$$Graphics, '$_strokeScaleMode', Graphics.prototype.$$v.$_strokeScaleMode);
		Object.defineProperty($$this.$$Graphics, '$_strokeCaps', Graphics.prototype.$$v.$_strokeCaps);
		Object.defineProperty($$this.$$Graphics, '$_strokeJoints', Graphics.prototype.$$v.$_strokeJoints);
		Object.defineProperty($$this.$$Graphics, '$_strokeMiterLimit', Graphics.prototype.$$v.$_strokeMiterLimit);
		Object.defineProperty($$this.$$Graphics, '$_domPathView', Graphics.prototype.$$v.$_domPathView);
		Object.defineProperty($$this.$$Graphics, '$_maxWidth', Graphics.prototype.$$v.$_maxWidth);
		Object.defineProperty($$this.$$Graphics, '$_maxHeight', Graphics.prototype.$$v.$_maxHeight);
		Object.defineProperty($$this.$$Graphics, '$_maxNegX', Graphics.prototype.$$v.$_maxNegX);
		Object.defineProperty($$this.$$Graphics, '$_maxNegY', Graphics.prototype.$$v.$_maxNegY);

		//private instance method
		Object.defineProperty($$this.$$Graphics, '$_doFillAndLine', Graphics.prototype.$$v.$_doFillAndLine);

		//private instance method
		Object.defineProperty($$this.$$Graphics, 'onMouseUp', Graphics.prototype.$$v.onMouseUp);

		//private instance method
		Object.defineProperty($$this.$$Graphics, 'onMouseMove', Graphics.prototype.$$v.onMouseMove);

		//private instance method
		Object.defineProperty($$this.$$Graphics, 'onMouseOut', Graphics.prototype.$$v.onMouseOut);

		//initialize properties
		Graphics.$$iinit($$this);

		//call constructor
		if (args !== undefined) Graphics.$$constructor.apply($$this, args);
	});

	//initializer
	Graphics.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Graphics.$$p.$_displayObject = $es4.$$coerce(undefined, DisplayObject);
		$$this.$$Graphics.$$p.$_domGraphicsView = $es4.$$coerce(undefined, Object);
		$$this.$$Graphics.$$p.$_fillType = $es4.$$coerce('', String);
		$$this.$$Graphics.$$p.$_fillColor = $es4.$$coerce(undefined, uint);
		$$this.$$Graphics.$$p.$_fillAlpha = $es4.$$coerce(undefined, Number);
		$$this.$$Graphics.$$p.$_fillBitmapData = $es4.$$coerce(undefined, String);
		$$this.$$Graphics.$$p.$_strokeThickness = $es4.$$coerce(0, Number);
		$$this.$$Graphics.$$p.$_strokeColor = $es4.$$coerce(undefined, uint);
		$$this.$$Graphics.$$p.$_strokeAlpha = $es4.$$coerce(undefined, Number);
		$$this.$$Graphics.$$p.$_strokePixelHinting = $es4.$$coerce(undefined, Boolean);
		$$this.$$Graphics.$$p.$_strokeScaleMode = $es4.$$coerce(undefined, String);
		$$this.$$Graphics.$$p.$_strokeCaps = $es4.$$coerce(undefined, String);
		$$this.$$Graphics.$$p.$_strokeJoints = $es4.$$coerce(undefined, String);
		$$this.$$Graphics.$$p.$_strokeMiterLimit = $es4.$$coerce(undefined, Number);
		$$this.$$Graphics.$$p.$_domPathView = $es4.$$coerce(undefined, Object);
		$$this.$$Graphics.$$p.$_maxWidth = $es4.$$coerce(0, Number);
		$$this.$$Graphics.$$p.$_maxHeight = $es4.$$coerce(0, Number);
		$$this.$$Graphics.$$p.$_maxNegX = $es4.$$coerce(0, Number);
		$$this.$$Graphics.$$p.$_maxNegY = $es4.$$coerce(0, Number);
	
	});

	//constructor
	Graphics.$$constructor = (function ($$$$displayObject)
	{
		var $$this = this;
		//set default parameter values
		var displayObject = $es4.$$coerce($$$$displayObject, DisplayObject);

		$$this.$$Graphics.$_displayObject = displayObject;
		$$this.$$Graphics.$_domGraphicsView = document.createElementNS('http://www.w3.org/2000/svg', 'svg');
		$$this.$$Graphics.$_displayObject.$__addDomGraphicsView($$this.$$Graphics.$_domGraphicsView);
		$$this.$$Graphics.$_domGraphicsView.setAttribute('version', '1.1');
		$$this.$$Graphics.$_domGraphicsView.setAttribute('tabindex', '-1');
		$$this.$$Graphics.$_domGraphicsView.setAttribute('focusable', false);
		$$this.$$Graphics.$_domGraphicsView.style.display = 'block';
		$$this.$$Graphics.$_domGraphicsView.style.position = 'absolute';
		$$this.$$Graphics.$_domGraphicsView.style.pointerEvents = 'none';
		$$this.$$Graphics.$_domGraphicsView.style[Browser.getTransformOriginString()] = '0% 0%';
		$$this.$$Graphics.$_domGraphicsView.style[Browser.getTransformString()] = 'translateZ(0)';
		$$this.$$Graphics.$_domGraphicsView.style[Browser.getBackfaceVisibilityString()] = 'hidden';
	});

	return $es4.$$class(Graphics, null, 'flash.display::Graphics');
})();
//flash.display.Graphics


//flash.display.GraphicsBitmapFill
$$package('flash.display').GraphicsBitmapFill = function () { throw new Error('Use of unimplemented class: GraphicsBitmapFill'); }
//flash.display.GraphicsBitmapFill


//flash.display.GraphicsEndFill
$$package('flash.display').GraphicsEndFill = function () { throw new Error('Use of unimplemented class: GraphicsEndFill'); }
//flash.display.GraphicsEndFill


//flash.display.GraphicsGradientFill
$$package('flash.display').GraphicsGradientFill = function () { throw new Error('Use of unimplemented class: GraphicsGradientFill'); }
//flash.display.GraphicsGradientFill


//flash.display.GraphicsPath
$$package('flash.display').GraphicsPath = function () { throw new Error('Use of unimplemented class: GraphicsPath'); }
//flash.display.GraphicsPath


//flash.display.GraphicsPathCommand
$$package('flash.display').GraphicsPathCommand = function () { throw new Error('Use of unimplemented class: GraphicsPathCommand'); }
//flash.display.GraphicsPathCommand


//flash.display.GraphicsPathWinding
$$package('flash.display').GraphicsPathWinding = function () { throw new Error('Use of unimplemented class: GraphicsPathWinding'); }
//flash.display.GraphicsPathWinding


//flash.display.GraphicsShaderFill
$$package('flash.display').GraphicsShaderFill = function () { throw new Error('Use of unimplemented class: GraphicsShaderFill'); }
//flash.display.GraphicsShaderFill


//flash.display.GraphicsSolidFill
$$package('flash.display').GraphicsSolidFill = function () { throw new Error('Use of unimplemented class: GraphicsSolidFill'); }
//flash.display.GraphicsSolidFill


//flash.display.GraphicsStroke
$$package('flash.display').GraphicsStroke = function () { throw new Error('Use of unimplemented class: GraphicsStroke'); }
//flash.display.GraphicsStroke


//flash.display.GraphicsTrianglePath
$$package('flash.display').GraphicsTrianglePath = function () { throw new Error('Use of unimplemented class: GraphicsTrianglePath'); }
//flash.display.GraphicsTrianglePath


//flash.display.InteractiveObject
$es4.$$package('flash.display').InteractiveObject = (function ()
{
	//imports
	var AccessibilityImplementation;
	var DisplayObjectContainer;
	var Event;
	var FocusEvent;
	var KeyboardEvent;
	var MouseEvent;
	var Point;
	var ContextMenu;
	var Keyboard;
	var getTimer;
	var DisplayObject;
	var InteractiveObject;
	var Stage;

	//class pre initializer
	InteractiveObject.$$sinit = (function ()
	{
		InteractiveObject.$$sinit = undefined;

		//initialize imports
		AccessibilityImplementation = $es4.$$['flash.accessibility'].AccessibilityImplementation;
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;
		Event = $es4.$$['flash.events'].Event;
		FocusEvent = $es4.$$['flash.events'].FocusEvent;
		KeyboardEvent = $es4.$$['flash.events'].KeyboardEvent;
		MouseEvent = $es4.$$['flash.events'].MouseEvent;
		Point = $es4.$$['flash.geom'].Point;
		ContextMenu = $es4.$$['flash.ui'].ContextMenu;
		Keyboard = $es4.$$['flash.ui'].Keyboard;
		getTimer = $es4.$$['flash.utils'].getTimer;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		Stage = $es4.$$['flash.display'].Stage;

		//ensure $$sinit is called on super class
		if (DisplayObject.$$sinit !== undefined) DisplayObject.$$sinit();

		//set prototype and constructor
		InteractiveObject.prototype = Object.create(DisplayObject.prototype);
		Object.defineProperty(InteractiveObject.prototype, "constructor", { value: InteractiveObject, enumerable: false });

		//hold private values
		Object.defineProperty(InteractiveObject.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(InteractiveObject.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

				if (name === 'visibleFalse' && ($$this.$$InteractiveObject._window.firefox || $$this.$$InteractiveObject._window.ie))
				{
					var activeElement = document.activeElement;
					if (activeElement && activeElement.displayObject == $$this)
					{
						$$this.stage.focus = null;
					}
				}
				$es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__notify', 'func', undefined)(name, args);
			}

			return $$this.$$InteractiveObject.$$$__notify || ($$this.$$InteractiveObject.$$$__notify = $__notify);
		}});


		//public instance method
		Object.defineProperty(InteractiveObject.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$InteractiveObject.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__properties', 'func', undefined)(object);
					object.InteractiveObjectScope = {$_mouseEnabled:true, $_tabEnabled:null, $_tabIndex:-1, $_role:'presentation', $_isMouseEventDispatchable:$$this.$$InteractiveObject.$_isMouseEventDispatchable};
					object.TLScope = $$this;
					return $$this.$$InteractiveObject.$_properties = object;
				}
				return $$this.$$InteractiveObject.$_properties;
			}

			return $$this.$$InteractiveObject.$$$__properties || ($$this.$$InteractiveObject.$$$__properties = $__properties);
		}});


		//private instance method
		InteractiveObject.prototype.$$v.$_isMouseEventDispatchable = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_isMouseEventDispatchable()
			{
				if (!$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				var parent = $es4.$$coerce($$this.$$InteractiveObject.$_properties.TLScope.parent, DisplayObjectContainer);
				while ($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_mouseEnabled && parent)
				{
					var properties = parent.$__properties().TLScope;
					if (!properties.mouseChildren)
					{
						return false;
					}
					parent = $es4.$$coerce(properties.parent, DisplayObjectContainer);
				}
				return true;
			}

			return $$this.$$InteractiveObject.$$p.$$$_isMouseEventDispatchable || ($$this.$$InteractiveObject.$$p.$$$_isMouseEventDispatchable = $_isMouseEventDispatchable);
		}};

		Object.defineProperty(InteractiveObject.prototype, 'mouseEnabled', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_mouseEnabled, Boolean);
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_mouseEnabled = enabled;
			$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.style.pointerEvents = (enabled) ? 'auto' : 'none';
		}});
		Object.defineProperty(InteractiveObject.prototype, 'doubleClickEnabled', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_doubleClickEnabled, Boolean);
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_doubleClickEnabled = enabled;
		}});
		Object.defineProperty(InteractiveObject.prototype, 'contextMenu', {set:function ($$$$cm)
		{
			//set default parameter values
			var cm = $es4.$$coerce($$$$cm, ContextMenu);

			var $$this = this;
			throw $es4.$$primitive(new Error('InteractiveObject: attempted call to an unimplemented function "contextMenu"'));
		}});
		Object.defineProperty(InteractiveObject.prototype, 'tabEnabled', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabEnabled, Boolean);
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabEnabled = enabled;
			if (enabled)
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', $$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabIndex);
			}
			else
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', -1);
			}
			if ($$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.getAttribute('role') != 'presentation')
			{
				$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_role = $$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.getAttribute('role');
			}
			if (!enabled || $$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabIndex == -1)
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('role', 'presentation');
			}
			else
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('role', $$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_role);
			}
		}});
		Object.defineProperty(InteractiveObject.prototype, 'tabIndex', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabIndex, int);
		}, set:function ($$$$index)
		{
			//set default parameter values
			var index = $es4.$$coerce($$$$index, int);

			var $$this = this;
			$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabIndex = index;
			if ($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabEnabled !== false)
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', index);
			}
			else
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', -1);
			}
			var role = $es4.$$coerce($$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.getAttribute('role'), String);
			if (role !== 'presentation')
			{
				$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_role = $$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.getAttribute('role');
			}
			if (($$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_tabEnabled === false || index === -1) && role !== 'progressbar')
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('role', 'presentation');
			}
			else
			{
				$$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView.setAttribute('role', $$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_role);
			}
		}});
		Object.defineProperty(InteractiveObject.prototype, 'focusRect', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('InteractiveObject: attempted call to an unimplemented function "focusRect"'));
		}, set:function ($$$$focusRect)
		{
			//set default parameter values
			var focusRect = $es4.$$coerce($$$$focusRect, Object);

			var $$this = this;
			throw $es4.$$primitive(new Error('InteractiveObject: attempted call to an unimplemented function "focusRect"'));
		}});
		Object.defineProperty(InteractiveObject.prototype, 'accessibilityImplementation', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('InteractiveObject: attempted call to an unimplemented function "accessibilityImplementation"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, AccessibilityImplementation);

			var $$this = this;
			throw $es4.$$primitive(new Error('InteractiveObject: attempted call to an unimplemented function "accessibilityImplementation"'));
		}});

		//properties
		InteractiveObject.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$InteractiveObject.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$InteractiveObject.$$p.$_properties = value }
		};

		InteractiveObject.prototype.$$v._window = {
		get:function () { var $$this = this.$$this; return $$this.$$InteractiveObject.$$p._window; },
		set:function (value) { var $$this = this.$$this; $$this.$$InteractiveObject.$$p._window = $es4.$$coerce(value, Object); }
		};

	});

	//class initializer
	InteractiveObject.$$cinit = (function ()
	{
		InteractiveObject.$$cinit = undefined;
	});

	//public static method
	InteractiveObject.$_getOriginalInteractiveObjectTarget = (function ($$$$target)
	{
		if (InteractiveObject.$$cinit !== undefined) InteractiveObject.$$cinit();

		//set default parameter values
		var target = $$$$target;

		while (target)
		{
			if (target.displayObject && $es4.$$is(target.displayObject, InteractiveObject) && target.displayObject.$__properties().InteractiveObjectScope.$_isMouseEventDispatchable())
			{
				return $es4.$$as(target.displayObject, InteractiveObject);
			}
			target = target.parentNode;
		}
		return null;
	});

	//public static method
	InteractiveObject.getTouch = (function ($$$$event)
	{
		if (InteractiveObject.$$cinit !== undefined) InteractiveObject.$$cinit();

		//set default parameter values
		var event = $$$$event;

		if (event.touches.length)
		{
			return event.touches[0];
		}
		return event.changedTouches[0];
	});
	function InteractiveObject()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof InteractiveObject) || $$this.$$InteractiveObject !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], InteractiveObject) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			InteractiveObject.$$construct($$this, $$args);
		}
	}

	//construct
	InteractiveObject.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (InteractiveObject.$$cinit !== undefined) InteractiveObject.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$InteractiveObject', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$InteractiveObject, '$_properties', InteractiveObject.prototype.$$v.$_properties);
		Object.defineProperty($$this.$$InteractiveObject, '_window', InteractiveObject.prototype.$$v._window);

		//private instance method
		Object.defineProperty($$this.$$InteractiveObject, '$_isMouseEventDispatchable', InteractiveObject.prototype.$$v.$_isMouseEventDispatchable);

		//call construct on super
		DisplayObject.$$construct($$this);

		//initialize properties
		InteractiveObject.$$iinit($$this);

		//call constructor
		if (args !== undefined) InteractiveObject.$$constructor.apply($$this, args);
	});

	//initializer
	InteractiveObject.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$InteractiveObject.$$p.$_properties = undefined;
		$$this.$$InteractiveObject.$$p._window = $es4.$$coerce(undefined, Object);
	
		//call iinit on super
		DisplayObject.$$iinit($$this);
	});

	//constructor
	InteractiveObject.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$InteractiveObject.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObject.$$constructor.call($$this);
		var domView = $$this.$$InteractiveObject.$_properties.DisplayObjectScope.$_domView;
		domView.style.pointerEvents = 'auto';
		var over = false;
		var ref = $es4.$$coerce($$this, $es4.$$['flash.display'].InteractiveObject);
		var win = $$this.$$InteractiveObject._window = window;
		var mobile = $es4.$$coerce(win.mobile, Boolean);
		var refIsStage = $es4.$$is(ref, Stage);
		var view = (refIsStage) ? Stage.$__domDocument : domView;
		var onDOMBodyOut = null;
		var onMouseUp = null;
		var onMouseOut = $es4.$$coerce(function ($$$$event, $$$$forceDispatch) 
		{
			//set default parameter values
			var event = $$$$event;
			var forceDispatch = (1 > arguments.length - 1) ? false : $$$$forceDispatch;

			if (!forceDispatch && (!$$this.visible || !$$this.$$InteractiveObject.$_isMouseEventDispatchable()))
			{
				event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
				event.originalTarget = event.target;
				return;
			}
			over = false;
			if (!mobile)
			{
				$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_onMouseOut = null;
			}
			var clientX = $es4.$$coerce((mobile && event.clientX === undefined) ? InteractiveObject.getTouch(event).pageX : event.clientX, Number);
			var clientY = $es4.$$coerce((mobile && event.clientY === undefined) ? InteractiveObject.getTouch(event).pageY : event.clientY, Number);
			var localPoint = $$this.globalToLocal($es4.$$primitive(new Point(clientX, clientY)));
			var mouseOutEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_OUT, true, true, localPoint.x, localPoint.y));
			mouseOutEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			mouseOutEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
			$$this.dispatchEvent(mouseOutEvent);
			var mouseRollOutEvent = $es4.$$primitive(new MouseEvent(MouseEvent.ROLL_OUT, true, true, localPoint.x, localPoint.y));
			mouseRollOutEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			mouseRollOutEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
			$$this.dispatchEvent(mouseRollOutEvent);
			event.stopPropagation();
		}
, Function);
		var onMouseOver = $es4.$$coerce(function ($$$$event, $$$$forceDispatch) 
		{
			//set default parameter values
			var event = $$$$event;
			var forceDispatch = (1 > arguments.length - 1) ? false : $$$$forceDispatch;

			if (!forceDispatch && (!$$this.visible || !$$this.$$InteractiveObject.$_isMouseEventDispatchable()))
			{
				event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
				event.originalTarget = event.target;
				return;
			}
			if (over)
			{
				return;
			}
			over = true;
			if (!mobile)
			{
				$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_onMouseOut = onMouseOut;
			}
			var clientX = $es4.$$coerce((mobile && event.clientX === undefined) ? InteractiveObject.getTouch(event).pageX : event.clientX, Number);
			var clientY = $es4.$$coerce((mobile && event.clientY === undefined) ? InteractiveObject.getTouch(event).pageY : event.clientY, Number);
			var localPoint = $$this.globalToLocal($es4.$$primitive(new Point(clientX, clientY)));
			var mouseOverEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_OVER, true, true, localPoint.x, localPoint.y));
			mouseOverEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			mouseOverEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
			$$this.dispatchEvent(mouseOverEvent);
			var mouseRollOverEvent = $es4.$$primitive(new MouseEvent(MouseEvent.ROLL_OVER, true, true, localPoint.x, localPoint.y));
			mouseRollOverEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			mouseRollOverEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
			$$this.dispatchEvent(mouseRollOverEvent);
			event.stopPropagation();
		}
, Function);
		var doubleClickTime = 0;
		var onMouseDown = $es4.$$coerce(function ($$$$event, $$$$forceDispatch) 
		{
			//set default parameter values
			var event = $$$$event;
			var forceDispatch = (1 > arguments.length - 1) ? false : $$$$forceDispatch;

			if (!forceDispatch && (!$$this.visible || !$$this.$$InteractiveObject.$_isMouseEventDispatchable()))
			{
				event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
				event.originalTarget = event.target;
				return;
			}
			if (mobile)
			{
				$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_onMouseUp = onMouseUp;
				onMouseOver(event, true);
			}
			else
			{
				win.addEventListener('mouseup', onDOMBodyOut, true);
				ref.addEventListener(Event.REMOVED_FROM_STAGE, onDOMBodyOut);
			}
			var clientX = $es4.$$coerce((mobile && event.clientX === undefined) ? InteractiveObject.getTouch(event).pageX : event.clientX, Number);
			var clientY = $es4.$$coerce((mobile && event.clientY === undefined) ? InteractiveObject.getTouch(event).pageY : event.clientY, Number);
			var localPoint = $$this.globalToLocal($es4.$$primitive(new Point(clientX, clientY)));
			var mouseDownEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_DOWN, true, true, localPoint.x, localPoint.y));
			mouseDownEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			mouseDownEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
			$$this.dispatchEvent(mouseDownEvent);
			event.stopPropagation();
			if (mobile && (event.target.nodeName != 'A' && event.target.nodeName != 'TEXTAREA' && !(event.target.contentEditable === 'true')))
			{
				event.preventDefault();
			}
		}
, Function);
		onMouseUp = $es4.$$coerce(function ($$$$event, $$$$forceDispatch) 
{
			//set default parameter values
			var event = $$$$event;
			var forceDispatch = (1 > arguments.length - 1) ? false : $$$$forceDispatch;

	if (!forceDispatch && (!$$this.visible || !$$this.$$InteractiveObject.$_isMouseEventDispatchable()))
	{
		event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
		event.originalTarget = event.target;
		return;
	}
	if (!mobile)
	{
		win.removeEventListener('mouseup', onDOMBodyOut, true);
		ref.removeEventListener(Event.REMOVED_FROM_STAGE, onDOMBodyOut);
		ref.removeEventListener(Event.ADDED_TO_STAGE, onDOMBodyOut);
	}
	else
	{
		$$this.$$InteractiveObject.$_properties.InteractiveObjectScope.$_onMouseUp = null;
	}
	var doDoubleClickEvent = false;
	if ($$this.doubleClickEnabled)
	{
		doubleClickTime = getTimer() - doubleClickTime;
		if (doubleClickTime < 500)
		{
			doDoubleClickEvent = true;
		}
		else
		{
			doubleClickTime = getTimer();
		}
	}
	var clientX = $es4.$$coerce((mobile && event.clientX === undefined) ? InteractiveObject.getTouch(event).pageX : event.clientX, Number);
	var clientY = $es4.$$coerce((mobile && event.clientY === undefined) ? InteractiveObject.getTouch(event).pageY : event.clientY, Number);
	var localPoint = $$this.globalToLocal($es4.$$primitive(new Point(clientX, clientY)));
	var mouseUpEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_UP, true, true, localPoint.x, localPoint.y));
	mouseUpEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
	mouseUpEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
	$$this.dispatchEvent(mouseUpEvent);
	var mouseClickEvent = $es4.$$primitive(new MouseEvent(MouseEvent.CLICK, true, true, localPoint.x, localPoint.y, null, event.ctrlKey, event.altKey, event.shiftKey));
	mouseClickEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
	mouseClickEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
	$$this.dispatchEvent(mouseClickEvent);
	if (doDoubleClickEvent)
	{
		var mouseDoubleClickEvent = $es4.$$primitive(new MouseEvent(MouseEvent.DOUBLE_CLICK, true, true, localPoint.x, localPoint.y));
		mouseDoubleClickEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
		mouseDoubleClickEvent.$__properties().EventScope.$_originalTarget = event.originalTarget || event.target;
		$$this.dispatchEvent(mouseDoubleClickEvent);
	}
	if (mobile)
	{
		onMouseOut(event, true);
	}
	event.stopPropagation();
}
, Function);
		onDOMBodyOut = $es4.$$coerce(function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	if (event.type == 'mouseup' && domView.parent)
	{
		var target = event.target;
		while (target)
		{
			if (target == domView)
			{
				return;
			}
			target = target.parentNode;
		}
	}
	win.removeEventListener('mouseup', onDOMBodyOut, true);
	ref.removeEventListener(Event.REMOVED_FROM_STAGE, onDOMBodyOut);
	ref.removeEventListener(Event.ADDED_TO_STAGE, onDOMBodyOut);
	if (event.type == Event.ADDED_TO_STAGE)
	{
		win.addEventListener('mouseup', onDOMBodyOut, true);
		ref.addEventListener(Event.REMOVED_FROM_STAGE, onDOMBodyOut);
		return;
	}
	if (event.type == Event.REMOVED_FROM_STAGE)
	{
		ref.addEventListener(Event.ADDED_TO_STAGE, onDOMBodyOut);
		return;
	}
	if (over)
	{
		onMouseOut(event);
	}
	onMouseUp(event);
}
, Function);
		if (mobile)
		{
			var onTouchCancel = $es4.$$coerce(function ($$$$event) 
			{
			//set default parameter values
			var event = $$$$event;

				trace('onTouchCancel');
				onMouseUp(event);
			}
, Function);
			view.addEventListener('touchstart', onMouseDown, false);
			view.addEventListener('touchend', onMouseUp, false);
			view.addEventListener('touchcancel', onTouchCancel, false);
		}
		else
		{
			view.addEventListener('mousedown', onMouseDown, false);
			view.addEventListener('mouseup', onMouseUp, false);
			view.addEventListener('mouseover', onMouseOver, false);
			view.addEventListener('mouseout', onMouseOut, false);
		}
		if (win.ie)
		{
			view.addEventListener('focusin', onFocusIn, false);
			view.addEventListener('focusout', onFocusOut, false);
		}
		else
		{
			view.addEventListener('focus', onFocusIn, false);
			view.addEventListener('blur', onFocusOut, false);
		}

		function onFocusIn($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			var lastKeyPressedEvent = Stage.$__lastKeyPressedObject;
			var keyEvent = lastKeyPressedEvent || event;
			var focusEvent = null;
			if (lastKeyPressedEvent === null)
			{
				focusEvent = $es4.$$primitive(new FocusEvent(FocusEvent.MOUSE_FOCUS_CHANGE, true, true, ref, keyEvent.shiftKey, keyEvent.which || keyEvent.keyCode));
				focusEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
				var success = $$this.dispatchEvent(focusEvent);
				if (!success)
				{
					throw $es4.$$primitive(new Error('preventDefault not supported on FocusEvent.MOUSE_FOCUS_CHANGE'));
				}
			}
			focusEvent = $es4.$$primitive(new FocusEvent(FocusEvent.FOCUS_IN, true, false, ref, keyEvent.shiftKey, keyEvent.which || keyEvent.keyCode));
			focusEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			$$this.dispatchEvent(focusEvent);
			event.stopPropagation();
		}
;

		function onFocusOut($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			var keyEvent = Stage.$__lastKeyPressedObject || event;
			var focusEvent = $es4.$$primitive(new FocusEvent(FocusEvent.FOCUS_OUT, true, false, ref, keyEvent.shiftKey, keyEvent.which || keyEvent.keyCode));
			focusEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			$$this.dispatchEvent(focusEvent);
			event.stopPropagation();
		}
;

		view.addEventListener('keyup', onKeyUp, false);
		view.addEventListener('keydown', onKeyDown, false);

		function onKeyUp($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			if (!$$this.visible)
			{
				event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
				return;
			}
			var keyboardEvent = $es4.$$primitive(new KeyboardEvent(KeyboardEvent.KEY_UP, true, false, event.charCode || event.keyCode, event.which || event.keyCode, event.location, event.ctrlKey, event.altKey, event.shiftKey));
			keyboardEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			$$this.dispatchEvent(keyboardEvent);
			event.stopPropagation();
		}
;

		function onKeyDown($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			if (!$$this.visible)
			{
				event.originalDisplayObjectTarget = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
				return;
			}
			var keyCode = event.which || event.keyCode;
			var keyboardEvent = $es4.$$primitive(new KeyboardEvent(KeyboardEvent.KEY_DOWN, true, false, event.charCode || keyCode, keyCode, event.location, event.ctrlKey, event.altKey, event.shiftKey));
			keyboardEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
			$$this.dispatchEvent(keyboardEvent);
			if (keyCode == Keyboard.TAB)
			{
				var focusEvent = $es4.$$primitive(new FocusEvent(FocusEvent.KEY_FOCUS_CHANGE, true, true, ref, event.shiftKey, keyCode));
				focusEvent.$__properties().EventScope.$_target = event.originalDisplayObjectTarget || ref;
				var success = $$this.dispatchEvent(focusEvent);
				if (!success)
				{
					event.preventDefault();
				}
			}
			event.stopPropagation();
		}
;
	});

	return $es4.$$class(InteractiveObject, {EXTENDS:'flash.display.DisplayObject'}, 'flash.display::InteractiveObject');
})();
//flash.display.InteractiveObject


//flash.display.InterpolationMethod
$$package('flash.display').InterpolationMethod = function () { throw new Error('Use of unimplemented class: InterpolationMethod'); }
//flash.display.InterpolationMethod


//flash.display.JointStyle
$$package('flash.display').JointStyle = function () { throw new Error('Use of unimplemented class: JointStyle'); }
//flash.display.JointStyle


//flash.display.LineScaleMode
$$package('flash.display').LineScaleMode = function () { throw new Error('Use of unimplemented class: LineScaleMode'); }
//flash.display.LineScaleMode


//flash.display.Loader
$es4.$$package('flash.display').Loader = (function ()
{
	//imports
	var Event;
	var IOErrorEvent;
	var ProgressEvent;
	var UncaughtErrorEvents;
	var URLLoader;
	var URLRequest;
	var LoaderContext;
	var ByteArray;
	var setTimeout;
	var Browser;
	var Bitmap;
	var BitmapData;
	var DisplayObject;
	var DisplayObjectContainer;
	var LoaderInfo;
	var MovieClip;

	//class pre initializer
	Loader.$$sinit = (function ()
	{
		Loader.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		IOErrorEvent = $es4.$$['flash.events'].IOErrorEvent;
		ProgressEvent = $es4.$$['flash.events'].ProgressEvent;
		UncaughtErrorEvents = $es4.$$['flash.events'].UncaughtErrorEvents;
		URLLoader = $es4.$$['flash.net'].URLLoader;
		URLRequest = $es4.$$['flash.net'].URLRequest;
		LoaderContext = $es4.$$['flash.system'].LoaderContext;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		setTimeout = $es4.$$['flash.utils'].setTimeout;
		Browser = $es4.$$['browser'].Browser;
		Bitmap = $es4.$$['flash.display'].Bitmap;
		BitmapData = $es4.$$['flash.display'].BitmapData;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;
		LoaderInfo = $es4.$$['flash.display'].LoaderInfo;
		MovieClip = $es4.$$['flash.display'].MovieClip;

		//ensure $$sinit is called on super class
		if (DisplayObjectContainer.$$sinit !== undefined) DisplayObjectContainer.$$sinit();

		//set prototype and constructor
		Loader.prototype = Object.create(DisplayObjectContainer.prototype);
		Object.defineProperty(Loader.prototype, "constructor", { value: Loader, enumerable: false });

		//hold private values
		Object.defineProperty(Loader.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Loader.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Loader.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', '$__properties', 'func', undefined)(object);
					object.LoaderScope = {$_content:null, $_contentLoaderInfo:null, $_font:null, $_lwf:null, $_srcset:null, $_urlLoader:null, $_loaderContext:null};
					object.TLScope = $$this;
					return $$this.$$Loader.$_properties = object;
				}
				return $$this.$$Loader.$_properties;
			}

			return $$this.$$Loader.$$$__properties || ($$this.$$Loader.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(Loader.prototype, 'load', {
		get:function ()
		{
			var $$this = this;

			function load($$$$request, $$$$context)
			{
				//set default parameter values
				var request = $es4.$$coerce($$$$request, URLRequest);
				var context = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$context, LoaderContext);

				var a;
				var parts = null;
				var url = request.url;
				var content;
				var urlLoader;
				var contentLoaderInfo = $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_contentLoaderInfo, LoaderInfo);
				contentLoaderInfo.$__properties().LoaderInfoScope.$_url = url;
				$$this.$$Loader.$_properties.LoaderScope.$_loaderContext = context = (context || $es4.$$primitive(new LoaderContext()));
				var suffix = $es4.$$coerce(url.split('.').pop().toLowerCase().split('?')[0], String);
				var onLoad = null;
				var onProgress = null;
				var onComplete = null;
				switch (suffix)
				{
					case 'fgl':
						a = document.createElement('a');
						a.href = url;
						var sinSuffix = $es4.$$coerce(a.href.substr(0, a.href.lastIndexOf('.')), String);
						var json;
						var atlasList = [];
						var flwebgl = Browser.getFlashWebGL();
						var player;
						var canvas;
						var onLoaded = $es4.$$coerce(function () 
						{
							player.play();
							canvas.player = player;
							content.$__properties().MovieClipScope.$_setupFLWebGL();
							content.$__properties().DisplayObjectScope.$_loaderInfo = contentLoaderInfo;
							$$this.addChild(content);
							contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.INIT)));
							contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
						}
, Function);
						var create = $es4.$$coerce(function () 
						{
							content = $$this.$$Loader.$_properties.LoaderScope.$_content = $es4.$$primitive(new MovieClip());
							canvas = content.$__properties().DisplayObjectScope.$_domView;
							player = $es4.$$primitive(new flwebgl.Player());
							var textureAtlasList = [];
							for (var i = 0; i < atlasList.length; i++)
							{
								textureAtlasList.push($es4.$$primitive(new flwebgl.TextureAtlas(atlasList[i].json, atlasList[i].image)));
							}
							var result = player.init(canvas, json, textureAtlasList, onLoaded);
							if (result === flwebgl.Player.E_CONTEXT_CREATION_FAILED || result === flwebgl.Player.E_REQUIRED_EXTENSION_NOT_PRESENT)
							{
								throw $es4.$$primitive(new Error(result));
							}
							var width = player.getStageWidth();
							var height = player.getStageHeight();
							canvas.width = width;
							canvas.height = height;
							player.setViewport($es4.$$primitive(new flwebgl.geom.Rect(0, 0, width, height)));
						}
, Function);
						var loadJSONAtlas = $es4.$$coerce(function () 
						{
							var xmlHttpRequest = Browser.getNewXMLHttpRequest();
							xmlHttpRequest.open('GET', sinSuffix + '_atlas.json', true);
							xmlHttpRequest.overrideMimeType('text/plain');
							xmlHttpRequest.onload = function () 
{
	xmlHttpRequest.onload = undefined;
	atlasList.push({json:JSON.parse(xmlHttpRequest.responseText), image:sinSuffix + '_atlas.png'});
	create();
}
;
							xmlHttpRequest.send(null);
						}
, Function);
						var loadJSON = $es4.$$coerce(function () 
						{
							var xmlHttpRequest = Browser.getNewXMLHttpRequest();
							xmlHttpRequest.open('GET', sinSuffix + '.json', true);
							xmlHttpRequest.overrideMimeType('text/plain');
							xmlHttpRequest.onload = function () 
{
	xmlHttpRequest.onload = undefined;
	json = JSON.parse(xmlHttpRequest.responseText);
	loadJSONAtlas();
}
;
							xmlHttpRequest.send(null);
						}
, Function);
						var xmlHttpRequest = Browser.getNewXMLHttpRequest();
						xmlHttpRequest.open('GET', sinSuffix + '_actions.js', true);
						xmlHttpRequest.overrideMimeType('text/javascript');
						xmlHttpRequest.onload = function () 
{
	xmlHttpRequest.onload = undefined;
	Browser.doEval(xmlHttpRequest.responseText);
	loadJSON();
}
;
						xmlHttpRequest.send(null);
						return;
					case 'js':
					case 'swf':
						contentLoaderInfo.$__properties().LoaderInfoScope.$_contentType = 'application/x-shockwave-flash';
						if (contentLoaderInfo.parameters.font)
						{
							a = document.createElement('a');
							a.href = url;
							parts = $es4.$$coerce(a.pathname.split('.'), Array);
							parts[parts.length - 1] = 'ttf';
							a.pathname = parts.join('.');
							var fontName = $es4.$$coerce(a.pathname.split('/').pop().split('.').shift(), String);
							var onFontLoaded = $es4.$$coerce(function () 
							{
								var FontClass = {'$$isclass':true, name:fontName};
								FontClass[fontName] = FontClass;
								context.applicationDomain.$__definitions[fontName] = FontClass;
								contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.INIT)));
								contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
							}
, Function);
							var src = null;
							var regex = /^(?:\/|[a-z]+:\/\/)/;
							if (regex.test(url))
							{
								src = $es4.$$coerce(a.href, String);
							}
							else
							{
								var location = window.location;
								parts = $es4.$$coerce(location.pathname.split('/'), Array);
								parts.pop();
								var slocation = parts.join('/');
								src = $es4.$$coerce((a.pathname.indexOf(slocation) == -1) ? (location.pathname + '/../' + a.pathname + a.search + a.hash) : a.href, String);
							}
							var element = document.createElement('style');
							element.setAttribute('type', 'text/css');
							element.innerHTML = "@font-face {font-family: '" + fontName + "'; src: url('" + src + "') format('truetype');}";
							document.head.appendChild(element);
							setTimeout(onFontLoaded, 1);
							return;
						}
						else
						{
							a = document.createElement('a');
							a.href = url;
							parts = $es4.$$coerce(a.pathname.split('.'), Array);
							if (parts.pop().toLowerCase() != 'js')
							{
								content = $$this.$$Loader.$_properties.LoaderScope.$_content = $es4.$$primitive(new MovieClip());
								canvas = content.$__properties().DisplayObjectScope.$_domView;
								canvas.width = 0;
								canvas.height = 0;
								Browser.getLWF().useCanvasRenderer();
								var sinSuffix = $es4.$$coerce(a.href.substr(0, a.href.lastIndexOf('.')), String);
								var fileName = $es4.$$coerce(sinSuffix.split('/').pop(), String);
								var lwfURL = fileName + '.lwf';
								var prefix = sinSuffix + '.lwf/';
								onLoad = $es4.$$coerce(function ($$$$lwf) 
{
					//set default parameter values
					var lwf = $es4.$$coerce($$$$lwf, Object);

	$$this.$$Loader.$_properties.LoaderScope.$_lwf = lwf;
	canvas.lwf = lwf;
	content.$__properties().MovieClipScope.$_setupLWF();
	content.$__properties().DisplayObjectScope.$_loaderInfo = contentLoaderInfo;
	$$this.addChild(content);
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.INIT)));
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
}
, Function);
								onProgress = $es4.$$coerce(function ($$$$loaded, $$$$total) 
{
					//set default parameter values
					var loaded = $es4.$$coerce($$$$loaded, uint);
					var total = $es4.$$coerce($$$$total, uint);

	var properties = contentLoaderInfo.$__properties().LoaderInfoScope;
	properties.$_bytesLoaded = loaded;
	properties.$_bytesTotal = total;
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new ProgressEvent(ProgressEvent.PROGRESS, false, false, loaded, total)));
}
, Function);
								var cache = Browser.getLWF().ResourceCache.get();
								cache.loadLWF({lwf:lwfURL, prefix:prefix, stage:canvas, onload:onLoad, onprogress:onProgress});
							}
							else
							{
								onComplete = $es4.$$coerce(function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Event);

	urlLoader.removeEventListener(Event.COMPLETE, onComplete);
	content = $$this.$$Loader.$_properties.LoaderScope.$_content = $es4.$$as(Browser.doEval(urlLoader.data), DisplayObject);
	$$this.addChild(content);
	$$this.$$Loader.$_properties.LoaderScope.$_urlLoader = null;
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.INIT)));
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
}
, Function);
								urlLoader = $$this.$$Loader.$_properties.LoaderScope.$_urlLoader = $es4.$$primitive(new URLLoader());
								urlLoader.addEventListener(Event.COMPLETE, onComplete);
								urlLoader.load(request);
							}
						}
						return;
					case 'jpg':
					case 'jpeg':
					case 'gif':
					case 'png':
					case 'xpng':
						var contentType = null;
						switch (suffix)
						{
							case 'jpg':
							case 'jpeg':
								contentType = 'image/jpeg';
								break;
							case 'gif':
								contentType = 'image/gif';
								break;
							case 'png':
							case 'xpng':
								contentType = 'image/png';
								break;
						}
						contentLoaderInfo.$__properties().LoaderInfoScope.$_contentType = contentType;
						var img = document.createElement('img');
						img.onerror = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	img.onload = img.onerror = null;
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new IOErrorEvent(IOErrorEvent.IO_ERROR, false, false, event.error)));
}
;
						img.onload = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	img.onerror = img.onload = null;
	content = $$this.$$Loader.$_properties.LoaderScope.$_content = $es4.$$primitive(new Bitmap());
	var properties = content.$__properties();
	var canvas = properties.DisplayObjectScope.$_domView;
	canvas.width = img.naturalWidth;
	canvas.height = img.naturalHeight;
	canvas.getContext('2d').drawImage(img, 0, 0);
	var bitmapData = $es4.$$coerce($es4.$$primitive(new BitmapData(canvas.width, canvas.height)), BitmapData);
	bitmapData.$__properties().BitmapDataScope.$_canvas = canvas;
	properties.BitmapScope.$_bitmapData = bitmapData;
	properties.DisplayObjectScope.$_setExplicitBounds(canvas.width, canvas.height);
	$$this.addChild(content);
	contentLoaderInfo.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
}
;
						if ($$this.$$Loader.$_properties.LoaderScope.$_srcset != null)
						{
							img.srcset = $$this.$$Loader.$_properties.LoaderScope.$_srcset;
						}
						img.src = url;
						return;
					default:
						throw $es4.$$primitive(new Error('Loader, attempt to load unknown type: ' + request.url));
				}
			}

			return $$this.$$Loader.$$load || ($$this.$$Loader.$$load = load);
		}});


		//public instance method
		Object.defineProperty(Loader.prototype, 'unload', {
		get:function ()
		{
			var $$this = this;

			function unload()
			{
				if (!$$this.$$Loader.$_properties.LoaderScope.$_lwf)
				{
					return;
				}
				if ($$this.$$Loader.$_properties.LoaderScope.$_content.parent == $$this)
				{
					$$this.$$Loader.$_properties.LoaderScope.$_content.$__properties().TLScope.parent.$__properties().TLScope.removeChild($$this.$$Loader.$_properties.LoaderScope.$_content);
				}
				var cache = Browser.getLWF().ResourceCache.get();
				cache.unloadLWF($$this.$$Loader.$_properties.LoaderScope.$_lwf);
			}

			return $$this.$$Loader.$$unload || ($$this.$$Loader.$$unload = unload);
		}});


		//public instance method
		Object.defineProperty(Loader.prototype, 'unloadAndStop', {
		get:function ()
		{
			var $$this = this;

			function unloadAndStop($$$$gc)
			{
				//set default parameter values
				var gc = (0 > arguments.length - 1) ? true : $es4.$$coerce($$$$gc, Boolean);

				$$this.unload();
			}

			return $$this.$$Loader.$$unloadAndStop || ($$this.$$Loader.$$unloadAndStop = unloadAndStop);
		}});


		//public instance method
		Object.defineProperty(Loader.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
			}

			return $$this.$$Loader.$$close || ($$this.$$Loader.$$close = close);
		}});


		//public instance method
		Object.defineProperty(Loader.prototype, 'loadBytes', {
		get:function ()
		{
			var $$this = this;

			function loadBytes($$$$bytes, $$$$context)
			{
				//set default parameter values
				var bytes = $es4.$$coerce($$$$bytes, ByteArray);
				var context = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$context, LoaderContext);

				throw $es4.$$primitive(new Error('Loader: attempted call to an unimplemented function "loadBytes"'));
			}

			return $$this.$$Loader.$$loadBytes || ($$this.$$Loader.$$loadBytes = loadBytes);
		}});

		Object.defineProperty(Loader.prototype, 'width', {get:function ()
		{
			var $$this = this;
			if ($es4.$$is($$this.$$Loader.$_properties.LoaderScope.$_content, Bitmap))
			{
				return $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_content.width * $$this.scaleX, Number);
			}
			return $es4.$$coerce($es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', 'width', 'func', undefined), Number);
		}, set:function ($$value)
		{
			var $$this = this; $es4.$$super2($$this, DisplayObjectContainer, '$$Loader', 'width', 'set', $$value);
		}});
		Object.defineProperty(Loader.prototype, 'height', {get:function ()
		{
			var $$this = this;
			if ($es4.$$is($$this.$$Loader.$_properties.LoaderScope.$_content, Bitmap))
			{
				return $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_content.height * $$this.scaleY, Number);
			}
			return $es4.$$coerce($es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', 'height', 'func', undefined), Number);
		}, set:function ($$value)
		{
			var $$this = this; $es4.$$super2($$this, DisplayObjectContainer, '$$Loader', 'height', 'set', $$value);
		}});
		Object.defineProperty(Loader.prototype, 'srcset', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_srcset, String);
		}, set:function ($$$$srcset)
		{
			//set default parameter values
			var srcset = $es4.$$coerce($$$$srcset, String);

			var $$this = this;
			$$this.$$Loader.$_properties.LoaderScope.$_srcset = srcset;
		}});
		Object.defineProperty(Loader.prototype, 'content', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_content, DisplayObject);
		}});
		Object.defineProperty(Loader.prototype, 'contentLoaderInfo', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Loader.$_properties.LoaderScope.$_contentLoaderInfo, LoaderInfo);
		}});
		Object.defineProperty(Loader.prototype, 'uncaughtErrorEvents', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Loader: attempted call to an unimplemented function "uncaughtErrorEvents"'));
		}});

		//properties
		Loader.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Loader.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Loader.$$p.$_properties = value }
		};

	});

	//class initializer
	Loader.$$cinit = (function ()
	{
		Loader.$$cinit = undefined;
	});

	function Loader()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Loader) || $$this.$$Loader !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Loader) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Loader.$$construct($$this, $$args);
		}
	}

	//construct
	Loader.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Loader.$$cinit !== undefined) Loader.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Loader', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Loader, '$_properties', Loader.prototype.$$v.$_properties);

		//call construct on super
		DisplayObjectContainer.$$construct($$this);

		//initialize properties
		Loader.$$iinit($$this);

		//call constructor
		if (args !== undefined) Loader.$$constructor.apply($$this, args);
	});

	//initializer
	Loader.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Loader.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObjectContainer.$$iinit($$this);
	});

	//constructor
	Loader.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$Loader.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObjectContainer.$$constructor.call($$this);
		$$this.$$Loader.$_properties.LoaderScope.$_contentLoaderInfo = $es4.$$primitive(new LoaderInfo());
		$$this.$$Loader.$_properties.LoaderScope.$_contentLoaderInfo.$__properties().LoaderInfoScope.$_loader = $$this;
	});

	return $es4.$$class(Loader, {EXTENDS:'flash.display.DisplayObjectContainer'}, 'flash.display::Loader');
})();
//flash.display.Loader


//flash.display.LoaderInfo
$es4.$$package('flash.display').LoaderInfo = (function ()
{
	//imports
	var EventDispatcher;
	var UncaughtErrorEvents;
	var ApplicationDomain;
	var ByteArray;
	var Browser;
	var ActionScriptVersion;
	var SWFVersion;

	//class pre initializer
	LoaderInfo.$$sinit = (function ()
	{
		LoaderInfo.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		UncaughtErrorEvents = $es4.$$['flash.events'].UncaughtErrorEvents;
		ApplicationDomain = $es4.$$['flash.system'].ApplicationDomain;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Browser = $es4.$$['browser'].Browser;
		ActionScriptVersion = $es4.$$['flash.display'].ActionScriptVersion;
		SWFVersion = $es4.$$['flash.display'].SWFVersion;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		LoaderInfo.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(LoaderInfo.prototype, "constructor", { value: LoaderInfo, enumerable: false });

		//hold private values
		Object.defineProperty(LoaderInfo.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(LoaderInfo.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$LoaderInfo.$_properties === undefined)
				{
					object = $es4.$$super2($$this, EventDispatcher, '$$EventDispatcher', '$__properties', 'func', undefined)(object);
					object.LoaderInfoScope = {$_parameters:{}, $_contentType:null, $_url:null, $_bytesTotal:null, $_bytesLoaded:null, $_loader:null};
					object.TLScope = $$this;
					return $$this.$$LoaderInfo.$_properties = object;
				}
				return $$this.$$LoaderInfo.$_properties;
			}

			return $$this.$$LoaderInfo.$$$__properties || ($$this.$$LoaderInfo.$$$__properties = $__properties);
		}});

		Object.defineProperty(LoaderInfo.prototype, 'actionScriptVersion', {get:function ()
		{
			var $$this = this;
			if ($$this.contentType == 'application/x-shockwave-flash')
			{
				return ActionScriptVersion.ACTIONSCRIPT3;
			}
			throw $es4.$$primitive(new Error('Incorrect contentType or not enough info available to retrieve actionScriptVersion'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'bytesLoaded', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_bytesLoaded, uint);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'bytesTotal', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_bytesTotal, uint);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'content', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_loader.content, DisplayObject);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'contentType', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_contentType, String);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'loader', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_loader, Loader);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'swfVersion', {get:function ()
		{
			var $$this = this;
			if ($$this.contentType == 'application/x-shockwave-flash')
			{
				return SWFVersion.FLASH9;
			}
			throw $es4.$$primitive(new Error('Incorrect contentType or not enough info available to retrieve swfVersion'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'url', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_url, String);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'width', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "width"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'uncaughtErrorEvents', {get:function ()
		{
			var $$this = this;
			return $es4.$$primitive(new UncaughtErrorEvents());
		}});
		Object.defineProperty(LoaderInfo.prototype, 'loaderURL', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "loaderURL"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'parameters', {get:function ()
		{
			var $$this = this;
			return $$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_parameters;
		}});
		Object.defineProperty(LoaderInfo.prototype, 'parentAllowsChild', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "parentAllowsChild"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'sameDomain', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "sameDomain"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'sharedEvents', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "sharedEvents"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'frameRate', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "frameRate"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'height', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "height"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'isURLInaccessible', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "isURLInaccessible"'));
		}});
		Object.defineProperty(LoaderInfo.prototype, 'applicationDomain', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_loader.$__properties().LoaderScope.$_loaderContext.applicationDomain, ApplicationDomain);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'bytes', {get:function ()
		{
			var $$this = this;
			return Browser.getByteArray($$this.$$LoaderInfo.$_properties.LoaderInfoScope.$_url);
		}});
		Object.defineProperty(LoaderInfo.prototype, 'childAllowsParent', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "childAllowsParent"'));
		}});

		//properties
		LoaderInfo.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$LoaderInfo.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$LoaderInfo.$$p.$_properties = value }
		};

	});

	//class initializer
	LoaderInfo.$$cinit = (function ()
	{
		LoaderInfo.$$cinit = undefined;
	});

	//public static method
	LoaderInfo.getLoaderInfoByDefinition = (function ($$$$object)
	{
		if (LoaderInfo.$$cinit !== undefined) LoaderInfo.$$cinit();

		//set default parameter values
		var object = $es4.$$coerce($$$$object, Object);

		throw $es4.$$primitive(new Error('LoaderInfo: attempted call to an unimplemented function "getLoaderInfoByDefinition"'));
	});
	function LoaderInfo()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof LoaderInfo) || $$this.$$LoaderInfo !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], LoaderInfo) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			LoaderInfo.$$construct($$this, $$args);
		}
	}

	//construct
	LoaderInfo.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (LoaderInfo.$$cinit !== undefined) LoaderInfo.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$LoaderInfo', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$LoaderInfo, '$_properties', LoaderInfo.prototype.$$v.$_properties);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		LoaderInfo.$$iinit($$this);

		//call constructor
		if (args !== undefined) LoaderInfo.$$constructor.apply($$this, args);
	});

	//initializer
	LoaderInfo.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$LoaderInfo.$$p.$_properties = undefined;
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	LoaderInfo.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$LoaderInfo.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(LoaderInfo, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.display::LoaderInfo');
})();
//flash.display.LoaderInfo


//flash.display.MorphShape
$$package('flash.display').MorphShape = function () { throw new Error('Use of unimplemented class: MorphShape'); }
//flash.display.MorphShape


//flash.display.MovieClip
$es4.$$package('flash.display').MovieClip = (function ()
{
	//imports
	var Scene;
	var Player;
	var Sprite;

	//class pre initializer
	MovieClip.$$sinit = (function ()
	{
		MovieClip.$$sinit = undefined;

		//initialize imports
		Scene = $es4.$$['flash.display'].Scene;
		Player = $es4.$$['player'].Player;
		Sprite = $es4.$$['flash.display'].Sprite;

		//ensure $$sinit is called on super class
		if (Sprite.$$sinit !== undefined) Sprite.$$sinit();

		//set prototype and constructor
		MovieClip.prototype = Object.create(Sprite.prototype);
		Object.defineProperty(MovieClip.prototype, "constructor", { value: MovieClip, enumerable: false });

		//hold private values
		Object.defineProperty(MovieClip.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(MovieClip.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$MovieClip.$_properties === undefined)
				{
					object = $es4.$$super2($$this, Sprite, '$$Sprite', '$__properties', 'func', undefined)(object);
					object.MovieClipScope = {$_setupLWF:$$this.$$MovieClip.$_setupLWF, $_setupFLWebGL:$$this.$$MovieClip.$_setupFLWebGL};
					object.TLScope = $$this;
					return $$this.$$MovieClip.$_properties = object;
				}
				return $$this.$$MovieClip.$_properties;
			}

			return $$this.$$MovieClip.$$$__properties || ($$this.$$MovieClip.$$$__properties = $__properties);
		}});


		//protected instance method
		Object.defineProperty(MovieClip.prototype, '$__createDomView', {
		get:function ()
		{
			var $$this = this;

			function $__createDomView()
			{
				return document.createElement('canvas');
			}

			return $$this.$$MovieClip.$$$__createDomView || ($$this.$$MovieClip.$$$__createDomView = $__createDomView);
		}});


		//private instance method
		MovieClip.prototype.$$v.$_setupLWF = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_setupLWF()
			{
				$$this.$$MovieClip.$_lwf = $$this.$$MovieClip.$_properties.DisplayObjectScope.$_domView.lwf;
				$$this.$$MovieClip.$_stage = $$this.$$MovieClip.$_lwf.rootMovie;
			}

			return $$this.$$MovieClip.$$p.$$$_setupLWF || ($$this.$$MovieClip.$$p.$$$_setupLWF = $_setupLWF);
		}};


		//private instance method
		MovieClip.prototype.$$v.$_setupFLWebGL = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_setupFLWebGL()
			{
				$$this.$$MovieClip.$_player = $$this.$$MovieClip.$_properties.DisplayObjectScope.$_domView.player;
				$$this.$$MovieClip.$_stage = $$this.$$MovieClip.$_player.getStage();
			}

			return $$this.$$MovieClip.$$p.$$$_setupFLWebGL || ($$this.$$MovieClip.$$p.$$$_setupFLWebGL = $_setupFLWebGL);
		}};


		//public instance method
		Object.defineProperty(MovieClip.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

				if (name === 'enterFrame')
				{
					if ($$this.$$MovieClip.$_lwf)
					{
						var lwf = $$this.$$MovieClip.$_lwf;
						lwf.exec(args * .001);
						lwf.render();
					}
					else if ($$this.$$MovieClip.$_player)
					{
						$$this.$$MovieClip.$_player.update();
					}
				}
				$es4.$$super2($$this, Sprite, '$$Sprite', '$__notify', 'func', undefined)(name, args);
			}

			return $$this.$$MovieClip.$$$__notify || ($$this.$$MovieClip.$$$__notify = $__notify);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'addFrameScript', {
		get:function ()
		{
			var $$this = this;

			function addFrameScript($$$$rest)
			{
				//set default parameter values
				for (var $$i = 0, $$length = arguments.length, rest = new Array($$length - 0); $$i < $$length; $$i += 1) rest[$$i - 0] = arguments[$$i];

				throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "addFrameScript"'));
			}

			return $$this.$$MovieClip.$$addFrameScript || ($$this.$$MovieClip.$$addFrameScript = addFrameScript);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'gotoAndPlay', {
		get:function ()
		{
			var $$this = this;

			function gotoAndPlay($$$$frame, $$$$scene)
			{
				//set default parameter values
				var frame = $es4.$$coerce($$$$frame, Object);
				var scene = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$scene, String);

				$$this.$$MovieClip.$_stage.gotoAndPlay(frame);
			}

			return $$this.$$MovieClip.$$gotoAndPlay || ($$this.$$MovieClip.$$gotoAndPlay = gotoAndPlay);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'gotoAndStop', {
		get:function ()
		{
			var $$this = this;

			function gotoAndStop($$$$frame, $$$$scene)
			{
				//set default parameter values
				var frame = $es4.$$coerce($$$$frame, Object);
				var scene = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$scene, String);

				$$this.$$MovieClip.$_stage.gotoAndStop(frame);
			}

			return $$this.$$MovieClip.$$gotoAndStop || ($$this.$$MovieClip.$$gotoAndStop = gotoAndStop);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'nextFrame', {
		get:function ()
		{
			var $$this = this;

			function nextFrame()
			{
				throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "nextFrame"'));
			}

			return $$this.$$MovieClip.$$nextFrame || ($$this.$$MovieClip.$$nextFrame = nextFrame);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'nextScene', {
		get:function ()
		{
			var $$this = this;

			function nextScene()
			{
				throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "nextScene"'));
			}

			return $$this.$$MovieClip.$$nextScene || ($$this.$$MovieClip.$$nextScene = nextScene);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'play', {
		get:function ()
		{
			var $$this = this;

			function play()
			{
				$$this.$$MovieClip.$_stage.play();
			}

			return $$this.$$MovieClip.$$play || ($$this.$$MovieClip.$$play = play);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'prevFrame', {
		get:function ()
		{
			var $$this = this;

			function prevFrame()
			{
				throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "prevFrame"'));
			}

			return $$this.$$MovieClip.$$prevFrame || ($$this.$$MovieClip.$$prevFrame = prevFrame);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'prevScene', {
		get:function ()
		{
			var $$this = this;

			function prevScene()
			{
				throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "prevScene"'));
			}

			return $$this.$$MovieClip.$$prevScene || ($$this.$$MovieClip.$$prevScene = prevScene);
		}});


		//public instance method
		Object.defineProperty(MovieClip.prototype, 'stop', {
		get:function ()
		{
			var $$this = this;

			function stop()
			{
				$$this.$$MovieClip.$_stage.stop();
			}

			return $$this.$$MovieClip.$$stop || ($$this.$$MovieClip.$$stop = stop);
		}});

		Object.defineProperty(MovieClip.prototype, 'currentFrame', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$MovieClip.$_stage.currentFrame, int);
		}});
		Object.defineProperty(MovieClip.prototype, 'currentFrameLabel', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "currentFrameLabel"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'currentLabel', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "currentLabel"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'currentLabels', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "currentLabels"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'currentScene', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "currentScene"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'enabled', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "enabled"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "enabled"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'framesLoaded', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "framesLoaded"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'scenes', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "scenes"'));
		}});
		Object.defineProperty(MovieClip.prototype, 'totalFrames', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$MovieClip.$_stage.totalFrames, int);
		}});
		Object.defineProperty(MovieClip.prototype, 'trackAsMenu', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "trackAsMenu"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('MovieClip: attempted call to an unimplemented function "trackAsMenu"'));
		}});

		//properties
		MovieClip.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$MovieClip.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$MovieClip.$$p.$_properties = value }
		};

		MovieClip.prototype.$$v.$_lwf = {
		get:function () { var $$this = this.$$this; return $$this.$$MovieClip.$$p.$_lwf; },
		set:function (value) { var $$this = this.$$this; $$this.$$MovieClip.$$p.$_lwf = value }
		};

		MovieClip.prototype.$$v.$_player = {
		get:function () { var $$this = this.$$this; return $$this.$$MovieClip.$$p.$_player; },
		set:function (value) { var $$this = this.$$this; $$this.$$MovieClip.$$p.$_player = value }
		};

		MovieClip.prototype.$$v.$_stage = {
		get:function () { var $$this = this.$$this; return $$this.$$MovieClip.$$p.$_stage; },
		set:function (value) { var $$this = this.$$this; $$this.$$MovieClip.$$p.$_stage = value }
		};

	});

	//class initializer
	MovieClip.$$cinit = (function ()
	{
		MovieClip.$$cinit = undefined;
	});

	function MovieClip()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof MovieClip) || $$this.$$MovieClip !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], MovieClip) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			MovieClip.$$construct($$this, $$args);
		}
	}

	//construct
	MovieClip.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (MovieClip.$$cinit !== undefined) MovieClip.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$MovieClip', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$MovieClip, '$_properties', MovieClip.prototype.$$v.$_properties);
		Object.defineProperty($$this.$$MovieClip, '$_lwf', MovieClip.prototype.$$v.$_lwf);
		Object.defineProperty($$this.$$MovieClip, '$_player', MovieClip.prototype.$$v.$_player);
		Object.defineProperty($$this.$$MovieClip, '$_stage', MovieClip.prototype.$$v.$_stage);

		//private instance method
		Object.defineProperty($$this.$$MovieClip, '$_setupLWF', MovieClip.prototype.$$v.$_setupLWF);

		//private instance method
		Object.defineProperty($$this.$$MovieClip, '$_setupFLWebGL', MovieClip.prototype.$$v.$_setupFLWebGL);

		//call construct on super
		Sprite.$$construct($$this);

		//initialize properties
		MovieClip.$$iinit($$this);

		//call constructor
		if (args !== undefined) MovieClip.$$constructor.apply($$this, args);
	});

	//initializer
	MovieClip.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$MovieClip.$$p.$_properties = undefined;
		$$this.$$MovieClip.$$p.$_lwf = undefined;
		$$this.$$MovieClip.$$p.$_player = undefined;
		$$this.$$MovieClip.$$p.$_stage = undefined;
	
		//call iinit on super
		Sprite.$$iinit($$this);
	});

	//constructor
	MovieClip.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$MovieClip.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		Sprite.$$constructor.call($$this);
	});

	return $es4.$$class(MovieClip, {EXTENDS:'flash.display.Sprite'}, 'flash.display::MovieClip');
})();
//flash.display.MovieClip


//flash.display.NativeMenu
$$package('flash.display').NativeMenu = function () { throw new Error('Use of unimplemented class: NativeMenu'); }
//flash.display.NativeMenu


//flash.display.NativeMenuItem
$$package('flash.display').NativeMenuItem = function () { throw new Error('Use of unimplemented class: NativeMenuItem'); }
//flash.display.NativeMenuItem


//flash.display.PixelSnapping
$es4.$$package('flash.display').PixelSnapping = (function ()
{
	//properties
	var $$j = {};
	PixelSnapping.ALWAYS = "always";
	PixelSnapping.AUTO = "auto";
	PixelSnapping.NEVER = "never";

	//class pre initializer
	PixelSnapping.$$sinit = (function ()
	{
		PixelSnapping.$$sinit = undefined;

		//set prototype and constructor
		PixelSnapping.prototype = Object.create(Object.prototype);
		Object.defineProperty(PixelSnapping.prototype, "constructor", { value: PixelSnapping, enumerable: false });

		//hold private values
		Object.defineProperty(PixelSnapping.prototype, '$$v', {value:{}});
	});

	//class initializer
	PixelSnapping.$$cinit = (function ()
	{
		PixelSnapping.$$cinit = undefined;
	});

	function PixelSnapping()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof PixelSnapping) || $$this.$$PixelSnapping !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], PixelSnapping) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			PixelSnapping.$$construct($$this, $$args);
		}
	}

	//construct
	PixelSnapping.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (PixelSnapping.$$cinit !== undefined) PixelSnapping.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$PixelSnapping', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		PixelSnapping.$$iinit($$this);

		//call constructor
		if (args !== undefined) PixelSnapping.$$constructor.apply($$this, args);
	});

	//initializer
	PixelSnapping.$$iinit = (function ($$this)
	{
	});

	//constructor
	PixelSnapping.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(PixelSnapping, null, 'flash.display::PixelSnapping');
})();
//flash.display.PixelSnapping


//flash.display.Scene
$$package('flash.display').Scene = function () { throw new Error('Use of unimplemented class: Scene'); }
//flash.display.Scene


//flash.display.Shader
$$package('flash.display').Shader = function () { throw new Error('Use of unimplemented class: Shader'); }
//flash.display.Shader


//flash.display.ShaderData
$$package('flash.display').ShaderData = function () { throw new Error('Use of unimplemented class: ShaderData'); }
//flash.display.ShaderData


//flash.display.ShaderInput
$$package('flash.display').ShaderInput = function () { throw new Error('Use of unimplemented class: ShaderInput'); }
//flash.display.ShaderInput


//flash.display.ShaderJob
$$package('flash.display').ShaderJob = function () { throw new Error('Use of unimplemented class: ShaderJob'); }
//flash.display.ShaderJob


//flash.display.ShaderParameter
$$package('flash.display').ShaderParameter = function () { throw new Error('Use of unimplemented class: ShaderParameter'); }
//flash.display.ShaderParameter


//flash.display.ShaderParameterType
$$package('flash.display').ShaderParameterType = function () { throw new Error('Use of unimplemented class: ShaderParameterType'); }
//flash.display.ShaderParameterType


//flash.display.ShaderPrecision
$$package('flash.display').ShaderPrecision = function () { throw new Error('Use of unimplemented class: ShaderPrecision'); }
//flash.display.ShaderPrecision


//flash.display.Shape
$es4.$$package('flash.display').Shape = (function ()
{
	//imports
	var Graphics;
	var DisplayObject;

	//class pre initializer
	Shape.$$sinit = (function ()
	{
		Shape.$$sinit = undefined;

		//initialize imports
		Graphics = $es4.$$['flash.display'].Graphics;
		DisplayObject = $es4.$$['flash.display'].DisplayObject;

		//ensure $$sinit is called on super class
		if (DisplayObject.$$sinit !== undefined) DisplayObject.$$sinit();

		//set prototype and constructor
		Shape.prototype = Object.create(DisplayObject.prototype);
		Object.defineProperty(Shape.prototype, "constructor", { value: Shape, enumerable: false });

		//hold private values
		Object.defineProperty(Shape.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Shape.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Shape.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__properties', 'func', undefined)(object);
					object.ShapeScope = {};
					return $$this.$$Shape.$_properties = object;
				}
				return $$this.$$Shape.$_properties;
			}

			return $$this.$$Shape.$$$__properties || ($$this.$$Shape.$$$__properties = $__properties);
		}});

		Object.defineProperty(Shape.prototype, 'graphics', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(($$this.$$Shape.$_properties.ShapeScope.$_graphics) ? $$this.$$Shape.$_properties.ShapeScope.$_graphics : $$this.$$Shape.$_properties.ShapeScope.$_graphics = $es4.$$primitive(new Graphics($$this)), Graphics);
		}});

		//properties
		Shape.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Shape.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Shape.$$p.$_properties = value }
		};

	});

	//class initializer
	Shape.$$cinit = (function ()
	{
		Shape.$$cinit = undefined;
	});

	function Shape()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Shape) || $$this.$$Shape !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Shape) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Shape.$$construct($$this, $$args);
		}
	}

	//construct
	Shape.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Shape.$$cinit !== undefined) Shape.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Shape', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Shape, '$_properties', Shape.prototype.$$v.$_properties);

		//call construct on super
		DisplayObject.$$construct($$this);

		//initialize properties
		Shape.$$iinit($$this);

		//call constructor
		if (args !== undefined) Shape.$$constructor.apply($$this, args);
	});

	//initializer
	Shape.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Shape.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObject.$$iinit($$this);
	});

	//constructor
	Shape.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$Shape.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObject.$$constructor.call($$this);
	});

	return $es4.$$class(Shape, {EXTENDS:'flash.display.DisplayObject'}, 'flash.display::Shape');
})();
//flash.display.Shape


//flash.display.SimpleButton
$es4.$$package('flash.display').SimpleButton = (function ()
{
	//imports
	var DisplayObject;
	var Event;
	var MouseEvent;
	var SoundTransform;
	var InteractiveObject;
	var Stage;

	//properties
	var $$j = {};
	SimpleButton.MOUSE_BOUNDS_STATE_OUT = 1;
	SimpleButton.MOUSE_BOUNDS_STATE_OVER = 2;
	SimpleButton.MOUSE_PRESS_STATE_DOWN = 3;
	SimpleButton.MOUSE_PRESS_STATE_UP = 4;

	//class pre initializer
	SimpleButton.$$sinit = (function ()
	{
		SimpleButton.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		Event = $es4.$$['flash.events'].Event;
		MouseEvent = $es4.$$['flash.events'].MouseEvent;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Stage = $es4.$$['flash.display'].Stage;

		//ensure $$sinit is called on super class
		if (InteractiveObject.$$sinit !== undefined) InteractiveObject.$$sinit();

		//set prototype and constructor
		SimpleButton.prototype = Object.create(InteractiveObject.prototype);
		Object.defineProperty(SimpleButton.prototype, "constructor", { value: SimpleButton, enumerable: false });

		//hold private values
		Object.defineProperty(SimpleButton.prototype, '$$v', {value:{}});

		//private instance method
		SimpleButton.prototype.$$v.$onRemovedFromStage = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onRemovedFromStage($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				if ($$this.$$SimpleButton._stage)
				{
					$$this.$$SimpleButton._stage.removeEventListener(MouseEvent.MOUSE_UP, $$this.$$SimpleButton.$onUpEvent);
					$$this.$$SimpleButton._stage = null;
				}
				$$this.$$SimpleButton._mouseBoundsState = SimpleButton.MOUSE_BOUNDS_STATE_OUT;
				$$this.$$SimpleButton._mousePressState = SimpleButton.MOUSE_PRESS_STATE_UP;
			}

			return $$this.$$SimpleButton.$$p.$$$onRemovedFromStage || ($$this.$$SimpleButton.$$p.$$$onRemovedFromStage = $onRemovedFromStage);
		}};


		//public instance method
		Object.defineProperty(SimpleButton.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$SimpleButton.$_properties === undefined)
				{
					object = $es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', '$__properties', 'func', undefined)(object);
					object.SimpleButtonScope = {$_upState:null, $_overState:null, $_downState:null, $_hitTestState:null, $_enabled:true, $_useHandCursor:true, $_currentState:null};
					object.TLScope = $$this;
					return $$this.$$SimpleButton.$_properties = object;
				}
				return $$this.$$SimpleButton.$_properties;
			}

			return $$this.$$SimpleButton.$$$__properties || ($$this.$$SimpleButton.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(SimpleButton.prototype, 'dispatchEvent', {
		get:function ()
		{
			var $$this = this;

			function dispatchEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				if (!($es4.$$is(event, MouseEvent)) || !event.$__properties().EventScope.$_originalTarget)
				{
					return $es4.$$coerce($es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'dispatchEvent', 'func', undefined)(event), Boolean);
				}
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
				{
					return false;
				}
				var domView = $$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView;
				var parent = event.$__properties().EventScope.$_originalTarget;
				var hitTest = $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState.$__properties().DisplayObjectScope.$_domView;
				var found = $es4.$$coerce(parent == hitTest, Boolean);
				while (parent != document.body && parent != domView)
				{
					if (parent == hitTest)
					{
						found = true;
						break;
					}
					parent = parent.parentNode;
				}
				if (found)
				{
					var type = event.type;
					if (type == MouseEvent.CLICK)
					{
						return $$this.$$SimpleButton.$onClickEvent($es4.$$as(event, MouseEvent));
					}
					if (type == MouseEvent.MOUSE_OUT)
					{
						return $$this.$$SimpleButton.$onOutEvent($es4.$$as(event, MouseEvent));
					}
					if (type == MouseEvent.MOUSE_OVER)
					{
						return $$this.$$SimpleButton.$onOverEvent($es4.$$as(event, MouseEvent));
					}
					if (type == MouseEvent.MOUSE_DOWN)
					{
						return $$this.$$SimpleButton.$onDownEvent($es4.$$as(event, MouseEvent));
					}
					if (type == MouseEvent.MOUSE_UP)
					{
						return $$this.$$SimpleButton.$onUpEvent($es4.$$as(event, MouseEvent));
					}
					else
					{
						return false;
					}
				}
				if (event.type == MouseEvent.CLICK)
				{
					return false;
				}
				return $es4.$$coerce($es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'dispatchEvent', 'func', undefined)(event), Boolean);
			}

			return $$this.$$SimpleButton.$$dispatchEvent || ($$this.$$SimpleButton.$$dispatchEvent = dispatchEvent);
		}});


		//private instance method
		SimpleButton.prototype.$$v.$_refreshVisualState = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_refreshVisualState()
			{
				var currentState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState, DisplayObject);
				var upState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState, DisplayObject);
				var downState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState, DisplayObject);
				var overState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState, DisplayObject);
				var hitTestState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState, DisplayObject);
				var state = null;
				if ($$this.$$SimpleButton._mousePressState == SimpleButton.MOUSE_PRESS_STATE_DOWN)
				{
					state = downState || currentState || overState || upState;
				}
				else if ($$this.$$SimpleButton._mouseBoundsState == SimpleButton.MOUSE_BOUNDS_STATE_OVER)
				{
					state = overState || currentState || upState;
				}
				else
				{
					state = upState || currentState;
				}
				if (state == null || state == currentState)
				{
					return;
				}
				if (currentState && currentState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
				{
					$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.removeChild(currentState.$__properties().DisplayObjectScope.$_domView);
				}
				if ($$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.firstChild)
				{
					$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.insertBefore(state.$__properties().DisplayObjectScope.$_domView, $$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.firstChild);
				}
				else
				{
					$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.appendChild(state.$__properties().DisplayObjectScope.$_domView);
				}
				if (hitTestState)
				{
					if (state != hitTestState)
					{
						hitTestState.$__properties().DisplayObjectScope.$_domView.style.opacity = 0;
					}
					else
					{
						hitTestState.$__properties().DisplayObjectScope.$_domView.style.opacity = hitTestState.$__properties().DisplayObjectScope.$_opacity;
					}
				}
				$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState = state;
			}

			return $$this.$$SimpleButton.$$p.$$$_refreshVisualState || ($$this.$$SimpleButton.$$p.$$$_refreshVisualState = $_refreshVisualState);
		}};


		//private instance method
		SimpleButton.prototype.$$v.$onClickEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onClickEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, MouseEvent);

				event.stopImmediatePropagation();
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled || !$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				event = $es4.$$coerce($es4.$$as(event.clone(), MouseEvent), MouseEvent);
				event.$__properties().EventScope.$_withTarget(event, $$this);
				return $$this.dispatchEvent(event);
			}

			return $$this.$$SimpleButton.$$p.$$$onClickEvent || ($$this.$$SimpleButton.$$p.$$$onClickEvent = $onClickEvent);
		}};


		//private instance method
		SimpleButton.prototype.$$v.$onOverEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onOverEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, MouseEvent);

				$$this.$$SimpleButton._mouseBoundsState = SimpleButton.MOUSE_BOUNDS_STATE_OVER;
				event.stopImmediatePropagation();
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled || !$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				$$this.$$SimpleButton.$_refreshVisualState();
				event = $es4.$$coerce($es4.$$as(event.clone(), MouseEvent), MouseEvent);
				event.$__properties().EventScope.$_withTarget(event, $$this);
				return $$this.dispatchEvent(event);
			}

			return $$this.$$SimpleButton.$$p.$$$onOverEvent || ($$this.$$SimpleButton.$$p.$$$onOverEvent = $onOverEvent);
		}};


		//private instance method
		SimpleButton.prototype.$$v.$onOutEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onOutEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, MouseEvent);

				$$this.$$SimpleButton._mouseBoundsState = SimpleButton.MOUSE_BOUNDS_STATE_OUT;
				event.stopImmediatePropagation();
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled || !$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				$$this.$$SimpleButton.$_refreshVisualState();
				event = $es4.$$coerce($es4.$$as(event.clone(), MouseEvent), MouseEvent);
				event.$__properties().EventScope.$_withTarget(event, $$this);
				return $$this.dispatchEvent(event);
			}

			return $$this.$$SimpleButton.$$p.$$$onOutEvent || ($$this.$$SimpleButton.$$p.$$$onOutEvent = $onOutEvent);
		}};


		//private instance method
		SimpleButton.prototype.$$v.$onDownEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onDownEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, MouseEvent);

				$$this.$$SimpleButton._mousePressState = SimpleButton.MOUSE_PRESS_STATE_DOWN;
				$$this.$$SimpleButton._stage = event.target.stage;
				$$this.$$SimpleButton._stage.addEventListener(MouseEvent.MOUSE_UP, $$this.$$SimpleButton.$onUpEvent);
				event.stopImmediatePropagation();
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled || !$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				$$this.$$SimpleButton.$_refreshVisualState();
				event = $es4.$$coerce($es4.$$as(event.clone(), MouseEvent), MouseEvent);
				event.$__properties().EventScope.$_withTarget(event, $$this);
				return $$this.dispatchEvent(event);
			}

			return $$this.$$SimpleButton.$$p.$$$onDownEvent || ($$this.$$SimpleButton.$$p.$$$onDownEvent = $onDownEvent);
		}};


		//private instance method
		SimpleButton.prototype.$$v.$onUpEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function $onUpEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, MouseEvent);

				$$this.$$SimpleButton._mousePressState = SimpleButton.MOUSE_PRESS_STATE_UP;
				if ($$this.$$SimpleButton._stage)
				{
					$$this.$$SimpleButton._stage.removeEventListener(MouseEvent.MOUSE_UP, $$this.$$SimpleButton.$onUpEvent);
					$$this.$$SimpleButton._stage = null;
				}
				event.stopImmediatePropagation();
				if (!$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled || !$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_mouseEnabled)
				{
					return false;
				}
				$$this.$$SimpleButton.$_refreshVisualState();
				event = $es4.$$coerce($es4.$$as(event.clone(), MouseEvent), MouseEvent);
				event.$__properties().EventScope.$_withTarget(event, $$this);
				return $$this.dispatchEvent(event);
			}

			return $$this.$$SimpleButton.$$p.$$$onUpEvent || ($$this.$$SimpleButton.$$p.$$$onUpEvent = $onUpEvent);
		}};

		Object.defineProperty(SimpleButton.prototype, 'downState', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState, DisplayObject);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, DisplayObject);

			var $$this = this;
			if ($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState)
			{
				var oldState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState, DisplayObject);
				if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState && oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState && $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState == oldState)
				{
					$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState = null;
					if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
					{
						$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.removeChild(oldState.$__properties().DisplayObjectScope.$_domView);
					}
				}
			}
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState = value;
			$$this.$$SimpleButton.$_refreshVisualState();
		}});
		Object.defineProperty(SimpleButton.prototype, 'enabled', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_enabled = value;
			$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.setAttribute('aria-disabled', !value);
			if (value && $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_useHandCursor)
			{
				$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.cursor = 'pointer';
			}
			else
			{
				$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.cursor = 'auto';
			}
			$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.pointerEvents = (value) ? 'auto' : 'none';
		}});
		Object.defineProperty(SimpleButton.prototype, 'hitTestState', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState, DisplayObject);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, DisplayObject);

			var $$this = this;
			if ($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
			{
				var oldHitTestState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState, DisplayObject);
				if (oldHitTestState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState && oldHitTestState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState && oldHitTestState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState)
				{
					$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.removeChild(oldHitTestState.$__properties().DisplayObjectScope.$_domView);
				}
			}
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState = value;
			if (value && value != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState && value != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState && value != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState)
			{
				$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.appendChild(value.$__properties().DisplayObjectScope.$_domView);
			}
			$$this.$$SimpleButton.$_refreshVisualState();
		}});
		Object.defineProperty(SimpleButton.prototype, 'overState', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState, DisplayObject);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, DisplayObject);

			var $$this = this;
			if ($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState)
			{
				var oldState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState, DisplayObject);
				if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState && oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState && $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState == oldState)
				{
					$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState = null;
					if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
					{
						$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.removeChild(oldState.$__properties().DisplayObjectScope.$_domView);
					}
				}
			}
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState = value;
			$$this.$$SimpleButton.$_refreshVisualState();
		}});
		Object.defineProperty(SimpleButton.prototype, 'soundTransform', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SimpleButton: attempted call to an unimplemented function "soundTransform"'));
		}, set:function ($$$$sndTransform)
		{
			//set default parameter values
			var sndTransform = $es4.$$coerce($$$$sndTransform, SoundTransform);

			var $$this = this;
			throw $es4.$$primitive(new Error('SimpleButton: attempted call to an unimplemented function "soundTransform"'));
		}});
		Object.defineProperty(SimpleButton.prototype, 'trackAsMenu', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SimpleButton: attempted call to an unimplemented function "trackAsMenu"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('SimpleButton: attempted call to an unimplemented function "trackAsMenu"'));
		}});
		Object.defineProperty(SimpleButton.prototype, 'upState', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState, DisplayObject);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, DisplayObject);

			var $$this = this;
			if ($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState)
			{
				var oldState = $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState, DisplayObject);
				if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_downState && oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_overState && $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState == oldState)
				{
					$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_currentState = null;
					if (oldState != $$this.$$SimpleButton.$_properties.SimpleButtonScope.$_hitTestState)
					{
						$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.removeChild(oldState.$__properties().DisplayObjectScope.$_domView);
					}
				}
			}
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_upState = value;
			$$this.$$SimpleButton.$_refreshVisualState();
		}});
		Object.defineProperty(SimpleButton.prototype, 'useHandCursor', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$SimpleButton.$_properties.SimpleButtonScope.$_useHandCursor, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$SimpleButton.$_properties.SimpleButtonScope.$_useHandCursor = value;
			if (value)
			{
				$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.cursor = 'pointer';
			}
			else
			{
				$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.cursor = 'auto';
			}
		}});

		//properties
		SimpleButton.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$SimpleButton.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$SimpleButton.$$p.$_properties = value }
		};

		SimpleButton.prototype.$$v._mouseBoundsState = {
		get:function () { var $$this = this.$$this; return $$this.$$SimpleButton.$$p._mouseBoundsState; },
		set:function (value) { var $$this = this.$$this; $$this.$$SimpleButton.$$p._mouseBoundsState = $es4.$$coerce(value, int); }
		};

		SimpleButton.prototype.$$v._mousePressState = {
		get:function () { var $$this = this.$$this; return $$this.$$SimpleButton.$$p._mousePressState; },
		set:function (value) { var $$this = this.$$this; $$this.$$SimpleButton.$$p._mousePressState = $es4.$$coerce(value, int); }
		};

		SimpleButton.prototype.$$v._stage = {
		get:function () { var $$this = this.$$this; return $$this.$$SimpleButton.$$p._stage; },
		set:function (value) { var $$this = this.$$this; $$this.$$SimpleButton.$$p._stage = $es4.$$coerce(value, Stage); }
		};

	});

	//class initializer
	SimpleButton.$$cinit = (function ()
	{
		SimpleButton.$$cinit = undefined;
	});

	function SimpleButton()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SimpleButton) || $$this.$$SimpleButton !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SimpleButton) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SimpleButton.$$construct($$this, $$args);
		}
	}

	//construct
	SimpleButton.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SimpleButton.$$cinit !== undefined) SimpleButton.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SimpleButton', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$SimpleButton, '$_properties', SimpleButton.prototype.$$v.$_properties);
		Object.defineProperty($$this.$$SimpleButton, '_mouseBoundsState', SimpleButton.prototype.$$v._mouseBoundsState);
		Object.defineProperty($$this.$$SimpleButton, '_mousePressState', SimpleButton.prototype.$$v._mousePressState);
		Object.defineProperty($$this.$$SimpleButton, '_stage', SimpleButton.prototype.$$v._stage);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onRemovedFromStage', SimpleButton.prototype.$$v.$onRemovedFromStage);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$_refreshVisualState', SimpleButton.prototype.$$v.$_refreshVisualState);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onClickEvent', SimpleButton.prototype.$$v.$onClickEvent);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onOverEvent', SimpleButton.prototype.$$v.$onOverEvent);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onOutEvent', SimpleButton.prototype.$$v.$onOutEvent);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onDownEvent', SimpleButton.prototype.$$v.$onDownEvent);

		//private instance method
		Object.defineProperty($$this.$$SimpleButton, '$onUpEvent', SimpleButton.prototype.$$v.$onUpEvent);

		//call construct on super
		InteractiveObject.$$construct($$this);

		//initialize properties
		SimpleButton.$$iinit($$this);

		//call constructor
		if (args !== undefined) SimpleButton.$$constructor.apply($$this, args);
	});

	//initializer
	SimpleButton.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$SimpleButton.$$p.$_properties = undefined;
		$$this.$$SimpleButton.$$p._mouseBoundsState = $es4.$$coerce(SimpleButton.MOUSE_BOUNDS_STATE_OUT, int);
		$$this.$$SimpleButton.$$p._mousePressState = $es4.$$coerce(SimpleButton.MOUSE_PRESS_STATE_UP, int);
		$$this.$$SimpleButton.$$p._stage = $es4.$$coerce(undefined, Stage);
	
		//call iinit on super
		InteractiveObject.$$iinit($$this);
	});

	//constructor
	SimpleButton.$$constructor = (function ($$$$upState, $$$$overState, $$$$downState, $$$$hitTestState)
	{
		var $$this = this;
		//set default parameter values
		var upState = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$upState, DisplayObject);
		var overState = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$overState, DisplayObject);
		var downState = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$downState, DisplayObject);
		var hitTestState = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$hitTestState, DisplayObject);

		if ($$this.$$SimpleButton.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		InteractiveObject.$$constructor.call($$this);
		$$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_tabEnabled = true;
		$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.setAttribute('role', $$this.$$SimpleButton.$_properties.InteractiveObjectScope.$_role = 'button');
		$$this.$$SimpleButton.$_properties.DisplayObjectScope.$_domView.style.cursor = 'pointer';
		$$this.addEventListener(Event.REMOVED_FROM_STAGE, $$this.$$SimpleButton.$onRemovedFromStage);
	});

	return $es4.$$class(SimpleButton, {EXTENDS:'flash.display.InteractiveObject'}, 'flash.display::SimpleButton');
})();
//flash.display.SimpleButton


//flash.display.SpreadMethod
$$package('flash.display').SpreadMethod = function () { throw new Error('Use of unimplemented class: SpreadMethod'); }
//flash.display.SpreadMethod


//flash.display.Sprite
$es4.$$package('flash.display').Sprite = (function ()
{
	//imports
	var DisplayObject;
	var Graphics;
	var MouseEvent;
	var Point;
	var Rectangle;
	var SoundTransform;
	var DisplayObjectContainer;
	var Sprite;

	//properties
	var $$j = {};
	Object.defineProperty(Sprite, '$_dragging', {
	get:function () { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); return $$j.$_dragging; },
	set:function (value) { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); $$j.$_dragging = $es4.$$coerce(value, Sprite); }
	});

	Object.defineProperty(Sprite, '$_lockCenter', {
	get:function () { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); return $$j.$_lockCenter; },
	set:function (value) { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); $$j.$_lockCenter = $es4.$$coerce(value, Boolean); }
	});

	Object.defineProperty(Sprite, '$_bounds', {
	get:function () { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); return $$j.$_bounds; },
	set:function (value) { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); $$j.$_bounds = $es4.$$coerce(value, Rectangle); }
	});

	Object.defineProperty(Sprite, '$_dragPoint', {
	get:function () { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); return $$j.$_dragPoint; },
	set:function (value) { if (Sprite.$$cinit !== undefined) Sprite.$$cinit(); $$j.$_dragPoint = $es4.$$coerce(value, Point); }
	});


	//class pre initializer
	Sprite.$$sinit = (function ()
	{
		Sprite.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		Graphics = $es4.$$['flash.display'].Graphics;
		MouseEvent = $es4.$$['flash.events'].MouseEvent;
		Point = $es4.$$['flash.geom'].Point;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;

		//ensure $$sinit is called on super class
		if (DisplayObjectContainer.$$sinit !== undefined) DisplayObjectContainer.$$sinit();

		//set prototype and constructor
		Sprite.prototype = Object.create(DisplayObjectContainer.prototype);
		Object.defineProperty(Sprite.prototype, "constructor", { value: Sprite, enumerable: false });

		//hold private values
		Object.defineProperty(Sprite.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Sprite.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Sprite.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', '$__properties', 'func', undefined)(object);
					object.SpriteScope = {$_useHandCursor:true, $_buttonMode:false};
					object.TLScope = $$this;
					return $$this.$$Sprite.$_properties = object;
				}
				return $$this.$$Sprite.$_properties;
			}

			return $$this.$$Sprite.$$$__properties || ($$this.$$Sprite.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(Sprite.prototype, 'startDrag', {
		get:function ()
		{
			var $$this = this;

			function startDrag($$$$lockCenter, $$$$bounds)
			{
				//set default parameter values
				var lockCenter = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$lockCenter, Boolean);
				var bounds = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$bounds, Rectangle);

				if (Sprite.$_dragging)
				{
					$$this.stopDrag();
				}
				Sprite.$_dragging = $$this;
				Sprite.$_lockCenter = lockCenter;
				Sprite.$_bounds = bounds;
				Sprite.$_dragPoint = $es4.$$primitive(new Point($$this.mouseX, $$this.mouseY));
				$$this.stage.addEventListener(MouseEvent.MOUSE_MOVE, Sprite.$_onMouseMove);
			}

			return $$this.$$Sprite.$$startDrag || ($$this.$$Sprite.$$startDrag = startDrag);
		}});


		//public instance method
		Object.defineProperty(Sprite.prototype, 'startTouchDrag', {
		get:function ()
		{
			var $$this = this;

			function startTouchDrag($$$$touchPointID, $$$$lockCenter, $$$$bounds)
			{
				//set default parameter values
				var touchPointID = $es4.$$coerce($$$$touchPointID, int);
				var lockCenter = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$lockCenter, Boolean);
				var bounds = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$bounds, Rectangle);

				throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "startTouchDrag"'));
			}

			return $$this.$$Sprite.$$startTouchDrag || ($$this.$$Sprite.$$startTouchDrag = startTouchDrag);
		}});


		//public instance method
		Object.defineProperty(Sprite.prototype, 'stopDrag', {
		get:function ()
		{
			var $$this = this;

			function stopDrag()
			{
				if (!Sprite.$_dragging)
				{
					return;
				}
				$$this.stage.removeEventListener(MouseEvent.MOUSE_MOVE, Sprite.$_onMouseMove);
				Sprite.$_dragging = null;
				Sprite.$_bounds = null;
				Sprite.$_dragPoint = null;
			}

			return $$this.$$Sprite.$$stopDrag || ($$this.$$Sprite.$$stopDrag = stopDrag);
		}});


		//public instance method
		Object.defineProperty(Sprite.prototype, 'stopTouchDrag', {
		get:function ()
		{
			var $$this = this;

			function stopTouchDrag($$$$touchPointID)
			{
				//set default parameter values
				var touchPointID = $es4.$$coerce($$$$touchPointID, int);

				throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "stopTouchDrag"'));
			}

			return $$this.$$Sprite.$$stopTouchDrag || ($$this.$$Sprite.$$stopTouchDrag = stopTouchDrag);
		}});

		Object.defineProperty(Sprite.prototype, 'graphics', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(($$this.$$Sprite.$_properties.SpriteScope.$_graphics) ? $$this.$$Sprite.$_properties.SpriteScope.$_graphics : $$this.$$Sprite.$_properties.SpriteScope.$_graphics = $es4.$$primitive(new Graphics($$this)), Graphics);
		}});
		Object.defineProperty(Sprite.prototype, 'buttonMode', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Sprite.$_properties.SpriteScope.$_buttonMode, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$Sprite.$_properties.SpriteScope.$_buttonMode = value;
			if ($$this.$$Sprite.$_properties.SpriteScope.$_buttonMode && $$this.$$Sprite.$_properties.SpriteScope.$_useHandCursor)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.style.cursor = 'pointer';
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.style.cursor = 'auto';
			}
			var enabled = $es4.$$coerce($$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabEnabled, Boolean);
			if (enabled || $$this.$$Sprite.$_properties.SpriteScope.$_buttonMode)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', $$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabIndex);
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', -1);
			}
			if ($$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.getAttribute('role') != 'presentation')
			{
				$$this.$$Sprite.$_properties.InteractiveObjectScope.$_role = $$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.getAttribute('role');
			}
			if ((!enabled && !$$this.$$Sprite.$_properties.SpriteScope.$_buttonMode) || $$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabIndex == -1)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('role', 'presentation');
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('role', $$this.$$Sprite.$_properties.InteractiveObjectScope.$_role);
			}
		}});
		Object.defineProperty(Sprite.prototype, 'tabEnabled', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, DisplayObjectContainer, '$$Sprite', 'tabEnabled', 'get');
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			$$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabEnabled = enabled;
			if (enabled || $$this.$$Sprite.$_properties.SpriteScope.$_buttonMode)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', $$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabIndex);
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('tabindex', -1);
			}
			if ($$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.getAttribute('role') != 'presentation')
			{
				$$this.$$Sprite.$_properties.InteractiveObjectScope.$_role = $$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.getAttribute('role');
			}
			if ((!enabled && !$$this.$$Sprite.$_properties.SpriteScope.$_buttonMode) || $$this.$$Sprite.$_properties.InteractiveObjectScope.$_tabIndex == -1)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('role', 'presentation');
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.setAttribute('role', $$this.$$Sprite.$_properties.InteractiveObjectScope.$_role);
			}
		}});
		Object.defineProperty(Sprite.prototype, 'mouseEnabled', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, DisplayObjectContainer, '$$Sprite', 'mouseEnabled', 'get');
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			if ($$this.$$Sprite.$_properties.DisplayObjectScope.$_domGraphicsView)
			{
				var childNodes = $$this.$$Sprite.$_properties.DisplayObjectScope.$_domGraphicsView.childNodes;
				for (var i = $es4.$$coerce(childNodes.length, int); i--;)
				{
					childNodes[i].style.pointerEvents = (enabled) ? 'visible' : 'none';
				}
			}
			$es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', 'mouseEnabled', 'set', enabled);
		}});
		Object.defineProperty(Sprite.prototype, 'dropTarget', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "dropTarget"'));
		}});
		Object.defineProperty(Sprite.prototype, 'hitArea', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "hitArea"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, $es4.$$['flash.display'].Sprite);

			var $$this = this;
			throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "hitArea"'));
		}});
		Object.defineProperty(Sprite.prototype, 'soundTransform', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "soundTransform"'));
		}, set:function ($$$$sndTransform)
		{
			//set default parameter values
			var sndTransform = $es4.$$coerce($$$$sndTransform, SoundTransform);

			var $$this = this;
			throw $es4.$$primitive(new Error('Sprite: attempted call to an unimplemented function "soundTransform"'));
		}});
		Object.defineProperty(Sprite.prototype, 'useHandCursor', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Sprite.$_properties.SpriteScope.$_useHandCursor, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$Sprite.$_properties.SpriteScope.$_useHandCursor = value;
			if ($$this.$$Sprite.$_properties.SpriteScope.$_buttonMode && $$this.$$Sprite.$_properties.SpriteScope.$_useHandCursor)
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.style.cursor = 'pointer';
			}
			else
			{
				$$this.$$Sprite.$_properties.DisplayObjectScope.$_domView.style.cursor = 'auto';
			}
		}});

		//properties
		Sprite.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Sprite.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Sprite.$$p.$_properties = value }
		};

	});

	//class initializer
	Sprite.$$cinit = (function ()
	{
		Sprite.$$cinit = undefined;

		//initialize properties
		$$j.$_dragging = $es4.$$coerce(undefined, $es4.$$['flash.display'].Sprite);
		$$j.$_lockCenter = $es4.$$coerce(undefined, Boolean);
		$$j.$_bounds = $es4.$$coerce(undefined, Rectangle);
		$$j.$_dragPoint = $es4.$$coerce(undefined, Point);
	
	});

	//private static method
	Sprite.$_onMouseMove = (function ($$$$mouseEvent)
	{
		if (Sprite.$$cinit !== undefined) Sprite.$$cinit();

		//set default parameter values
		var mouseEvent = $$$$mouseEvent;

		var sprite = Sprite.$_dragging;
		var x = NaN;
		var y = NaN;
		if (Sprite.$_lockCenter)
		{
			x = $es4.$$coerce(sprite.$__properties().TLScope.parent.$__properties().TLScope.mouseX, Number);
			y = $es4.$$coerce(sprite.$__properties().TLScope.parent.$__properties().TLScope.mouseY, Number);
		}
		else
		{
			x = $es4.$$coerce(sprite.$__properties().TLScope.parent.$__properties().TLScope.mouseX - Sprite.$_dragPoint.x, Number);
			y = $es4.$$coerce(sprite.$__properties().TLScope.parent.$__properties().TLScope.mouseY - Sprite.$_dragPoint.y, Number);
		}
		if (Sprite.$_bounds)
		{
			var bounds = Sprite.$_bounds;
			x = Math.max(Math.min(x, bounds.width + bounds.x), bounds.x);
			y = Math.max(Math.min(y, bounds.height + bounds.y), bounds.y);
		}
		sprite.$__properties().TLScope.x = x;
		sprite.$__properties().TLScope.y = y;
	});
	function Sprite()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Sprite) || $$this.$$Sprite !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Sprite) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Sprite.$$construct($$this, $$args);
		}
	}

	//construct
	Sprite.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Sprite.$$cinit !== undefined) Sprite.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Sprite', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Sprite, '$_properties', Sprite.prototype.$$v.$_properties);

		//call construct on super
		DisplayObjectContainer.$$construct($$this);

		//initialize properties
		Sprite.$$iinit($$this);

		//call constructor
		if (args !== undefined) Sprite.$$constructor.apply($$this, args);
	});

	//initializer
	Sprite.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Sprite.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObjectContainer.$$iinit($$this);
	});

	//constructor
	Sprite.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$Sprite.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObjectContainer.$$constructor.call($$this);
	});

	return $es4.$$class(Sprite, {EXTENDS:'flash.display.DisplayObjectContainer'}, 'flash.display::Sprite');
})();
//flash.display.Sprite


//flash.display.Stage
$es4.$$package('flash.display').Stage = (function ()
{
	//imports
	var Event;
	var MouseEvent;
	var Point;
	var Rectangle;
	var ApplicationDomain;
	var LoaderContext;
	var Player;
	var DisplayObjectContainer;
	var InteractiveObject;
	var Loader;
	var Sprite;
	var Stage;

	//properties
	var $$j = {};
	Object.defineProperty(Stage, '$_enterFrameListeners', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$_enterFrameListeners; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$_enterFrameListeners = $es4.$$coerce(value, Array); }
	});

	Object.defineProperty(Stage, '$__domDocument', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__domDocument; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__domDocument = $es4.$$coerce(value, Object); }
	});

	Object.defineProperty(Stage, '$__stageReference', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__stageReference; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__stageReference = $es4.$$coerce(value, Stage); }
	});

	Object.defineProperty(Stage, '$__stageLeft', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__stageLeft; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__stageLeft = $es4.$$coerce(value, Number); }
	});

	Object.defineProperty(Stage, '$__stageTop', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__stageTop; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__stageTop = $es4.$$coerce(value, Number); }
	});

	Object.defineProperty(Stage, '$__pageX', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__pageX; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__pageX = $es4.$$coerce(value, Number); }
	});

	Object.defineProperty(Stage, '$__pageY', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__pageY; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__pageY = $es4.$$coerce(value, Number); }
	});

	Object.defineProperty(Stage, '$__lastKeyPressedObject', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__lastKeyPressedObject; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__lastKeyPressedObject = $es4.$$coerce(value, Object); }
	});

	Object.defineProperty(Stage, '$__lastMouseMoveEvent', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$__lastMouseMoveEvent; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$__lastMouseMoveEvent = value }
	});

	Object.defineProperty(Stage, '$_last', {
	get:function () { if (Stage.$$cinit !== undefined) Stage.$$cinit(); return $$j.$_last; },
	set:function (value) { if (Stage.$$cinit !== undefined) Stage.$$cinit(); $$j.$_last = value }
	});


	//class pre initializer
	Stage.$$sinit = (function ()
	{
		Stage.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		MouseEvent = $es4.$$['flash.events'].MouseEvent;
		Point = $es4.$$['flash.geom'].Point;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		ApplicationDomain = $es4.$$['flash.system'].ApplicationDomain;
		LoaderContext = $es4.$$['flash.system'].LoaderContext;
		Player = $es4.$$['player'].Player;
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Loader = $es4.$$['flash.display'].Loader;
		Sprite = $es4.$$['flash.display'].Sprite;

		//ensure $$sinit is called on super class
		if (DisplayObjectContainer.$$sinit !== undefined) DisplayObjectContainer.$$sinit();

		//set prototype and constructor
		Stage.prototype = Object.create(DisplayObjectContainer.prototype);
		Object.defineProperty(Stage.prototype, "constructor", { value: Stage, enumerable: false });

		//hold private values
		Object.defineProperty(Stage.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Stage.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Stage.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', '$__properties', 'func', undefined)(object);
					object.StageScope = {$_color:0xffffff, $_align:'', $_scaleMode:'', $_stageFocusRect:true};
					object.TLScope = $$this;
					return $$this.$$Stage.$_properties = object;
				}
				return $$this.$$Stage.$_properties;
			}

			return $$this.$$Stage.$$$__properties || ($$this.$$Stage.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(Stage.prototype, '$__onResize', {
		get:function ()
		{
			var $$this = this;

			function $__onResize()
			{
				var boundingClientRect = $$this.$$Stage.$_properties.DisplayObjectScope.$_domView.getBoundingClientRect();
				Stage.$__stageTop = boundingClientRect.top;
				Stage.$__stageLeft = boundingClientRect.left;
				$$this.$$Stage.$_properties.TLScope.dispatchEvent($es4.$$primitive(new Event(Event.RESIZE)));
			}

			return $$this.$$Stage.$$$__onResize || ($$this.$$Stage.$$$__onResize = $__onResize);
		}});


		//public instance method
		Object.defineProperty(Stage.prototype, '$__internalAddChild', {
		get:function ()
		{
			var $$this = this;

			function $__internalAddChild($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, Sprite);

				var loader = $es4.$$coerce($es4.$$primitive(new Loader()), Loader);
				var properties = loader.$__properties().LoaderScope;
				properties.$_loaderContext = $es4.$$primitive(new LoaderContext(false, ApplicationDomain.currentDomain));
				child.$__properties().DisplayObjectScope.$_loaderInfo = properties.$_contentLoaderInfo;
				child.$__properties().DisplayObjectScope.$_isRoot = true;
				$$this.addChild(child);
			}

			return $$this.$$Stage.$$$__internalAddChild || ($$this.$$Stage.$$$__internalAddChild = $__internalAddChild);
		}});


		//public instance method
		Object.defineProperty(Stage.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

				var event;
				if (name === 'enterFrame')
				{
					if (Stage.$__lastMouseMoveEvent)
					{
						if (Stage.$_last < 1)
						{
							Stage.$_last = 1;
							return;
						}
						Stage.$_last = 0;
						var mobile = $es4.$$coerce(window.mobile, Boolean);
						event = Stage.$__lastMouseMoveEvent;
						Stage.$__lastMouseMoveEvent = null;
						if (!$$this.hasEventListener(MouseEvent.MOUSE_MOVE))
						{
							return;
						}
						var clientX = $es4.$$coerce((mobile && event.clientX === undefined) ? InteractiveObject.getTouch(event).pageX : event.clientX, Number);
						var clientY = $es4.$$coerce((mobile && event.clientY === undefined) ? InteractiveObject.getTouch(event).pageY : event.clientY, Number);
						var localPoint = $$this.globalToLocal($es4.$$primitive(new Point(clientX, clientY)));
						var mouseMoveEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_MOVE, false, false, localPoint.x, localPoint.y));
						mouseMoveEvent.$__properties().EventScope.$_target = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
						$$this.dispatchEvent(mouseMoveEvent);
					}
					for (var i = Stage.$_enterFrameListeners.length; i--;)
					{
						event = $es4.$$primitive(new Event(Event.ENTER_FRAME));
						Stage.$_enterFrameListeners[i].func(event.$__properties().EventScope.$_withTarget(event, Stage.$_enterFrameListeners[i].listener));
					}
				}
				$es4.$$super2($$this, DisplayObjectContainer, '$$DisplayObjectContainer', '$__notify', 'func', undefined)(name, args);
			}

			return $$this.$$Stage.$$$__notify || ($$this.$$Stage.$$$__notify = $__notify);
		}});


		//public instance method
		Object.defineProperty(Stage.prototype, 'invalidate', {
		get:function ()
		{
			var $$this = this;

			function invalidate()
			{
				document.body.removeChild(document.body.appendChild(document.createElement('style')));
			}

			return $$this.$$Stage.$$invalidate || ($$this.$$Stage.$$invalidate = invalidate);
		}});


		//public instance method
		Object.defineProperty(Stage.prototype, 'isFocusInaccessible', {
		get:function ()
		{
			var $$this = this;

			function isFocusInaccessible()
			{
				throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "isFocusInaccessible"'));
			}

			return $$this.$$Stage.$$isFocusInaccessible || ($$this.$$Stage.$$isFocusInaccessible = isFocusInaccessible);
		}});

		Object.defineProperty(Stage.prototype, 'color', {get:function ()
		{
			var $$this = this;
			return parseInt(Stage.$__domDocument.style.background.split('#').pop(), 16);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			Stage.$__domDocument.style.background = value.toString(16);
		}});
		Object.defineProperty(Stage.prototype, 'frameRate', {get:function ()
		{
			var $$this = this;
			return Player.getFrameRate();
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			Player.setFrameRate(value);
		}});
		Object.defineProperty(Stage.prototype, 'align', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Stage.$_properties.StageScope.$_align, String);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$Stage.$_properties.StageScope.$_align = value;
		}});
		Object.defineProperty(Stage.prototype, 'colorCorrection', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "colorCorrection"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "colorCorrection"'));
		}});
		Object.defineProperty(Stage.prototype, 'colorCorrectionSupport', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "colorCorrectionSupport"'));
		}});
		Object.defineProperty(Stage.prototype, 'displayState', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "displayState"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "displayState"'));
		}});
		Object.defineProperty(Stage.prototype, 'focus', {get:function ()
		{
			var $$this = this;
			var element = document.activeElement;
			if (!element || element.displayObject === undefined)
			{
				return null;
			}
			return $es4.$$coerce(element.displayObject, InteractiveObject);
		}, set:function ($$$$newFocus)
		{
			//set default parameter values
			var newFocus = $es4.$$coerce($$$$newFocus, InteractiveObject);

			var $$this = this;
			Stage.$__lastKeyPressedObject = null;
			if (newFocus == null)
			{
				if (document.activeElement)
				{
					if (document.activeElement.blur !== undefined)
					{
						document.activeElement.blur();
					}
				}
				else
				{
					window.focus();
				}
				return;
			}
			newFocus.$__properties().DisplayObjectScope.$_domView.focus();
		}});
		Object.defineProperty(Stage.prototype, 'fullScreenHeight', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(window.screen.height, uint);
		}});
		Object.defineProperty(Stage.prototype, 'fullScreenSourceRect', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "fullScreenSourceRect"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Rectangle);

			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "fullScreenSourceRect"'));
		}});
		Object.defineProperty(Stage.prototype, 'fullScreenWidth', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(window.screen.width, uint);
		}});
		Object.defineProperty(Stage.prototype, 'quality', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "quality"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "quality"'));
		}});
		Object.defineProperty(Stage.prototype, 'scaleMode', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Stage.$_properties.StageScope.$_scaleMode, String);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$Stage.$_properties.StageScope.$_scaleMode = value;
		}});
		Object.defineProperty(Stage.prototype, 'showDefaultContextMenu', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "showDefaultContextMenu"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "showDefaultContextMenu"'));
		}});
		Object.defineProperty(Stage.prototype, 'stageFocusRect', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Stage.$_properties.StageScope.$_stageFocusRect, Boolean);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			if (value == $$this.$$Stage.$_properties.StageScope.$_stageFocusRect)
			{
				return;
			}
			$$this.$$Stage.$_properties.StageScope.$_stageFocusRect = value;
			if (!value)
			{
				var css = '*:focus { outline: none; }';
				var style = document.createElement('style');
				style.type = 'text/css';
				if (style.styleSheet)
				{
					style.styleSheet.cssText = css;
				}
				else
				{
					style.appendChild(document.createTextNode(css));
				}
				document.getElementsByTagName('head')[0].appendChild(style);
				$$this.$$Stage.$_stageFocusRectStyle = style;
			}
			else
			{
				$$this.$$Stage.$_stageFocusRectStyle.parentNode.removeChild($$this.$$Stage.$_stageFocusRectStyle);
				$$this.$$Stage.$_stageFocusRectStyle = null;
			}
		}});
		Object.defineProperty(Stage.prototype, 'stageHeight', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(Stage.$__domDocument.offsetHeight, int);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			Stage.$__domDocument.style.height = value + 'px';
		}});
		Object.defineProperty(Stage.prototype, 'stageWidth', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(Stage.$__domDocument.offsetWidth, int);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			Stage.$__domDocument.style.width = value + 'px';
		}});
		Object.defineProperty(Stage.prototype, 'wmodeGPU', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Stage: attempted call to an unimplemented function "wmodeGPU"'));
		}});

		//properties
		Stage.prototype.$$v.$_stageFocusRectStyle = {
		get:function () { var $$this = this.$$this; return $$this.$$Stage.$$p.$_stageFocusRectStyle; },
		set:function (value) { var $$this = this.$$this; $$this.$$Stage.$$p.$_stageFocusRectStyle = $es4.$$coerce(value, Object); }
		};

		Stage.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Stage.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Stage.$$p.$_properties = value }
		};

	});

	//class initializer
	Stage.$$cinit = (function ()
	{
		Stage.$$cinit = undefined;

		//initialize properties
		$$j.$_enterFrameListeners = $es4.$$coerce([], Array);
		$$j.$__domDocument = $es4.$$coerce(undefined, Object);
		$$j.$__stageReference = $es4.$$coerce(undefined, $es4.$$['flash.display'].Stage);
		$$j.$__stageLeft = $es4.$$coerce(undefined, Number);
		$$j.$__stageTop = $es4.$$coerce(undefined, Number);
		$$j.$__pageX = $es4.$$coerce(undefined, Number);
		$$j.$__pageY = $es4.$$coerce(undefined, Number);
		$$j.$__lastKeyPressedObject = $es4.$$coerce(undefined, Object);
		$$j.$__lastMouseMoveEvent = undefined;
		$$j.$_last = 0;
	
	});

	//public static method
	Stage.$__init = (function ($$$$domDocument)
	{
		if (Stage.$$cinit !== undefined) Stage.$$cinit();

		//set default parameter values
		var domDocument = $$$$domDocument;

		Stage.$__domDocument = domDocument;
		var stage = $es4.$$coerce($es4.$$primitive(new Stage()), $es4.$$['flash.display'].Stage);
		var loader = $es4.$$coerce($es4.$$primitive(new Loader()), Loader);
		var properties = loader.$__properties().LoaderScope;
		properties.$_loaderContext = $es4.$$primitive(new LoaderContext(false, null));
		stage.$__properties().DisplayObjectScope.$_loaderInfo = properties.$_contentLoaderInfo;
		return stage;
	});

	//public static method
	Stage.$__addEnterFrameListener = (function ($$$$listener, $$$$func)
	{
		if (Stage.$$cinit !== undefined) Stage.$$cinit();

		//set default parameter values
		var listener = $es4.$$coerce($$$$listener, Object);
		var func = $es4.$$coerce($$$$func, Function);

		Stage.$_enterFrameListeners.push({listener:listener, func:func});
	});

	//public static method
	Stage.$__removeEnterFrameListener = (function ($$$$listener, $$$$func)
	{
		if (Stage.$$cinit !== undefined) Stage.$$cinit();

		//set default parameter values
		var listener = $es4.$$coerce($$$$listener, Object);
		var func = $es4.$$coerce($$$$func, Function);

		for (var i = Stage.$_enterFrameListeners.length; i--;)
		{
			if (Stage.$_enterFrameListeners[i].listener != listener || Stage.$_enterFrameListeners[i].func != func)
			{
				continue;
			}
			Stage.$_enterFrameListeners.splice(i, 1);
		}
	});
	function Stage()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Stage) || $$this.$$Stage !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Stage) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Stage.$$construct($$this, $$args);
		}
	}

	//construct
	Stage.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Stage.$$cinit !== undefined) Stage.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Stage', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Stage, '$_stageFocusRectStyle', Stage.prototype.$$v.$_stageFocusRectStyle);
		Object.defineProperty($$this.$$Stage, '$_properties', Stage.prototype.$$v.$_properties);

		//call construct on super
		DisplayObjectContainer.$$construct($$this);

		//initialize properties
		Stage.$$iinit($$this);

		//call constructor
		if (args !== undefined) Stage.$$constructor.apply($$this, args);
	});

	//initializer
	Stage.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Stage.$$p.$_stageFocusRectStyle = $es4.$$coerce(undefined, Object);
		$$this.$$Stage.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObjectContainer.$$iinit($$this);
	});

	//constructor
	Stage.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$Stage.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObjectContainer.$$constructor.call($$this);
		Stage.$__domDocument.appendChild($$this.$$Stage.$_properties.DisplayObjectScope.$_domView);
		$$this.$__onResize();
		Stage.$__stageReference = $$this;
		var mobile = $es4.$$coerce(window.mobile, Boolean);
		if (mobile)
		{
			document.body.addEventListener('touchstart', function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	var target = event.target;
	if (target.nodeName != 'A' && target.nodeName != 'TEXTAREA' && !(target.contentEditable === 'true'))
	{
		event.preventDefault();
	}
	Stage.$__pageX = event.touches[0].pageX;
	Stage.$__pageY = event.touches[0].pageY;
}
, true);
			document.body.addEventListener('touchmove', function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	var target = event.target;
	if (target.nodeName != 'A' && target.nodeName != 'TEXTAREA' && !(target.contentEditable === 'true'))
	{
		event.preventDefault();
	}
	Stage.$__pageX = event.touches[0].pageX;
	Stage.$__pageY = event.touches[0].pageY;
}
, true);
		}
		else
		{
			document.body.addEventListener('mousemove', function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	Stage.$__pageX = event.pageX;
	Stage.$__pageY = event.pageY;
}
, true);
			document.body.addEventListener('mousedown', function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	Stage.$__lastKeyPressedObject = null;
}
, true);
			document.body.addEventListener('keydown', function ($$$$event) 
{
			//set default parameter values
			var event = $$$$event;

	Stage.$__lastKeyPressedObject = {which:event.which, keyCode:event.keyCode, shiftKey:event.shiftKey};
}
, true);
		}
		var doMouseMove = false;
		var requestAnimationFrame = $es4.$$coerce(window.requestAnimationFrame, Function);
		var view = Stage.$__domDocument;
		var onMouseMove = $es4.$$coerce(function ($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			Stage.$__lastMouseMoveEvent = event;
			event.stopPropagation();
		}
, Function);
		var onMouseWheel = $es4.$$coerce(function ($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			if (!$$this.hasEventListener(MouseEvent.MOUSE_WHEEL))
			{
				event.stopPropagation();
				return;
			}
			var mouseMoveEvent = $es4.$$primitive(new MouseEvent(MouseEvent.MOUSE_WHEEL, false, false, null, null, null, false, false, false, false, -event.deltaY));
			mouseMoveEvent.$__properties().EventScope.$_target = InteractiveObject.$_getOriginalInteractiveObjectTarget(event.target);
			$$this.dispatchEvent(mouseMoveEvent);
			event.stopPropagation();
		}
, Function);
		if (mobile)
		{
			view.addEventListener('touchmove', onMouseMove, false);
			$$this.$$Stage.$_properties.InteractiveObjectScope.$_onMouseMove = onMouseMove;
		}
		else
		{
			view.addEventListener('mousemove', onMouseMove, true);
		}
		view.addEventListener('wheel', onMouseWheel, false);
		$$this.$$Stage.$_properties.DisplayObjectScope.$_isRoot = true;
	});

	return $es4.$$class(Stage, {EXTENDS:'flash.display.DisplayObjectContainer'}, 'flash.display::Stage');
})();
//flash.display.Stage


//flash.display.Stage3D
$$package('flash.display').Stage3D = function () { throw new Error('Use of unimplemented class: Stage3D'); }
//flash.display.Stage3D


//flash.display.StageAlign
$es4.$$package('flash.display').StageAlign = (function ()
{
	//properties
	var $$j = {};
	StageAlign.BOTTOM = "B";
	StageAlign.BOTTOM_LEFT = "BL";
	StageAlign.BOTTOM_RIGHT = "BR";
	StageAlign.LEFT = "L";
	StageAlign.RIGHT = "R";
	StageAlign.TOP = "T";
	StageAlign.TOP_LEFT = "TL";
	StageAlign.TOP_RIGHT = "TR";

	//class pre initializer
	StageAlign.$$sinit = (function ()
	{
		StageAlign.$$sinit = undefined;

		//set prototype and constructor
		StageAlign.prototype = Object.create(Object.prototype);
		Object.defineProperty(StageAlign.prototype, "constructor", { value: StageAlign, enumerable: false });

		//hold private values
		Object.defineProperty(StageAlign.prototype, '$$v', {value:{}});
	});

	//class initializer
	StageAlign.$$cinit = (function ()
	{
		StageAlign.$$cinit = undefined;
	});

	function StageAlign()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StageAlign) || $$this.$$StageAlign !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StageAlign) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StageAlign.$$construct($$this, $$args);
		}
	}

	//construct
	StageAlign.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StageAlign.$$cinit !== undefined) StageAlign.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StageAlign', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		StageAlign.$$iinit($$this);

		//call constructor
		if (args !== undefined) StageAlign.$$constructor.apply($$this, args);
	});

	//initializer
	StageAlign.$$iinit = (function ($$this)
	{
	});

	//constructor
	StageAlign.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(StageAlign, null, 'flash.display::StageAlign');
})();
//flash.display.StageAlign


//flash.display.StageDisplayState
$es4.$$package('flash.display').StageDisplayState = (function ()
{
	//properties
	var $$j = {};
	StageDisplayState.FULL_SCREEN = "fullScreen";
	StageDisplayState.FULL_SCREEN_INTERACTIVE = "fullScreenInteractive";
	StageDisplayState.NORMAL = "normal";

	//class pre initializer
	StageDisplayState.$$sinit = (function ()
	{
		StageDisplayState.$$sinit = undefined;

		//set prototype and constructor
		StageDisplayState.prototype = Object.create(Object.prototype);
		Object.defineProperty(StageDisplayState.prototype, "constructor", { value: StageDisplayState, enumerable: false });

		//hold private values
		Object.defineProperty(StageDisplayState.prototype, '$$v', {value:{}});
	});

	//class initializer
	StageDisplayState.$$cinit = (function ()
	{
		StageDisplayState.$$cinit = undefined;
	});

	function StageDisplayState()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StageDisplayState) || $$this.$$StageDisplayState !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StageDisplayState) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StageDisplayState.$$construct($$this, $$args);
		}
	}

	//construct
	StageDisplayState.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StageDisplayState.$$cinit !== undefined) StageDisplayState.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StageDisplayState', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		StageDisplayState.$$iinit($$this);

		//call constructor
		if (args !== undefined) StageDisplayState.$$constructor.apply($$this, args);
	});

	//initializer
	StageDisplayState.$$iinit = (function ($$this)
	{
	});

	//constructor
	StageDisplayState.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(StageDisplayState, null, 'flash.display::StageDisplayState');
})();
//flash.display.StageDisplayState


//flash.display.StageQuality
$es4.$$package('flash.display').StageQuality = (function ()
{
	//properties
	var $$j = {};
	StageQuality.BEST = "best";
	StageQuality.HIGH = "high";
	StageQuality.LOW = "low";
	StageQuality.MEDIUM = "medium";

	//class pre initializer
	StageQuality.$$sinit = (function ()
	{
		StageQuality.$$sinit = undefined;

		//set prototype and constructor
		StageQuality.prototype = Object.create(Object.prototype);
		Object.defineProperty(StageQuality.prototype, "constructor", { value: StageQuality, enumerable: false });

		//hold private values
		Object.defineProperty(StageQuality.prototype, '$$v', {value:{}});
	});

	//class initializer
	StageQuality.$$cinit = (function ()
	{
		StageQuality.$$cinit = undefined;
	});

	function StageQuality()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StageQuality) || $$this.$$StageQuality !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StageQuality) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StageQuality.$$construct($$this, $$args);
		}
	}

	//construct
	StageQuality.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StageQuality.$$cinit !== undefined) StageQuality.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StageQuality', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		StageQuality.$$iinit($$this);

		//call constructor
		if (args !== undefined) StageQuality.$$constructor.apply($$this, args);
	});

	//initializer
	StageQuality.$$iinit = (function ($$this)
	{
	});

	//constructor
	StageQuality.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(StageQuality, null, 'flash.display::StageQuality');
})();
//flash.display.StageQuality


//flash.display.StageScaleMode
$es4.$$package('flash.display').StageScaleMode = (function ()
{
	//properties
	var $$j = {};
	StageScaleMode.EXACT_FIT = "exactFit";
	StageScaleMode.NO_BORDER = "noBorder";
	StageScaleMode.NO_SCALE = "noScale";
	StageScaleMode.SHOW_ALL = "showAll";

	//class pre initializer
	StageScaleMode.$$sinit = (function ()
	{
		StageScaleMode.$$sinit = undefined;

		//set prototype and constructor
		StageScaleMode.prototype = Object.create(Object.prototype);
		Object.defineProperty(StageScaleMode.prototype, "constructor", { value: StageScaleMode, enumerable: false });

		//hold private values
		Object.defineProperty(StageScaleMode.prototype, '$$v', {value:{}});
	});

	//class initializer
	StageScaleMode.$$cinit = (function ()
	{
		StageScaleMode.$$cinit = undefined;
	});

	function StageScaleMode()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StageScaleMode) || $$this.$$StageScaleMode !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StageScaleMode) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StageScaleMode.$$construct($$this, $$args);
		}
	}

	//construct
	StageScaleMode.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StageScaleMode.$$cinit !== undefined) StageScaleMode.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StageScaleMode', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		StageScaleMode.$$iinit($$this);

		//call constructor
		if (args !== undefined) StageScaleMode.$$constructor.apply($$this, args);
	});

	//initializer
	StageScaleMode.$$iinit = (function ($$this)
	{
	});

	//constructor
	StageScaleMode.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(StageScaleMode, null, 'flash.display::StageScaleMode');
})();
//flash.display.StageScaleMode


//flash.display.SWFVersion
$$package('flash.display').SWFVersion = function () { throw new Error('Use of unimplemented class: SWFVersion'); }
//flash.display.SWFVersion


//flash.display.TriangleCulling
$$package('flash.display').TriangleCulling = function () { throw new Error('Use of unimplemented class: TriangleCulling'); }
//flash.display.TriangleCulling


//flash.display3D.Context3D
$$package('flash.display3D').Context3D = function () { throw new Error('Use of unimplemented class: Context3D'); }
//flash.display3D.Context3D


//flash.display3D.Context3DBlendFactor
$$package('flash.display3D').Context3DBlendFactor = function () { throw new Error('Use of unimplemented class: Context3DBlendFactor'); }
//flash.display3D.Context3DBlendFactor


//flash.display3D.Context3DBufferUsage
$$package('flash.display3D').Context3DBufferUsage = function () { throw new Error('Use of unimplemented class: Context3DBufferUsage'); }
//flash.display3D.Context3DBufferUsage


//flash.display3D.Context3DClearMask
$$package('flash.display3D').Context3DClearMask = function () { throw new Error('Use of unimplemented class: Context3DClearMask'); }
//flash.display3D.Context3DClearMask


//flash.display3D.Context3DCompareMode
$es4.$$package('flash.display3D').Context3DCompareMode = (function ()
{
	//class pre initializer
	Context3DCompareMode.$$sinit = (function ()
	{
		Context3DCompareMode.$$sinit = undefined;

		//set prototype and constructor
		Context3DCompareMode.prototype = Object.create(Object.prototype);
		Object.defineProperty(Context3DCompareMode.prototype, "constructor", { value: Context3DCompareMode, enumerable: false });

		//hold private values
		Object.defineProperty(Context3DCompareMode.prototype, '$$v', {value:{}});
	});

	//class initializer
	Context3DCompareMode.$$cinit = (function ()
	{
		Context3DCompareMode.$$cinit = undefined;
	});

	function Context3DCompareMode()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Context3DCompareMode) || $$this.$$Context3DCompareMode !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Context3DCompareMode) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Context3DCompareMode.$$construct($$this, $$args);
		}
	}

	//construct
	Context3DCompareMode.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Context3DCompareMode.$$cinit !== undefined) Context3DCompareMode.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Context3DCompareMode', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Context3DCompareMode.$$iinit($$this);

		//call constructor
		if (args !== undefined) Context3DCompareMode.$$constructor.apply($$this, args);
	});

	//initializer
	Context3DCompareMode.$$iinit = (function ($$this)
	{
	});

	//constructor
	Context3DCompareMode.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(Context3DCompareMode, null, 'flash.display3D::Context3DCompareMode');
})();
//flash.display3D.Context3DCompareMode


//flash.display3D.Context3DMipFilter
$$package('flash.display3D').Context3DMipFilter = function () { throw new Error('Use of unimplemented class: Context3DMipFilter'); }
//flash.display3D.Context3DMipFilter


//flash.display3D.Context3DProfile
$$package('flash.display3D').Context3DProfile = function () { throw new Error('Use of unimplemented class: Context3DProfile'); }
//flash.display3D.Context3DProfile


//flash.display3D.Context3DRenderMode
$$package('flash.display3D').Context3DRenderMode = function () { throw new Error('Use of unimplemented class: Context3DRenderMode'); }
//flash.display3D.Context3DRenderMode


//flash.display3D.Context3DStencilAction
$$package('flash.display3D').Context3DStencilAction = function () { throw new Error('Use of unimplemented class: Context3DStencilAction'); }
//flash.display3D.Context3DStencilAction


//flash.display3D.Context3DTextureFilter
$$package('flash.display3D').Context3DTextureFilter = function () { throw new Error('Use of unimplemented class: Context3DTextureFilter'); }
//flash.display3D.Context3DTextureFilter


//flash.display3D.Context3DTextureFormat
$$package('flash.display3D').Context3DTextureFormat = function () { throw new Error('Use of unimplemented class: Context3DTextureFormat'); }
//flash.display3D.Context3DTextureFormat


//flash.display3D.Context3DTriangleFace
$$package('flash.display3D').Context3DTriangleFace = function () { throw new Error('Use of unimplemented class: Context3DTriangleFace'); }
//flash.display3D.Context3DTriangleFace


//flash.display3D.Context3DVertexBufferFormat
$$package('flash.display3D').Context3DVertexBufferFormat = function () { throw new Error('Use of unimplemented class: Context3DVertexBufferFormat'); }
//flash.display3D.Context3DVertexBufferFormat


//flash.display3D.Context3DWrapMode
$$package('flash.display3D').Context3DWrapMode = function () { throw new Error('Use of unimplemented class: Context3DWrapMode'); }
//flash.display3D.Context3DWrapMode


//flash.display3D.IndexBuffer3D
$$package('flash.display3D').IndexBuffer3D = function () { throw new Error('Use of unimplemented class: IndexBuffer3D'); }
//flash.display3D.IndexBuffer3D


//flash.display3D.Program3D
$$package('flash.display3D').Program3D = function () { throw new Error('Use of unimplemented class: Program3D'); }
//flash.display3D.Program3D


//flash.display3D.VertexBuffer3D
$$package('flash.display3D').VertexBuffer3D = function () { throw new Error('Use of unimplemented class: VertexBuffer3D'); }
//flash.display3D.VertexBuffer3D


//flash.errors.EOFError
$$package('flash.errors').EOFError = function () { throw new Error('Use of unimplemented class: EOFError'); }
//flash.errors.EOFError


//flash.errors.IllegalOperationError
$$package('flash.errors').IllegalOperationError = function () { throw new Error('Use of unimplemented class: IllegalOperationError'); }
//flash.errors.IllegalOperationError


//flash.errors.InvalidSWFError
$$package('flash.errors').InvalidSWFError = function () { throw new Error('Use of unimplemented class: InvalidSWFError'); }
//flash.errors.InvalidSWFError


//flash.errors.IOError
$es4.$$package('flash.errors').IOError = (function ()
{
	//class pre initializer
	IOError.$$sinit = (function ()
	{
		IOError.$$sinit = undefined;

		//ensure $$sinit is called on super class
		if (Error.$$sinit !== undefined) Error.$$sinit();
		//set prototype and constructor
		IOError.prototype = Object.create(Error.prototype);
		Object.defineProperty(IOError.prototype, "constructor", { value: IOError, enumerable: false });

		//hold private values
		Object.defineProperty(IOError.prototype, '$$v', {value:{}});
	});

	//class initializer
	IOError.$$cinit = (function ()
	{
		IOError.$$cinit = undefined;
	});

	function IOError()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof IOError) || $$this.$$IOError !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], IOError) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			IOError.$$construct($$this, $$args);
		}
	}

	//construct
	IOError.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (IOError.$$cinit !== undefined) IOError.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$IOError', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		Error.$$construct($$this);

		//initialize properties
		IOError.$$iinit($$this);

		//call constructor
		if (args !== undefined) IOError.$$constructor.apply($$this, args);
	});

	//initializer
	IOError.$$iinit = (function ($$this)
	{
		//call iinit on super
		Error.$$iinit($$this);
	});

	//constructor
	IOError.$$constructor = (function ($$$$message, $$$$id)
	{
		var $$this = this;
		//set default parameter values
		var message = (0 > arguments.length - 1) ? "" : $es4.$$coerce($$$$message, String);
		var id = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$id, int);


		Error.$$constructor.call($$this);
	});

	return $es4.$$class(IOError, {EXTENDS:'Error'}, 'flash.errors::IOError');
})();
//flash.errors.IOError


//flash.errors.MemoryError
$$package('flash.errors').MemoryError = function () { throw new Error('Use of unimplemented class: MemoryError'); }
//flash.errors.MemoryError


//flash.errors.ScriptTimeoutError
$$package('flash.errors').ScriptTimeoutError = function () { throw new Error('Use of unimplemented class: ScriptTimeoutError'); }
//flash.errors.ScriptTimeoutError


//flash.errors.StackOverflowError
$$package('flash.errors').StackOverflowError = function () { throw new Error('Use of unimplemented class: StackOverflowError'); }
//flash.errors.StackOverflowError


//flash.events.AccelerometerEvent
$$package('flash.events').AccelerometerEvent = function () { throw new Error('Use of unimplemented class: AccelerometerEvent'); }
//flash.events.AccelerometerEvent


//flash.events.ActivityEvent
$$package('flash.events').ActivityEvent = function () { throw new Error('Use of unimplemented class: ActivityEvent'); }
//flash.events.ActivityEvent


//flash.events.AsyncErrorEvent
$es4.$$package('flash.events').AsyncErrorEvent = (function ()
{
	//imports
	var Event;
	var AsyncErrorEvent;
	var ErrorEvent;

	//properties
	var $$j = {};
	AsyncErrorEvent.ASYNC_ERROR = "asyncError";

	//class pre initializer
	AsyncErrorEvent.$$sinit = (function ()
	{
		AsyncErrorEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		ErrorEvent = $es4.$$['flash.events'].ErrorEvent;

		//ensure $$sinit is called on super class
		if (ErrorEvent.$$sinit !== undefined) ErrorEvent.$$sinit();

		//set prototype and constructor
		AsyncErrorEvent.prototype = Object.create(ErrorEvent.prototype);
		Object.defineProperty(AsyncErrorEvent.prototype, "constructor", { value: AsyncErrorEvent, enumerable: false });

		//hold private values
		Object.defineProperty(AsyncErrorEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(AsyncErrorEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new AsyncErrorEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.text, $$this.error)), Event);
			}

			return $$this.$$AsyncErrorEvent.$$clone || ($$this.$$AsyncErrorEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(AsyncErrorEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('AsyncErrorEvent', 'type', 'bubbles', 'cancelable', 'text', 'error');
			}

			return $$this.$$AsyncErrorEvent.$$toString || ($$this.$$AsyncErrorEvent.$$toString = toString);
		}});

		//properties
		Object.defineProperty(AsyncErrorEvent.prototype, 'error', {
		get:function () { var $$this = this; return $$this.$$AsyncErrorEvent.error; },
		set:function (value) { var $$this = this; $$this.$$AsyncErrorEvent.error = $es4.$$coerce(value, Error); }
		});

	});

	//class initializer
	AsyncErrorEvent.$$cinit = (function ()
	{
		AsyncErrorEvent.$$cinit = undefined;
	});

	function AsyncErrorEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof AsyncErrorEvent) || $$this.$$AsyncErrorEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], AsyncErrorEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			AsyncErrorEvent.$$construct($$this, $$args);
		}
	}

	//construct
	AsyncErrorEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (AsyncErrorEvent.$$cinit !== undefined) AsyncErrorEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$AsyncErrorEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		ErrorEvent.$$construct($$this);

		//initialize properties
		AsyncErrorEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) AsyncErrorEvent.$$constructor.apply($$this, args);
	});

	//initializer
	AsyncErrorEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$AsyncErrorEvent.error = $es4.$$coerce(undefined, Error);
	
		//call iinit on super
		ErrorEvent.$$iinit($$this);
	});

	//constructor
	AsyncErrorEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$text, $$$$error)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var text = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$text, String);
		var error = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$error, Error);

		ErrorEvent.$$constructor.call($$this, type, bubbles, cancelable, text, (error) ? error.errorID : 0);
		$$this.error = error;
	});

	return $es4.$$class(AsyncErrorEvent, {EXTENDS:'flash.events.ErrorEvent'}, 'flash.events::AsyncErrorEvent');
})();
//flash.events.AsyncErrorEvent


//flash.events.ContextMenuEvent
$$package('flash.events').ContextMenuEvent = function () { throw new Error('Use of unimplemented class: ContextMenuEvent'); }
//flash.events.ContextMenuEvent


//flash.events.DataEvent
$$package('flash.events').DataEvent = function () { throw new Error('Use of unimplemented class: DataEvent'); }
//flash.events.DataEvent


//flash.events.DRMAuthenticationCompleteEvent
$$package('flash.events').DRMAuthenticationCompleteEvent = function () { throw new Error('Use of unimplemented class: DRMAuthenticationCompleteEvent'); }
//flash.events.DRMAuthenticationCompleteEvent


//flash.events.DRMAuthenticationErrorEvent
$$package('flash.events').DRMAuthenticationErrorEvent = function () { throw new Error('Use of unimplemented class: DRMAuthenticationErrorEvent'); }
//flash.events.DRMAuthenticationErrorEvent


//flash.events.DRMErrorEvent
$$package('flash.events').DRMErrorEvent = function () { throw new Error('Use of unimplemented class: DRMErrorEvent'); }
//flash.events.DRMErrorEvent


//flash.events.DRMStatusEvent
$$package('flash.events').DRMStatusEvent = function () { throw new Error('Use of unimplemented class: DRMStatusEvent'); }
//flash.events.DRMStatusEvent


//flash.events.ErrorEvent
$es4.$$package('flash.events').ErrorEvent = (function ()
{
	//imports
	var ErrorEvent;
	var Event;
	var TextEvent;

	//properties
	var $$j = {};
	ErrorEvent.ERROR = 'error';

	//class pre initializer
	ErrorEvent.$$sinit = (function ()
	{
		ErrorEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		TextEvent = $es4.$$['flash.events'].TextEvent;

		//ensure $$sinit is called on super class
		if (TextEvent.$$sinit !== undefined) TextEvent.$$sinit();

		//set prototype and constructor
		ErrorEvent.prototype = Object.create(TextEvent.prototype);
		Object.defineProperty(ErrorEvent.prototype, "constructor", { value: ErrorEvent, enumerable: false });

		//hold private values
		Object.defineProperty(ErrorEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(ErrorEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new ErrorEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.text, $$this.errorID)), Event);
			}

			return $$this.$$ErrorEvent.$$clone || ($$this.$$ErrorEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(ErrorEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('ErrorEvent', 'bubbles', 'cancelable', 'text', 'errorID');
			}

			return $$this.$$ErrorEvent.$$toString || ($$this.$$ErrorEvent.$$toString = toString);
		}});

		Object.defineProperty(ErrorEvent.prototype, 'errorID', {get:function ()
		{
			var $$this = this;
			return $$this.$$ErrorEvent._errorID;
		}});

		//properties
		ErrorEvent.prototype.$$v._errorID = {
		get:function () { var $$this = this.$$this; return $$this.$$ErrorEvent.$$p._errorID; },
		set:function (value) { var $$this = this.$$this; $$this.$$ErrorEvent.$$p._errorID = $es4.$$coerce(value, int); }
		};

	});

	//class initializer
	ErrorEvent.$$cinit = (function ()
	{
		ErrorEvent.$$cinit = undefined;
	});

	function ErrorEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ErrorEvent) || $$this.$$ErrorEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ErrorEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ErrorEvent.$$construct($$this, $$args);
		}
	}

	//construct
	ErrorEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ErrorEvent.$$cinit !== undefined) ErrorEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ErrorEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$ErrorEvent, '_errorID', ErrorEvent.prototype.$$v._errorID);

		//call construct on super
		TextEvent.$$construct($$this);

		//initialize properties
		ErrorEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) ErrorEvent.$$constructor.apply($$this, args);
	});

	//initializer
	ErrorEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$ErrorEvent.$$p._errorID = $es4.$$coerce(0, int);
	
		//call iinit on super
		TextEvent.$$iinit($$this);
	});

	//constructor
	ErrorEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$text, $$$$id)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var text = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$text, String);
		var id = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$id, int);

		TextEvent.$$constructor.call($$this, type, bubbles, cancelable, text);
		$$this.$$ErrorEvent._errorID = id;
	});

	return $es4.$$class(ErrorEvent, {EXTENDS:'flash.events.TextEvent'}, 'flash.events::ErrorEvent');
})();
//flash.events.ErrorEvent


//flash.events.Event
$es4.$$package('flash.events').Event = (function ()
{
	//imports
	var Event;

	//properties
	var $$j = {};
	Event.ACTIVATE = "activate";
	Event.ADDED = "added";
	Event.ADDED_TO_STAGE = "addedToStage";
	Event.CANCEL = "cancel";
	Event.CHANGE = "change";
	Event.CLEAR = "clear";
	Event.CLOSE = "close";
	Event.COMPLETE = "complete";
	Event.CONNECT = "connect";
	Event.COPY = "copy";
	Event.CUT = "cut";
	Event.DEACTIVATE = "deactivate";
	Event.ENTER_FRAME = "enterFrame";
	Event.EXIT_FRAME = "exitFrame";
	Event.FRAME_CONSTRUCTED = "frameConstructed";
	Event.FULLSCREEN = "fullScreen";
	Event.ID3 = "id3";
	Event.INIT = "init";
	Event.MOUSE_LEAVE = "mouseLeave";
	Event.OPEN = "open";
	Event.PASTE = "paste";
	Event.REMOVED = "removed";
	Event.REMOVED_FROM_STAGE = "removedFromStage";
	Event.RENDER = "render";
	Event.RESIZE = "resize";
	Event.SCROLL = "scroll";
	Event.SELECT = "select";
	Event.SELECT_ALL = "selectAll";
	Event.SOUND_COMPLETE = "soundComplete";
	Event.TAB_CHILDREN_CHANGE = "tabChildrenChange";
	Event.TAB_ENABLED_CHANGE = "tabEnabledChange";
	Event.TAB_INDEX_CHANGE = "tabIndexChange";
	Event.TEXT_INTERACTION_MODE_CHANGE = "textInteractionModeChange";
	Event.UNLOAD = "unload";

	//class pre initializer
	Event.$$sinit = (function ()
	{
		Event.$$sinit = undefined;

		//initialize imports
		//set prototype and constructor
		Event.prototype = Object.create(Object.prototype);
		Object.defineProperty(Event.prototype, "constructor", { value: Event, enumerable: false });

		//hold private values
		Object.defineProperty(Event.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Event.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Event.$_properties === undefined)
				{
					object.EventScope = {$_target:null, $_currentTarget:null, $_eventPhase:null, $_withTarget:Event.$_withTarget, $_originalTarget:null};
					object.TLScope = $$this;
					return $$this.$$Event.$_properties = object;
				}
				return $$this.$$Event.$_properties;
			}

			return $$this.$$Event.$$$__properties || ($$this.$$Event.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new Event($$this.$$Event.$_properties.EventScope.$_type, $$this.$$Event.$_properties.EventScope.$_bubbles, $$this.$$Event.$_properties.EventScope.$_cancelable)), $es4.$$['flash.events'].Event);
			}

			return $$this.$$Event.$$clone || ($$this.$$Event.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'formatToString', {
		get:function ()
		{
			var $$this = this;

			function formatToString($$$$className, $$$$args)
			{
				//set default parameter values
				var className = $es4.$$coerce($$$$className, String);
				for (var $$i = 1, $$length = arguments.length, args = new Array($$length - 1); $$i < $$length; $$i += 1) args[$$i - 1] = arguments[$$i];

				var str = '[' + className;
				for (var i = 0; i < args.length; i++)
				{
					str += ' ' + args[i] + '="' + $$this[args[i]] + '"';
				}
				str += ']';
				return str;
			}

			return $$this.$$Event.$$formatToString || ($$this.$$Event.$$formatToString = formatToString);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'isDefaultPrevented', {
		get:function ()
		{
			var $$this = this;

			function isDefaultPrevented()
			{
				return $es4.$$coerce($$this.$$Event.$_properties.EventScope.$_defaultPrevented, Boolean);
			}

			return $$this.$$Event.$$isDefaultPrevented || ($$this.$$Event.$$isDefaultPrevented = isDefaultPrevented);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'preventDefault', {
		get:function ()
		{
			var $$this = this;

			function preventDefault()
			{
				if ($$this.$$Event.$_properties.EventScope.$_cancelable)
				{
					$$this.$$Event.$_properties.EventScope.$_defaultPrevented = true;
				}
			}

			return $$this.$$Event.$$preventDefault || ($$this.$$Event.$$preventDefault = preventDefault);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'stopImmediatePropagation', {
		get:function ()
		{
			var $$this = this;

			function stopImmediatePropagation()
			{
				$$this.$$Event.$_properties.EventScope.$_immediatePropagationStopped = true;
			}

			return $$this.$$Event.$$stopImmediatePropagation || ($$this.$$Event.$$stopImmediatePropagation = stopImmediatePropagation);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'stopPropagation', {
		get:function ()
		{
			var $$this = this;

			function stopPropagation()
			{
				$$this.$$Event.$_properties.EventScope.$_propagationStopped = true;
			}

			return $$this.$$Event.$$stopPropagation || ($$this.$$Event.$$stopPropagation = stopPropagation);
		}});


		//public instance method
		Object.defineProperty(Event.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('Event', 'type', 'bubbles', 'cancelable');
			}

			return $$this.$$Event.$$toString || ($$this.$$Event.$$toString = toString);
		}});

		Object.defineProperty(Event.prototype, 'bubbles', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Event.$_properties.EventScope.$_bubbles, Boolean);
		}});
		Object.defineProperty(Event.prototype, 'cancelable', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Event.$_properties.EventScope.$_cancelable, Boolean);
		}});
		Object.defineProperty(Event.prototype, 'currentTarget', {get:function ()
		{
			var $$this = this;
			return $$this.$$Event.$_properties.EventScope.$_currentTarget;
		}});
		Object.defineProperty(Event.prototype, 'eventPhase', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Event.$_properties.EventScope.$_eventPhase, uint);
		}});
		Object.defineProperty(Event.prototype, 'target', {get:function ()
		{
			var $$this = this;
			return $$this.$$Event.$_properties.EventScope.$_target;
		}});
		Object.defineProperty(Event.prototype, 'type', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Event.$_properties.EventScope.$_type, String);
		}});

		//properties
		Event.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Event.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Event.$$p.$_properties = value }
		};

	});

	//class initializer
	Event.$$cinit = (function ()
	{
		Event.$$cinit = undefined;
	});

	//private static method
	Event.$_withTarget = (function ($$$$event, $$$$target)
	{
		if (Event.$$cinit !== undefined) Event.$$cinit();

		//set default parameter values
		var event = $es4.$$coerce($$$$event, $es4.$$['flash.events'].Event);
		var target = $es4.$$coerce($$$$target, Object);

		var properties = event.$__properties();
		event = properties.EventScope.$_target ? event.clone() : event;
		event.$__properties().EventScope.$_target = target;
		return event;
	});
	function Event()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Event) || $$this.$$Event !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Event) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Event.$$construct($$this, $$args);
		}
	}

	//construct
	Event.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Event.$$cinit !== undefined) Event.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Event', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Event, '$_properties', Event.prototype.$$v.$_properties);

		//initialize properties
		Event.$$iinit($$this);

		//call constructor
		if (args !== undefined) Event.$$constructor.apply($$this, args);
	});

	//initializer
	Event.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Event.$$p.$_properties = undefined;
	
	});

	//constructor
	Event.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);

		if ($$this.$$Event.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		var properties = $$this.$$Event.$_properties.EventScope;
		properties.$_type = type;
		properties.$_bubbles = bubbles;
		properties.$_cancelable = cancelable;
	});

	return $es4.$$class(Event, null, 'flash.events::Event');
})();
//flash.events.Event


//flash.events.EventDispatcher
$es4.$$package('flash.events').EventDispatcher = (function ()
{
	//imports
	var DisplayObject;
	var Stage;
	var Event;
	var IEventDispatcher;
	var EventPhase;

	//class pre initializer
	EventDispatcher.$$sinit = (function ()
	{
		EventDispatcher.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		Stage = $es4.$$['flash.display'].Stage;
		Event = $es4.$$['flash.events'].Event;
		IEventDispatcher = $es4.$$['flash.events'].IEventDispatcher;
		EventPhase = $es4.$$['flash.events'].EventPhase;

		//set prototype and constructor
		EventDispatcher.prototype = Object.create(Object.prototype);
		Object.defineProperty(EventDispatcher.prototype, "constructor", { value: EventDispatcher, enumerable: false });

		//hold private values
		Object.defineProperty(EventDispatcher.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(EventDispatcher.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$EventDispatcher.$_properties === undefined)
				{
					object.EventDispatcherScope = {$_listeners:{}};
					object.TLScope = $$this;
					return $$this.$$EventDispatcher.$_properties = object;
				}
				return $$this.$$EventDispatcher.$_properties;
			}

			return $$this.$$EventDispatcher.$$$__properties || ($$this.$$EventDispatcher.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(EventDispatcher.prototype, 'addEventListener', {
		get:function ()
		{
			var $$this = this;

			function addEventListener($$$$type, $$$$listener, $$$$useCapture, $$$$priority, $$$$useWeakReference)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);
				var listener = $es4.$$coerce($$$$listener, Function);
				var useCapture = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$useCapture, Boolean);
				var priority = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$priority, int);
				var useWeakReference = (4 > arguments.length - 1) ? false : $es4.$$coerce($$$$useWeakReference, Boolean);

				if (useWeakReference)
				{
					trace('Warning: useWeakReference not supported in EventDispatacher addEventListener');
				}
				if (useCapture)
				{
					trace('Warning: useCapture not supported in EventDispatacher addEventListener');
				}
				if (type == Event.ENTER_FRAME)
				{
					Stage.$__addEnterFrameListener($$this, listener);
					return;
				}
				var listenersByType = $$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_listeners;
				var eventObj = {type:type, method:listener, useCapture:useCapture, priority:priority, useWeakReference:useWeakReference};
				if (!(type in listenersByType))
				{
					listenersByType[type] = [eventObj];
				}
				else
				{
					var listeners = $es4.$$coerce(listenersByType[type], Array);
					for (var i = $es4.$$coerce(listeners.length, int); i--;)
					{
						if (listener == listeners[i].method)
						{
							return;
						}
					}
					listenersByType[type].push(eventObj);
				}
				listenersByType[type].sort(eventCompare);

				function eventCompare($$$$item1, $$$$item2) 
				{
					//set default parameter values
					var item1 = $es4.$$coerce($$$$item1, Object);
					var item2 = $es4.$$coerce($$$$item2, Object);

					if (item1.priority > item2.priority)
					{
						return -1;
					}
					else if (item1.priority < item2.priority)
					{
						return 1;
					}
					else
					{
						return 0;
					}
				}
;
			}

			return $$this.$$EventDispatcher.$$addEventListener || ($$this.$$EventDispatcher.$$addEventListener = addEventListener);
		}});


		//public instance method
		Object.defineProperty(EventDispatcher.prototype, 'dispatchEvent', {
		get:function ()
		{
			var $$this = this;

			function dispatchEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				var properties = event.$__properties().TLScope;
				var listeners = $es4.$$coerce($$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_listeners[event.type], Array);
				var target = $$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_target;
				var bubble = $es4.$$coerce(properties.bubbles && $es4.$$is($$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_target, DisplayObject), Boolean);
				if (!bubble && !listeners)
				{
					return $es4.$$coerce(!properties.isDefaultPrevented(), Boolean);
				}
				var parents = null;
				if (bubble)
				{
					parents = [];
					var currentParent = $es4.$$coerce(target.parent, DisplayObject);
					while (currentParent)
					{
						parents.push(currentParent);
						currentParent = currentParent.parent;
					}
				}
				properties = event.$__properties().EventScope;
				if (listeners && !properties.$_propagationStopped && !properties.$_immediatePropagationStopped)
				{
					event = $es4.$$coerce(properties.$_withTarget(event, target), Event);
					properties = event.$__properties().EventScope;
					properties.$_eventPhase = EventPhase.AT_TARGET;
					properties.$_currentTarget = $$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_target;
					EventDispatcher.$_processListeners(event, listeners);
				}
				if (bubble && !properties.$_propagationStopped && !properties.$_immediatePropagationStopped)
				{
					var index = 0;
					var parentsLength = parents.length;
					while (parentsLength > index)
					{
						var currentTarget = parents[index];
						var currentBubbleListeners = $es4.$$coerce(currentTarget.$__properties().EventDispatcherScope.$_listeners[event.type], Array);
						if (currentBubbleListeners && currentBubbleListeners.length)
						{
							event = $es4.$$coerce(properties.$_withTarget(event, target), Event);
							properties = event.$__properties().EventScope;
							properties.$_eventPhase = EventPhase.BUBBLING_PHASE;
							event.$__properties().EventScope.$_currentTarget = currentTarget;
							EventDispatcher.$_processListeners(event, currentBubbleListeners);
							if (properties.$_propagationStopped || properties.$_immediatePropagationStopped)
							{
								break;
							}
						}
						index++;
					}
				}
				properties = event.$__properties().TLScope;
				return $es4.$$coerce(!properties.isDefaultPrevented(), Boolean);
			}

			return $$this.$$EventDispatcher.$$dispatchEvent || ($$this.$$EventDispatcher.$$dispatchEvent = dispatchEvent);
		}});


		//public instance method
		Object.defineProperty(EventDispatcher.prototype, 'hasEventListener', {
		get:function ()
		{
			var $$this = this;

			function hasEventListener($$$$type)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);

				return $es4.$$coerce($$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_listeners[type], Boolean);
			}

			return $$this.$$EventDispatcher.$$hasEventListener || ($$this.$$EventDispatcher.$$hasEventListener = hasEventListener);
		}});


		//public instance method
		Object.defineProperty(EventDispatcher.prototype, 'removeEventListener', {
		get:function ()
		{
			var $$this = this;

			function removeEventListener($$$$type, $$$$listener, $$$$useCapture)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);
				var listener = $es4.$$coerce($$$$listener, Function);
				var useCapture = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$useCapture, Boolean);

				if (useCapture)
				{
					trace('Warning: useCapture not supported in EventDispatacher removeEventListener');
				}
				if (type == Event.ENTER_FRAME)
				{
					Stage.$__removeEnterFrameListener($$this, listener);
					return;
				}
				var listenersByType = $$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_listeners;
				var listeners = $es4.$$coerce(listenersByType[type], Array);
				if (!listeners)
				{
					return;
				}
				for (var i = listeners.length; i--;)
				{
					if (listeners[i].method != listener)
					{
						continue;
					}
					if (listeners.length == 1)
					{
						delete listenersByType[type];
					}
					else
					{
						listeners.splice(i, 1);
					}
				}
			}

			return $$this.$$EventDispatcher.$$removeEventListener || ($$this.$$EventDispatcher.$$removeEventListener = removeEventListener);
		}});


		//public instance method
		Object.defineProperty(EventDispatcher.prototype, 'willTrigger', {
		get:function ()
		{
			var $$this = this;

			function willTrigger($$$$type)
			{
				//set default parameter values
				var type = $es4.$$coerce($$$$type, String);

				return $es4.$$coerce($$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_listeners[type], Boolean);
			}

			return $$this.$$EventDispatcher.$$willTrigger || ($$this.$$EventDispatcher.$$willTrigger = willTrigger);
		}});

		//properties
		EventDispatcher.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$EventDispatcher.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$EventDispatcher.$$p.$_properties = value }
		};

	});

	//class initializer
	EventDispatcher.$$cinit = (function ()
	{
		EventDispatcher.$$cinit = undefined;
	});

	//private static method
	EventDispatcher.$_processListeners = (function ($$$$event, $$$$listeners)
	{
		if (EventDispatcher.$$cinit !== undefined) EventDispatcher.$$cinit();

		//set default parameter values
		var event = $es4.$$coerce($$$$event, Event);
		var listeners = $es4.$$coerce($$$$listeners, Array);

		listeners = listeners.slice();
		var listenersLength = listeners.length;
		var properties = event.$__properties();
		for (var i = 0; i < listenersLength; i++)
		{
			if (listeners[i].method(event) === false)
			{
				properties.TLScope.stopPropagation();
				properties.TLScope.preventDefault();
			}
			if (properties.EventScope.$_immediatePropagationStopped)
			{
				break;
			}
		}
	});
	function EventDispatcher()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof EventDispatcher) || $$this.$$EventDispatcher !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], EventDispatcher) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			EventDispatcher.$$construct($$this, $$args);
		}
	}

	//construct
	EventDispatcher.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (EventDispatcher.$$cinit !== undefined) EventDispatcher.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$EventDispatcher', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$EventDispatcher, '$_properties', EventDispatcher.prototype.$$v.$_properties);

		//initialize properties
		EventDispatcher.$$iinit($$this);

		//call constructor
		if (args !== undefined) EventDispatcher.$$constructor.apply($$this, args);
	});

	//initializer
	EventDispatcher.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$EventDispatcher.$$p.$_properties = undefined;
	
	});

	//constructor
	EventDispatcher.$$constructor = (function ($$$$target)
	{
		var $$this = this;
		//set default parameter values
		var target = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$target, IEventDispatcher);

		if ($$this.$$EventDispatcher.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		$$this.$$EventDispatcher.$_properties.EventDispatcherScope.$_target = target || $$this;
	});

	return $es4.$$class(EventDispatcher, {IMPLEMENTS:['flash.events.IEventDispatcher']}, 'flash.events::EventDispatcher');
})();
//flash.events.EventDispatcher


//flash.events.EventPhase
$es4.$$package('flash.events').EventPhase = (function ()
{
	//properties
	var $$j = {};
	EventPhase.AT_TARGET = 2;
	EventPhase.BUBBLING_PHASE = 3;
	EventPhase.CAPTURING_PHASE = 1;

	//class pre initializer
	EventPhase.$$sinit = (function ()
	{
		EventPhase.$$sinit = undefined;

		//set prototype and constructor
		EventPhase.prototype = Object.create(Object.prototype);
		Object.defineProperty(EventPhase.prototype, "constructor", { value: EventPhase, enumerable: false });

		//hold private values
		Object.defineProperty(EventPhase.prototype, '$$v', {value:{}});
	});

	//class initializer
	EventPhase.$$cinit = (function ()
	{
		EventPhase.$$cinit = undefined;
	});

	function EventPhase()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof EventPhase) || $$this.$$EventPhase !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], EventPhase) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			EventPhase.$$construct($$this, $$args);
		}
	}

	//construct
	EventPhase.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (EventPhase.$$cinit !== undefined) EventPhase.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$EventPhase', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		EventPhase.$$iinit($$this);

		//call constructor
		if (args !== undefined) EventPhase.$$constructor.apply($$this, args);
	});

	//initializer
	EventPhase.$$iinit = (function ($$this)
	{
	});

	//constructor
	EventPhase.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(EventPhase, null, 'flash.events::EventPhase');
})();
//flash.events.EventPhase


//flash.events.FocusEvent
$es4.$$package('flash.events').FocusEvent = (function ()
{
	//imports
	var InteractiveObject;
	var Event;
	var FocusEvent;

	//properties
	var $$j = {};
	FocusEvent.FOCUS_IN = "focusIn";
	FocusEvent.FOCUS_OUT = "focusOut";
	FocusEvent.KEY_FOCUS_CHANGE = "keyFocusChange";
	FocusEvent.MOUSE_FOCUS_CHANGE = "mouseFocusChange";

	//class pre initializer
	FocusEvent.$$sinit = (function ()
	{
		FocusEvent.$$sinit = undefined;

		//initialize imports
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		FocusEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(FocusEvent.prototype, "constructor", { value: FocusEvent, enumerable: false });

		//hold private values
		Object.defineProperty(FocusEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(FocusEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new FocusEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.relatedObject, $$this.shiftKey, $$this.keyCode)), Event);
			}

			return $$this.$$FocusEvent.$$clone || ($$this.$$FocusEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(FocusEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('FocusEvent', 'type', 'bubbles', 'cancelable', 'relatedObject', 'shiftKey', 'keyCode');
			}

			return $$this.$$FocusEvent.$$toString || ($$this.$$FocusEvent.$$toString = toString);
		}});

		Object.defineProperty(FocusEvent.prototype, 'isRelatedObjectInaccessible', {get:function ()
		{
			var $$this = this;
			return $$this.$$FocusEvent._isRelatedObjectInaccessible;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$FocusEvent._isRelatedObjectInaccessible = value;
		}});
		Object.defineProperty(FocusEvent.prototype, 'keyCode', {get:function ()
		{
			var $$this = this;
			return $$this.$$FocusEvent._keyCode;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$FocusEvent._keyCode = value;
		}});
		Object.defineProperty(FocusEvent.prototype, 'relatedObject', {get:function ()
		{
			var $$this = this;
			return $$this.$$FocusEvent._relatedObject;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, InteractiveObject);

			var $$this = this;
			$$this.$$FocusEvent._relatedObject = value;
		}});
		Object.defineProperty(FocusEvent.prototype, 'shiftKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$FocusEvent._shiftKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$FocusEvent._shiftKey = value;
		}});

		//properties
		FocusEvent.prototype.$$v._isRelatedObjectInaccessible = {
		get:function () { var $$this = this.$$this; return $$this.$$FocusEvent.$$p._isRelatedObjectInaccessible; },
		set:function (value) { var $$this = this.$$this; $$this.$$FocusEvent.$$p._isRelatedObjectInaccessible = $es4.$$coerce(value, Boolean); }
		};

		FocusEvent.prototype.$$v._keyCode = {
		get:function () { var $$this = this.$$this; return $$this.$$FocusEvent.$$p._keyCode; },
		set:function (value) { var $$this = this.$$this; $$this.$$FocusEvent.$$p._keyCode = $es4.$$coerce(value, uint); }
		};

		FocusEvent.prototype.$$v._shiftKey = {
		get:function () { var $$this = this.$$this; return $$this.$$FocusEvent.$$p._shiftKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$FocusEvent.$$p._shiftKey = $es4.$$coerce(value, Boolean); }
		};

		FocusEvent.prototype.$$v._relatedObject = {
		get:function () { var $$this = this.$$this; return $$this.$$FocusEvent.$$p._relatedObject; },
		set:function (value) { var $$this = this.$$this; $$this.$$FocusEvent.$$p._relatedObject = $es4.$$coerce(value, InteractiveObject); }
		};

	});

	//class initializer
	FocusEvent.$$cinit = (function ()
	{
		FocusEvent.$$cinit = undefined;
	});

	function FocusEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof FocusEvent) || $$this.$$FocusEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], FocusEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			FocusEvent.$$construct($$this, $$args);
		}
	}

	//construct
	FocusEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (FocusEvent.$$cinit !== undefined) FocusEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$FocusEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$FocusEvent, '_isRelatedObjectInaccessible', FocusEvent.prototype.$$v._isRelatedObjectInaccessible);
		Object.defineProperty($$this.$$FocusEvent, '_keyCode', FocusEvent.prototype.$$v._keyCode);
		Object.defineProperty($$this.$$FocusEvent, '_shiftKey', FocusEvent.prototype.$$v._shiftKey);
		Object.defineProperty($$this.$$FocusEvent, '_relatedObject', FocusEvent.prototype.$$v._relatedObject);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		FocusEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) FocusEvent.$$constructor.apply($$this, args);
	});

	//initializer
	FocusEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$FocusEvent.$$p._isRelatedObjectInaccessible = $es4.$$coerce(undefined, Boolean);
		$$this.$$FocusEvent.$$p._keyCode = $es4.$$coerce(undefined, uint);
		$$this.$$FocusEvent.$$p._shiftKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$FocusEvent.$$p._relatedObject = $es4.$$coerce(undefined, InteractiveObject);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	FocusEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$relatedObject, $$$$shiftKey, $$$$keyCode)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? true : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var relatedObject = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$relatedObject, InteractiveObject);
		var shiftKey = (4 > arguments.length - 1) ? false : $es4.$$coerce($$$$shiftKey, Boolean);
		var keyCode = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$keyCode, uint);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$FocusEvent._relatedObject = relatedObject;
		$$this.$$FocusEvent._shiftKey = shiftKey;
		$$this.$$FocusEvent._keyCode = keyCode;
	});

	return $es4.$$class(FocusEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::FocusEvent');
})();
//flash.events.FocusEvent


//flash.events.FullScreenEvent
$$package('flash.events').FullScreenEvent = function () { throw new Error('Use of unimplemented class: FullScreenEvent'); }
//flash.events.FullScreenEvent


//flash.events.GeolocationEvent
$$package('flash.events').GeolocationEvent = function () { throw new Error('Use of unimplemented class: GeolocationEvent'); }
//flash.events.GeolocationEvent


//flash.events.GestureEvent
$$package('flash.events').GestureEvent = function () { throw new Error('Use of unimplemented class: GestureEvent'); }
//flash.events.GestureEvent


//flash.events.GesturePhase
$$package('flash.events').GesturePhase = function () { throw new Error('Use of unimplemented class: GesturePhase'); }
//flash.events.GesturePhase


//flash.events.HTTPStatusEvent
$es4.$$package('flash.events').HTTPStatusEvent = (function ()
{
	//imports
	var Event;
	var HTTPStatusEvent;

	//properties
	var $$j = {};
	HTTPStatusEvent.HTTP_RESPONSE_STATUS = "httpResponseStatus";
	HTTPStatusEvent.HTTP_STATUS = "httpStatus";

	//class pre initializer
	HTTPStatusEvent.$$sinit = (function ()
	{
		HTTPStatusEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		HTTPStatusEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(HTTPStatusEvent.prototype, "constructor", { value: HTTPStatusEvent, enumerable: false });

		//hold private values
		Object.defineProperty(HTTPStatusEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(HTTPStatusEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new HTTPStatusEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.$$HTTPStatusEvent._status)), Event);
			}

			return $$this.$$HTTPStatusEvent.$$clone || ($$this.$$HTTPStatusEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(HTTPStatusEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('HTTPStatusEvent', 'type', 'bubbles', 'cancelable', 'status');
			}

			return $$this.$$HTTPStatusEvent.$$toString || ($$this.$$HTTPStatusEvent.$$toString = toString);
		}});

		Object.defineProperty(HTTPStatusEvent.prototype, 'responseHeaders', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('HTTPStatusEvent: attempted call to an unimplemented function "responseHeaders"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Array);

			var $$this = this;
			throw $es4.$$primitive(new Error('HTTPStatusEvent: attempted call to an unimplemented function "responseHeaders"'));
		}});
		Object.defineProperty(HTTPStatusEvent.prototype, 'responseURL', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('HTTPStatusEvent: attempted call to an unimplemented function "responseURL"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('HTTPStatusEvent: attempted call to an unimplemented function "responseURL"'));
		}});
		Object.defineProperty(HTTPStatusEvent.prototype, 'status', {get:function ()
		{
			var $$this = this;
			return $$this.$$HTTPStatusEvent._status;
		}});

		//properties
		HTTPStatusEvent.prototype.$$v._status = {
		get:function () { var $$this = this.$$this; return $$this.$$HTTPStatusEvent.$$p._status; },
		set:function (value) { var $$this = this.$$this; $$this.$$HTTPStatusEvent.$$p._status = $es4.$$coerce(value, int); }
		};

	});

	//class initializer
	HTTPStatusEvent.$$cinit = (function ()
	{
		HTTPStatusEvent.$$cinit = undefined;
	});

	function HTTPStatusEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof HTTPStatusEvent) || $$this.$$HTTPStatusEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], HTTPStatusEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			HTTPStatusEvent.$$construct($$this, $$args);
		}
	}

	//construct
	HTTPStatusEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (HTTPStatusEvent.$$cinit !== undefined) HTTPStatusEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$HTTPStatusEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$HTTPStatusEvent, '_status', HTTPStatusEvent.prototype.$$v._status);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		HTTPStatusEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) HTTPStatusEvent.$$constructor.apply($$this, args);
	});

	//initializer
	HTTPStatusEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$HTTPStatusEvent.$$p._status = $es4.$$coerce(undefined, int);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	HTTPStatusEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$status)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var status = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$status, int);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$HTTPStatusEvent._status = status;
	});

	return $es4.$$class(HTTPStatusEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::HTTPStatusEvent');
})();
//flash.events.HTTPStatusEvent


//flash.events.IMEEvent
$$package('flash.events').IMEEvent = function () { throw new Error('Use of unimplemented class: IMEEvent'); }
//flash.events.IMEEvent


//flash.events.IOErrorEvent
$es4.$$package('flash.events').IOErrorEvent = (function ()
{
	//imports
	var Event;
	var ErrorEvent;
	var IOErrorEvent;

	//properties
	var $$j = {};
	IOErrorEvent.DISK_ERROR = "diskError";
	IOErrorEvent.IO_ERROR = "ioError";
	IOErrorEvent.NETWORK_ERROR = "networkError";
	IOErrorEvent.VERIFY_ERROR = "verifyError";

	//class pre initializer
	IOErrorEvent.$$sinit = (function ()
	{
		IOErrorEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		ErrorEvent = $es4.$$['flash.events'].ErrorEvent;

		//ensure $$sinit is called on super class
		if (ErrorEvent.$$sinit !== undefined) ErrorEvent.$$sinit();

		//set prototype and constructor
		IOErrorEvent.prototype = Object.create(ErrorEvent.prototype);
		Object.defineProperty(IOErrorEvent.prototype, "constructor", { value: IOErrorEvent, enumerable: false });

		//hold private values
		Object.defineProperty(IOErrorEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(IOErrorEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new IOErrorEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.text, $$this.errorID)), Event);
			}

			return $$this.$$IOErrorEvent.$$clone || ($$this.$$IOErrorEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(IOErrorEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('IOErrorEvent', 'bubbles', 'cancelable', 'text', 'errorID');
			}

			return $$this.$$IOErrorEvent.$$toString || ($$this.$$IOErrorEvent.$$toString = toString);
		}});
	});

	//class initializer
	IOErrorEvent.$$cinit = (function ()
	{
		IOErrorEvent.$$cinit = undefined;
	});

	function IOErrorEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof IOErrorEvent) || $$this.$$IOErrorEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], IOErrorEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			IOErrorEvent.$$construct($$this, $$args);
		}
	}

	//construct
	IOErrorEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (IOErrorEvent.$$cinit !== undefined) IOErrorEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$IOErrorEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		ErrorEvent.$$construct($$this);

		//initialize properties
		IOErrorEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) IOErrorEvent.$$constructor.apply($$this, args);
	});

	//initializer
	IOErrorEvent.$$iinit = (function ($$this)
	{
		//call iinit on super
		ErrorEvent.$$iinit($$this);
	});

	//constructor
	IOErrorEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$text, $$$$id)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var text = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$text, String);
		var id = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$id, int);

		ErrorEvent.$$constructor.call($$this, type, bubbles, cancelable, text, id);
	});

	return $es4.$$class(IOErrorEvent, {EXTENDS:'flash.events.ErrorEvent'}, 'flash.events::IOErrorEvent');
})();
//flash.events.IOErrorEvent


//flash.events.KeyboardEvent
$es4.$$package('flash.events').KeyboardEvent = (function ()
{
	//imports
	var Event;
	var KeyboardEvent;

	//properties
	var $$j = {};
	KeyboardEvent.KEY_DOWN = "keyDown";
	KeyboardEvent.KEY_UP = "keyUp";

	//class pre initializer
	KeyboardEvent.$$sinit = (function ()
	{
		KeyboardEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		KeyboardEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(KeyboardEvent.prototype, "constructor", { value: KeyboardEvent, enumerable: false });

		//hold private values
		Object.defineProperty(KeyboardEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(KeyboardEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new KeyboardEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.$$KeyboardEvent._charCode, $$this.$$KeyboardEvent._keyCode, $$this.$$KeyboardEvent._keyLocation, $$this.$$KeyboardEvent._ctrlKey, $$this.$$KeyboardEvent._altKey, $$this.$$KeyboardEvent._shiftKey)), Event);
			}

			return $$this.$$KeyboardEvent.$$clone || ($$this.$$KeyboardEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(KeyboardEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('KeyboardEvent: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$KeyboardEvent.$$toString || ($$this.$$KeyboardEvent.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(KeyboardEvent.prototype, 'updateAfterEvent', {
		get:function ()
		{
			var $$this = this;

			function updateAfterEvent()
			{
				throw $es4.$$primitive(new Error('KeyboardEvent: attempted call to an unimplemented function "updateAfterEvent"'));
			}

			return $$this.$$KeyboardEvent.$$updateAfterEvent || ($$this.$$KeyboardEvent.$$updateAfterEvent = updateAfterEvent);
		}});

		Object.defineProperty(KeyboardEvent.prototype, 'altKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._altKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$KeyboardEvent._altKey = value;
		}});
		Object.defineProperty(KeyboardEvent.prototype, 'charCode', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._charCode;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$KeyboardEvent._charCode = value;
		}});
		Object.defineProperty(KeyboardEvent.prototype, 'ctrlKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._ctrlKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$KeyboardEvent._ctrlKey = value;
		}});
		Object.defineProperty(KeyboardEvent.prototype, 'keyCode', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._keyCode;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$KeyboardEvent._keyCode = value;
		}});
		Object.defineProperty(KeyboardEvent.prototype, 'keyLocation', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._keyLocation;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$KeyboardEvent._keyLocation = value;
		}});
		Object.defineProperty(KeyboardEvent.prototype, 'shiftKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$KeyboardEvent._shiftKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$KeyboardEvent._shiftKey = $$this.shiftKey;
		}});

		//properties
		KeyboardEvent.prototype.$$v._charCode = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._charCode; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._charCode = $es4.$$coerce(value, uint); }
		};

		KeyboardEvent.prototype.$$v._keyCode = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._keyCode; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._keyCode = $es4.$$coerce(value, uint); }
		};

		KeyboardEvent.prototype.$$v._keyLocation = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._keyLocation; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._keyLocation = $es4.$$coerce(value, uint); }
		};

		KeyboardEvent.prototype.$$v._ctrlKey = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._ctrlKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._ctrlKey = $es4.$$coerce(value, Boolean); }
		};

		KeyboardEvent.prototype.$$v._altKey = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._altKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._altKey = $es4.$$coerce(value, Boolean); }
		};

		KeyboardEvent.prototype.$$v._shiftKey = {
		get:function () { var $$this = this.$$this; return $$this.$$KeyboardEvent.$$p._shiftKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$KeyboardEvent.$$p._shiftKey = $es4.$$coerce(value, Boolean); }
		};

	});

	//class initializer
	KeyboardEvent.$$cinit = (function ()
	{
		KeyboardEvent.$$cinit = undefined;
	});

	function KeyboardEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof KeyboardEvent) || $$this.$$KeyboardEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], KeyboardEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			KeyboardEvent.$$construct($$this, $$args);
		}
	}

	//construct
	KeyboardEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (KeyboardEvent.$$cinit !== undefined) KeyboardEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$KeyboardEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$KeyboardEvent, '_charCode', KeyboardEvent.prototype.$$v._charCode);
		Object.defineProperty($$this.$$KeyboardEvent, '_keyCode', KeyboardEvent.prototype.$$v._keyCode);
		Object.defineProperty($$this.$$KeyboardEvent, '_keyLocation', KeyboardEvent.prototype.$$v._keyLocation);
		Object.defineProperty($$this.$$KeyboardEvent, '_ctrlKey', KeyboardEvent.prototype.$$v._ctrlKey);
		Object.defineProperty($$this.$$KeyboardEvent, '_altKey', KeyboardEvent.prototype.$$v._altKey);
		Object.defineProperty($$this.$$KeyboardEvent, '_shiftKey', KeyboardEvent.prototype.$$v._shiftKey);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		KeyboardEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) KeyboardEvent.$$constructor.apply($$this, args);
	});

	//initializer
	KeyboardEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$KeyboardEvent.$$p._charCode = $es4.$$coerce(undefined, uint);
		$$this.$$KeyboardEvent.$$p._keyCode = $es4.$$coerce(undefined, uint);
		$$this.$$KeyboardEvent.$$p._keyLocation = $es4.$$coerce(undefined, uint);
		$$this.$$KeyboardEvent.$$p._ctrlKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$KeyboardEvent.$$p._altKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$KeyboardEvent.$$p._shiftKey = $es4.$$coerce(undefined, Boolean);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	KeyboardEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$charCodeValue, $$$$keyCodeValue, $$$$keyLocationValue, $$$$ctrlKeyValue, $$$$altKeyValue, $$$$shiftKeyValue)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? true : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var charCodeValue = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$charCodeValue, uint);
		var keyCodeValue = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$keyCodeValue, uint);
		var keyLocationValue = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$keyLocationValue, uint);
		var ctrlKeyValue = (6 > arguments.length - 1) ? false : $es4.$$coerce($$$$ctrlKeyValue, Boolean);
		var altKeyValue = (7 > arguments.length - 1) ? false : $es4.$$coerce($$$$altKeyValue, Boolean);
		var shiftKeyValue = (8 > arguments.length - 1) ? false : $es4.$$coerce($$$$shiftKeyValue, Boolean);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$KeyboardEvent._charCode = charCodeValue;
		$$this.$$KeyboardEvent._keyCode = keyCodeValue;
		$$this.$$KeyboardEvent._keyLocation = keyLocationValue;
		$$this.$$KeyboardEvent._ctrlKey = ctrlKeyValue;
		$$this.$$KeyboardEvent._altKey = altKeyValue;
		$$this.$$KeyboardEvent._shiftKey = shiftKeyValue;
	});

	return $es4.$$class(KeyboardEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::KeyboardEvent');
})();
//flash.events.KeyboardEvent


//flash.events.MouseEvent
$es4.$$package('flash.events').MouseEvent = (function ()
{
	//imports
	var InteractiveObject;
	var Event;
	var Point;
	var MouseEvent;

	//properties
	var $$j = {};
	MouseEvent.CLICK = "click";
	MouseEvent.CONTEXT_MENU = "contextMenu";
	MouseEvent.DOUBLE_CLICK = "doubleClick";
	MouseEvent.MIDDLE_CLICK = "middleClick";
	MouseEvent.MIDDLE_MOUSE_DOWN = "middleMouseDown";
	MouseEvent.MIDDLE_MOUSE_UP = "middleMouseUp";
	MouseEvent.MOUSE_DOWN = "mouseDown";
	MouseEvent.MOUSE_MOVE = "mouseMove";
	MouseEvent.MOUSE_OUT = "mouseOut";
	MouseEvent.MOUSE_OVER = "mouseOver";
	MouseEvent.MOUSE_UP = "mouseUp";
	MouseEvent.MOUSE_WHEEL = "mouseWheel";
	MouseEvent.RELEASE_OUTSIDE = "releaseOutside";
	MouseEvent.RIGHT_CLICK = "rightClick";
	MouseEvent.RIGHT_MOUSE_DOWN = "rightMouseDown";
	MouseEvent.RIGHT_MOUSE_UP = "rightMouseUp";
	MouseEvent.ROLL_OUT = "rollOut";
	MouseEvent.ROLL_OVER = "rollOver";

	//class pre initializer
	MouseEvent.$$sinit = (function ()
	{
		MouseEvent.$$sinit = undefined;

		//initialize imports
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Event = $es4.$$['flash.events'].Event;
		Point = $es4.$$['flash.geom'].Point;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		MouseEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(MouseEvent.prototype, "constructor", { value: MouseEvent, enumerable: false });

		//hold private values
		Object.defineProperty(MouseEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(MouseEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				var mouseEvent = $es4.$$coerce($es4.$$primitive(new MouseEvent($$this.type, $$this.bubbles, $$this.cancelable, NaN, NaN, $$this.relatedObject, $$this.ctrlKey, $$this.altKey, $$this.shiftKey, $$this.buttonDown, $$this.delta)), $es4.$$['flash.events'].MouseEvent);
				mouseEvent.$__localPoint = $$this.$__localPoint;
				mouseEvent.$__stagePoint = $$this.$__stagePoint;
				return mouseEvent;
			}

			return $$this.$$MouseEvent.$$clone || ($$this.$$MouseEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(MouseEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString("MouseEvent", "type", "bubbles", "cancelable", "localX", "localY", "stageX", "stageY", "relatedObject", "ctrlKey", "altKey", "shiftKey", "buttonDown", "delta");
			}

			return $$this.$$MouseEvent.$$toString || ($$this.$$MouseEvent.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(MouseEvent.prototype, 'updateAfterEvent', {
		get:function ()
		{
			var $$this = this;

			function updateAfterEvent()
			{
				throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "updateAfterEvent"'));
			}

			return $$this.$$MouseEvent.$$updateAfterEvent || ($$this.$$MouseEvent.$$updateAfterEvent = updateAfterEvent);
		}});

		Object.defineProperty(MouseEvent.prototype, 'altKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._altKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$MouseEvent._altKey = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'buttonDown', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._buttonDown;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$MouseEvent._buttonDown = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'ctrlKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._ctrlKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$MouseEvent._ctrlKey = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'delta', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._delta;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			$$this.$$MouseEvent._delta = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'isRelatedObjectInaccessible', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "isRelatedObjectInaccessible"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "isRelatedObjectInaccessible"'));
		}});
		Object.defineProperty(MouseEvent.prototype, 'localX', {get:function ()
		{
			var $$this = this;
			if (!$$this.$__localPoint)
			{
				if (!$$this.target)
				{
					return NaN;
				}
				$$this.$__localPoint = $$this.target.globalToLocal($$this.$__stagePoint);
			}
			return $$this.$__localPoint.x;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (!$$this.$__localPoint)
			{
				$$this.$__localPoint = $es4.$$primitive(new Point(value, 0));
			}
			else
			{
				$$this.$__localPoint.x = value;
			}
			$$this.$__stagePoint = null;
		}});
		Object.defineProperty(MouseEvent.prototype, 'localY', {get:function ()
		{
			var $$this = this;
			if (!$$this.$__localPoint)
			{
				if (!$$this.target)
				{
					return NaN;
				}
				$$this.$__localPoint = $$this.target.globalToLocal($$this.$__stagePoint);
			}
			return $$this.$__localPoint.y;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			if (!$$this.$__localPoint)
			{
				$$this.$__localPoint = $es4.$$primitive(new Point(0, value));
			}
			else
			{
				$$this.$__localPoint.y = value;
			}
			$$this.$__stagePoint = null;
		}});
		Object.defineProperty(MouseEvent.prototype, 'movementX', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "movementX"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "movementX"'));
		}});
		Object.defineProperty(MouseEvent.prototype, 'movementY', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "movementY"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('MouseEvent: attempted call to an unimplemented function "movementY"'));
		}});
		Object.defineProperty(MouseEvent.prototype, 'relatedObject', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._relatedObject;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, InteractiveObject);

			var $$this = this;
			$$this.$$MouseEvent._relatedObject = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'shiftKey', {get:function ()
		{
			var $$this = this;
			return $$this.$$MouseEvent._shiftKey;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$MouseEvent._shiftKey = value;
		}});
		Object.defineProperty(MouseEvent.prototype, 'stageX', {get:function ()
		{
			var $$this = this;
			if (!$$this.$__stagePoint)
			{
				if (!$$this.target)
				{
					return NaN;
				}
				$$this.$__stagePoint = $$this.target.localToGlobal($$this.$__localPoint);
			}
			return $$this.$__stagePoint.x;
		}});
		Object.defineProperty(MouseEvent.prototype, 'stageY', {get:function ()
		{
			var $$this = this;
			if (!$$this.$__stagePoint)
			{
				if (!$$this.target)
				{
					return NaN;
				}
				$$this.$__stagePoint = $$this.target.localToGlobal($$this.$__localPoint);
			}
			return $$this.$__stagePoint.y;
		}});

		//properties
		MouseEvent.prototype.$$v._relatedObject = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._relatedObject; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._relatedObject = $es4.$$coerce(value, InteractiveObject); }
		};

		MouseEvent.prototype.$$v._ctrlKey = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._ctrlKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._ctrlKey = $es4.$$coerce(value, Boolean); }
		};

		MouseEvent.prototype.$$v._delta = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._delta; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._delta = $es4.$$coerce(value, int); }
		};

		MouseEvent.prototype.$$v._buttonDown = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._buttonDown; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._buttonDown = $es4.$$coerce(value, Boolean); }
		};

		MouseEvent.prototype.$$v._shiftKey = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._shiftKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._shiftKey = $es4.$$coerce(value, Boolean); }
		};

		MouseEvent.prototype.$$v._altKey = {
		get:function () { var $$this = this.$$this; return $$this.$$MouseEvent.$$p._altKey; },
		set:function (value) { var $$this = this.$$this; $$this.$$MouseEvent.$$p._altKey = $es4.$$coerce(value, Boolean); }
		};

		Object.defineProperty(MouseEvent.prototype, '$__localPoint', {
		get:function () { var $$this = this; return $$this.$$MouseEvent.$__localPoint; },
		set:function (value) { var $$this = this; $$this.$$MouseEvent.$__localPoint = $es4.$$coerce(value, Point); }
		});

		Object.defineProperty(MouseEvent.prototype, '$__stagePoint', {
		get:function () { var $$this = this; return $$this.$$MouseEvent.$__stagePoint; },
		set:function (value) { var $$this = this; $$this.$$MouseEvent.$__stagePoint = $es4.$$coerce(value, Point); }
		});

	});

	//class initializer
	MouseEvent.$$cinit = (function ()
	{
		MouseEvent.$$cinit = undefined;
	});

	function MouseEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof MouseEvent) || $$this.$$MouseEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], MouseEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			MouseEvent.$$construct($$this, $$args);
		}
	}

	//construct
	MouseEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (MouseEvent.$$cinit !== undefined) MouseEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$MouseEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$MouseEvent, '_relatedObject', MouseEvent.prototype.$$v._relatedObject);
		Object.defineProperty($$this.$$MouseEvent, '_ctrlKey', MouseEvent.prototype.$$v._ctrlKey);
		Object.defineProperty($$this.$$MouseEvent, '_delta', MouseEvent.prototype.$$v._delta);
		Object.defineProperty($$this.$$MouseEvent, '_buttonDown', MouseEvent.prototype.$$v._buttonDown);
		Object.defineProperty($$this.$$MouseEvent, '_shiftKey', MouseEvent.prototype.$$v._shiftKey);
		Object.defineProperty($$this.$$MouseEvent, '_altKey', MouseEvent.prototype.$$v._altKey);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		MouseEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) MouseEvent.$$constructor.apply($$this, args);
	});

	//initializer
	MouseEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$MouseEvent.$$p._relatedObject = $es4.$$coerce(undefined, InteractiveObject);
		$$this.$$MouseEvent.$$p._ctrlKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$MouseEvent.$$p._delta = $es4.$$coerce(undefined, int);
		$$this.$$MouseEvent.$$p._buttonDown = $es4.$$coerce(undefined, Boolean);
		$$this.$$MouseEvent.$$p._shiftKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$MouseEvent.$$p._altKey = $es4.$$coerce(undefined, Boolean);
		$$this.$$MouseEvent.$__localPoint = $es4.$$coerce(undefined, Point);
		$$this.$$MouseEvent.$__stagePoint = $es4.$$coerce(undefined, Point);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	MouseEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$localX, $$$$localY, $$$$relatedObject, $$$$ctrlKey, $$$$altKey, $$$$shiftKey, $$$$buttonDown, $$$$delta)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? true : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var localX = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$localX, Number);
		var localY = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$localY, Number);
		var relatedObject = (5 > arguments.length - 1) ? null : $es4.$$coerce($$$$relatedObject, InteractiveObject);
		var ctrlKey = (6 > arguments.length - 1) ? false : $es4.$$coerce($$$$ctrlKey, Boolean);
		var altKey = (7 > arguments.length - 1) ? false : $es4.$$coerce($$$$altKey, Boolean);
		var shiftKey = (8 > arguments.length - 1) ? false : $es4.$$coerce($$$$shiftKey, Boolean);
		var buttonDown = (9 > arguments.length - 1) ? false : $es4.$$coerce($$$$buttonDown, Boolean);
		var delta = (10 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$delta, int);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$__localPoint = (isNaN(localX) || isNaN(localY)) ? null : $es4.$$primitive(new Point(localX, localY));
		$$this.relatedObject = relatedObject;
		$$this.ctrlKey = ctrlKey;
		$$this.altKey = altKey;
		$$this.shiftKey = shiftKey;
		$$this.buttonDown = buttonDown;
		$$this.delta = delta;
	});

	return $es4.$$class(MouseEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::MouseEvent');
})();
//flash.events.MouseEvent


//flash.events.NetStatusEvent
$es4.$$package('flash.events').NetStatusEvent = (function ()
{
	//imports
	var Event;
	var NetStatusEvent;

	//properties
	var $$j = {};
	NetStatusEvent.NET_STATUS = "netStatus";

	//class pre initializer
	NetStatusEvent.$$sinit = (function ()
	{
		NetStatusEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		NetStatusEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(NetStatusEvent.prototype, "constructor", { value: NetStatusEvent, enumerable: false });

		//hold private values
		Object.defineProperty(NetStatusEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(NetStatusEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new NetStatusEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.$$NetStatusEvent.$_info)), Event);
			}

			return $$this.$$NetStatusEvent.$$clone || ($$this.$$NetStatusEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(NetStatusEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('NetStatusEvent', 'type', 'bubbles', 'cancelable', 'info');
			}

			return $$this.$$NetStatusEvent.$$toString || ($$this.$$NetStatusEvent.$$toString = toString);
		}});

		Object.defineProperty(NetStatusEvent.prototype, 'info', {get:function ()
		{
			var $$this = this;
			return $$this.$$NetStatusEvent.$_info;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$NetStatusEvent.$_info = value;
		}});

		//properties
		NetStatusEvent.prototype.$$v.$_info = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStatusEvent.$$p.$_info; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStatusEvent.$$p.$_info = $es4.$$coerce(value, Object); }
		};

	});

	//class initializer
	NetStatusEvent.$$cinit = (function ()
	{
		NetStatusEvent.$$cinit = undefined;
	});

	function NetStatusEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof NetStatusEvent) || $$this.$$NetStatusEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], NetStatusEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			NetStatusEvent.$$construct($$this, $$args);
		}
	}

	//construct
	NetStatusEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (NetStatusEvent.$$cinit !== undefined) NetStatusEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$NetStatusEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$NetStatusEvent, '$_info', NetStatusEvent.prototype.$$v.$_info);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		NetStatusEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) NetStatusEvent.$$constructor.apply($$this, args);
	});

	//initializer
	NetStatusEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$NetStatusEvent.$$p.$_info = $es4.$$coerce(undefined, Object);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	NetStatusEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$info)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var info = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$info, Object);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$NetStatusEvent.$_info = info;
	});

	return $es4.$$class(NetStatusEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::NetStatusEvent');
})();
//flash.events.NetStatusEvent


//flash.events.PressAndTapGestureEvent
$$package('flash.events').PressAndTapGestureEvent = function () { throw new Error('Use of unimplemented class: PressAndTapGestureEvent'); }
//flash.events.PressAndTapGestureEvent


//flash.events.ProgressEvent
$es4.$$package('flash.events').ProgressEvent = (function ()
{
	//imports
	var Event;
	var ProgressEvent;

	//properties
	var $$j = {};
	ProgressEvent.PROGRESS = "progress";
	ProgressEvent.SOCKET_DATA = "socketData";

	//class pre initializer
	ProgressEvent.$$sinit = (function ()
	{
		ProgressEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		ProgressEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(ProgressEvent.prototype, "constructor", { value: ProgressEvent, enumerable: false });

		//hold private values
		Object.defineProperty(ProgressEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(ProgressEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new ProgressEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.bytesLoaded, $$this.bytesTotal)), Event);
			}

			return $$this.$$ProgressEvent.$$clone || ($$this.$$ProgressEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(ProgressEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('ProgressEvent', 'type', 'bubbles', 'cancelable', 'bytesLoaded', 'bytesTotal');
			}

			return $$this.$$ProgressEvent.$$toString || ($$this.$$ProgressEvent.$$toString = toString);
		}});

		Object.defineProperty(ProgressEvent.prototype, 'bytesLoaded', {get:function ()
		{
			var $$this = this;
			return $$this.$$ProgressEvent._bytesLoaded;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$ProgressEvent._bytesLoaded = value;
		}});
		Object.defineProperty(ProgressEvent.prototype, 'bytesTotal', {get:function ()
		{
			var $$this = this;
			return $$this.$$ProgressEvent._bytesTotal;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$ProgressEvent._bytesTotal = value;
		}});

		//properties
		ProgressEvent.prototype.$$v._bytesLoaded = {
		get:function () { var $$this = this.$$this; return $$this.$$ProgressEvent.$$p._bytesLoaded; },
		set:function (value) { var $$this = this.$$this; $$this.$$ProgressEvent.$$p._bytesLoaded = $es4.$$coerce(value, Number); }
		};

		ProgressEvent.prototype.$$v._bytesTotal = {
		get:function () { var $$this = this.$$this; return $$this.$$ProgressEvent.$$p._bytesTotal; },
		set:function (value) { var $$this = this.$$this; $$this.$$ProgressEvent.$$p._bytesTotal = $es4.$$coerce(value, Number); }
		};

	});

	//class initializer
	ProgressEvent.$$cinit = (function ()
	{
		ProgressEvent.$$cinit = undefined;
	});

	function ProgressEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ProgressEvent) || $$this.$$ProgressEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ProgressEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ProgressEvent.$$construct($$this, $$args);
		}
	}

	//construct
	ProgressEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ProgressEvent.$$cinit !== undefined) ProgressEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ProgressEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$ProgressEvent, '_bytesLoaded', ProgressEvent.prototype.$$v._bytesLoaded);
		Object.defineProperty($$this.$$ProgressEvent, '_bytesTotal', ProgressEvent.prototype.$$v._bytesTotal);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		ProgressEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) ProgressEvent.$$constructor.apply($$this, args);
	});

	//initializer
	ProgressEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$ProgressEvent.$$p._bytesLoaded = $es4.$$coerce(undefined, Number);
		$$this.$$ProgressEvent.$$p._bytesTotal = $es4.$$coerce(undefined, Number);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	ProgressEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$bytesLoaded, $$$$bytesTotal)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var bytesLoaded = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$bytesLoaded, Number);
		var bytesTotal = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$bytesTotal, Number);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$ProgressEvent._bytesLoaded = bytesLoaded;
		$$this.$$ProgressEvent._bytesTotal = bytesTotal;
	});

	return $es4.$$class(ProgressEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::ProgressEvent');
})();
//flash.events.ProgressEvent


//flash.events.SampleDataEvent
$es4.$$package('flash.events').SampleDataEvent = (function ()
{
	//imports
	var Event;
	var ByteArray;

	//properties
	var $$j = {};
	SampleDataEvent.SAMPLE_DATA = "sampleData";

	//class pre initializer
	SampleDataEvent.$$sinit = (function ()
	{
		SampleDataEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		ByteArray = $es4.$$['flash.utils'].ByteArray;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		SampleDataEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(SampleDataEvent.prototype, "constructor", { value: SampleDataEvent, enumerable: false });

		//hold private values
		Object.defineProperty(SampleDataEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(SampleDataEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				throw $es4.$$primitive(new Error('SampleDataEvent: attempted call to an unimplemented function "clone"'));
			}

			return $$this.$$SampleDataEvent.$$clone || ($$this.$$SampleDataEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(SampleDataEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('SampleDataEvent: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$SampleDataEvent.$$toString || ($$this.$$SampleDataEvent.$$toString = toString);
		}});

		Object.defineProperty(SampleDataEvent.prototype, 'data', {get:function ()
		{
			var $$this = this;
			return $$this.$$SampleDataEvent._data;
		}, set:function ($$$$thedata)
		{
			//set default parameter values
			var thedata = $es4.$$coerce($$$$thedata, ByteArray);

			var $$this = this;
			throw $es4.$$primitive(new Error('SampleDataEvent: attempted call to an unimplemented function "data"'));
		}});
		Object.defineProperty(SampleDataEvent.prototype, 'position', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SampleDataEvent: attempted call to an unimplemented function "position"'));
		}, set:function ($$$$theposition)
		{
			//set default parameter values
			var theposition = $es4.$$coerce($$$$theposition, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SampleDataEvent: attempted call to an unimplemented function "position"'));
		}});

		//properties
		SampleDataEvent.prototype.$$v._data = {
		get:function () { var $$this = this.$$this; return $$this.$$SampleDataEvent.$$p._data; },
		set:function (value) { var $$this = this.$$this; $$this.$$SampleDataEvent.$$p._data = $es4.$$coerce(value, ByteArray); }
		};

	});

	//class initializer
	SampleDataEvent.$$cinit = (function ()
	{
		SampleDataEvent.$$cinit = undefined;
	});

	function SampleDataEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SampleDataEvent) || $$this.$$SampleDataEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SampleDataEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SampleDataEvent.$$construct($$this, $$args);
		}
	}

	//construct
	SampleDataEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SampleDataEvent.$$cinit !== undefined) SampleDataEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SampleDataEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$SampleDataEvent, '_data', SampleDataEvent.prototype.$$v._data);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		SampleDataEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) SampleDataEvent.$$constructor.apply($$this, args);
	});

	//initializer
	SampleDataEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$SampleDataEvent.$$p._data = $es4.$$coerce(undefined, ByteArray);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	SampleDataEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$theposition, $$$$thedata)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var theposition = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$theposition, Number);
		var thedata = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$thedata, ByteArray);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$SampleDataEvent._data = thedata;
	});

	return $es4.$$class(SampleDataEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::SampleDataEvent');
})();
//flash.events.SampleDataEvent


//flash.events.SecurityErrorEvent
$es4.$$package('flash.events').SecurityErrorEvent = (function ()
{
	//imports
	var Event;
	var ErrorEvent;
	var SecurityErrorEvent;

	//properties
	var $$j = {};
	SecurityErrorEvent.SECURITY_ERROR = "securityError";

	//class pre initializer
	SecurityErrorEvent.$$sinit = (function ()
	{
		SecurityErrorEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		ErrorEvent = $es4.$$['flash.events'].ErrorEvent;

		//ensure $$sinit is called on super class
		if (ErrorEvent.$$sinit !== undefined) ErrorEvent.$$sinit();

		//set prototype and constructor
		SecurityErrorEvent.prototype = Object.create(ErrorEvent.prototype);
		Object.defineProperty(SecurityErrorEvent.prototype, "constructor", { value: SecurityErrorEvent, enumerable: false });

		//hold private values
		Object.defineProperty(SecurityErrorEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(SecurityErrorEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new SecurityErrorEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.text, $$this.errorID)), Event);
			}

			return $$this.$$SecurityErrorEvent.$$clone || ($$this.$$SecurityErrorEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(SecurityErrorEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('SecurityErrorEvent', 'bubbles', 'cancelable', 'text', 'errorID');
			}

			return $$this.$$SecurityErrorEvent.$$toString || ($$this.$$SecurityErrorEvent.$$toString = toString);
		}});
	});

	//class initializer
	SecurityErrorEvent.$$cinit = (function ()
	{
		SecurityErrorEvent.$$cinit = undefined;
	});

	function SecurityErrorEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SecurityErrorEvent) || $$this.$$SecurityErrorEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SecurityErrorEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SecurityErrorEvent.$$construct($$this, $$args);
		}
	}

	//construct
	SecurityErrorEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SecurityErrorEvent.$$cinit !== undefined) SecurityErrorEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SecurityErrorEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		ErrorEvent.$$construct($$this);

		//initialize properties
		SecurityErrorEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) SecurityErrorEvent.$$constructor.apply($$this, args);
	});

	//initializer
	SecurityErrorEvent.$$iinit = (function ($$this)
	{
		//call iinit on super
		ErrorEvent.$$iinit($$this);
	});

	//constructor
	SecurityErrorEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$text, $$$$id)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var text = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$text, String);
		var id = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$id, int);

		ErrorEvent.$$constructor.call($$this, type, bubbles, cancelable, text, id);
	});

	return $es4.$$class(SecurityErrorEvent, {EXTENDS:'flash.events.ErrorEvent'}, 'flash.events::SecurityErrorEvent');
})();
//flash.events.SecurityErrorEvent


//flash.events.ShaderEvent
$$package('flash.events').ShaderEvent = function () { throw new Error('Use of unimplemented class: ShaderEvent'); }
//flash.events.ShaderEvent


//flash.events.SoftKeyboardEvent
$$package('flash.events').SoftKeyboardEvent = function () { throw new Error('Use of unimplemented class: SoftKeyboardEvent'); }
//flash.events.SoftKeyboardEvent


//flash.events.SoftKeyboardTrigger
$$package('flash.events').SoftKeyboardTrigger = function () { throw new Error('Use of unimplemented class: SoftKeyboardTrigger'); }
//flash.events.SoftKeyboardTrigger


//flash.events.StageVideoAvailabilityEvent
$$package('flash.events').StageVideoAvailabilityEvent = function () { throw new Error('Use of unimplemented class: StageVideoAvailabilityEvent'); }
//flash.events.StageVideoAvailabilityEvent


//flash.events.StageVideoEvent
$$package('flash.events').StageVideoEvent = function () { throw new Error('Use of unimplemented class: StageVideoEvent'); }
//flash.events.StageVideoEvent


//flash.events.StatusEvent
$es4.$$package('flash.events').StatusEvent = (function ()
{
	//imports
	var Event;

	//properties
	var $$j = {};
	StatusEvent.STATUS = "status";

	//class pre initializer
	StatusEvent.$$sinit = (function ()
	{
		StatusEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		StatusEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(StatusEvent.prototype, "constructor", { value: StatusEvent, enumerable: false });

		//hold private values
		Object.defineProperty(StatusEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(StatusEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				throw $es4.$$primitive(new Error('StatusEvent: attempted call to an unimplemented function "clone"'));
			}

			return $$this.$$StatusEvent.$$clone || ($$this.$$StatusEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(StatusEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('StatusEvent: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$StatusEvent.$$toString || ($$this.$$StatusEvent.$$toString = toString);
		}});

		Object.defineProperty(StatusEvent.prototype, 'code', {get:function ()
		{
			var $$this = this;
			return $$this.$$StatusEvent._code;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('StatusEvent: attempted call to an unimplemented function "code"'));
		}});
		Object.defineProperty(StatusEvent.prototype, 'level', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('StatusEvent: attempted call to an unimplemented function "level"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('StatusEvent: attempted call to an unimplemented function "level"'));
		}});

		//properties
		StatusEvent.prototype.$$v._code = {
		get:function () { var $$this = this.$$this; return $$this.$$StatusEvent.$$p._code; },
		set:function (value) { var $$this = this.$$this; $$this.$$StatusEvent.$$p._code = $es4.$$coerce(value, String); }
		};

	});

	//class initializer
	StatusEvent.$$cinit = (function ()
	{
		StatusEvent.$$cinit = undefined;
	});

	function StatusEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StatusEvent) || $$this.$$StatusEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StatusEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StatusEvent.$$construct($$this, $$args);
		}
	}

	//construct
	StatusEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StatusEvent.$$cinit !== undefined) StatusEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StatusEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$StatusEvent, '_code', StatusEvent.prototype.$$v._code);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		StatusEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) StatusEvent.$$constructor.apply($$this, args);
	});

	//initializer
	StatusEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$StatusEvent.$$p._code = $es4.$$coerce(undefined, String);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	StatusEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$code, $$$$level)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var code = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$code, String);
		var level = (4 > arguments.length - 1) ? "" : $es4.$$coerce($$$$level, String);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$StatusEvent._code = code;
	});

	return $es4.$$class(StatusEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::StatusEvent');
})();
//flash.events.StatusEvent


//flash.events.SyncEvent
$$package('flash.events').SyncEvent = function () { throw new Error('Use of unimplemented class: SyncEvent'); }
//flash.events.SyncEvent


//flash.events.TextEvent
$es4.$$package('flash.events').TextEvent = (function ()
{
	//imports
	var Event;
	var TextEvent;

	//properties
	var $$j = {};
	TextEvent.LINK = "link";
	TextEvent.TEXT_INPUT = "textInput";

	//class pre initializer
	TextEvent.$$sinit = (function ()
	{
		TextEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		TextEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(TextEvent.prototype, "constructor", { value: TextEvent, enumerable: false });

		//hold private values
		Object.defineProperty(TextEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(TextEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new TextEvent($$this.type, $$this.bubbles, $$this.cancelable, $$this.text)), Event);
			}

			return $$this.$$TextEvent.$$clone || ($$this.$$TextEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(TextEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.formatToString('TextEvent', 'bubbles', 'cancelable', 'text');
			}

			return $$this.$$TextEvent.$$toString || ($$this.$$TextEvent.$$toString = toString);
		}});

		Object.defineProperty(TextEvent.prototype, 'text', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextEvent._text;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextEvent._text = value;
		}});

		//properties
		TextEvent.prototype.$$v._text = {
		get:function () { var $$this = this.$$this; return $$this.$$TextEvent.$$p._text; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextEvent.$$p._text = $es4.$$coerce(value, String); }
		};

	});

	//class initializer
	TextEvent.$$cinit = (function ()
	{
		TextEvent.$$cinit = undefined;
	});

	function TextEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextEvent) || $$this.$$TextEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextEvent.$$construct($$this, $$args);
		}
	}

	//construct
	TextEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextEvent.$$cinit !== undefined) TextEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$TextEvent, '_text', TextEvent.prototype.$$v._text);

		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		TextEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextEvent.$$constructor.apply($$this, args);
	});

	//initializer
	TextEvent.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$TextEvent.$$p._text = $es4.$$coerce(undefined, String);
	
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	TextEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable, $$$$text)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);
		var text = (3 > arguments.length - 1) ? "" : $es4.$$coerce($$$$text, String);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
		$$this.$$TextEvent._text = text;
	});

	return $es4.$$class(TextEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::TextEvent');
})();
//flash.events.TextEvent


//flash.events.TimerEvent
$es4.$$package('flash.events').TimerEvent = (function ()
{
	//imports
	var Event;
	var TimerEvent;

	//properties
	var $$j = {};
	TimerEvent.TIMER = "timer";
	TimerEvent.TIMER_COMPLETE = "timerComplete";

	//class pre initializer
	TimerEvent.$$sinit = (function ()
	{
		TimerEvent.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;

		//ensure $$sinit is called on super class
		if (Event.$$sinit !== undefined) Event.$$sinit();

		//set prototype and constructor
		TimerEvent.prototype = Object.create(Event.prototype);
		Object.defineProperty(TimerEvent.prototype, "constructor", { value: TimerEvent, enumerable: false });

		//hold private values
		Object.defineProperty(TimerEvent.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(TimerEvent.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new TimerEvent($$this.type, $$this.bubbles, $$this.cancelable)), Event);
			}

			return $$this.$$TimerEvent.$$clone || ($$this.$$TimerEvent.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(TimerEvent.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('TimerEvent: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$TimerEvent.$$toString || ($$this.$$TimerEvent.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(TimerEvent.prototype, 'updateAfterEvent', {
		get:function ()
		{
			var $$this = this;

			function updateAfterEvent()
			{
				throw $es4.$$primitive(new Error('TimerEvent: attempted call to an unimplemented function "updateAfterEvent"'));
			}

			return $$this.$$TimerEvent.$$updateAfterEvent || ($$this.$$TimerEvent.$$updateAfterEvent = updateAfterEvent);
		}});
	});

	//class initializer
	TimerEvent.$$cinit = (function ()
	{
		TimerEvent.$$cinit = undefined;
	});

	function TimerEvent()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TimerEvent) || $$this.$$TimerEvent !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TimerEvent) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TimerEvent.$$construct($$this, $$args);
		}
	}

	//construct
	TimerEvent.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TimerEvent.$$cinit !== undefined) TimerEvent.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TimerEvent', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		Event.$$construct($$this);

		//initialize properties
		TimerEvent.$$iinit($$this);

		//call constructor
		if (args !== undefined) TimerEvent.$$constructor.apply($$this, args);
	});

	//initializer
	TimerEvent.$$iinit = (function ($$this)
	{
		//call iinit on super
		Event.$$iinit($$this);
	});

	//constructor
	TimerEvent.$$constructor = (function ($$$$type, $$$$bubbles, $$$$cancelable)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);
		var bubbles = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$bubbles, Boolean);
		var cancelable = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$cancelable, Boolean);

		Event.$$constructor.call($$this, type, bubbles, cancelable);
	});

	return $es4.$$class(TimerEvent, {EXTENDS:'flash.events.Event'}, 'flash.events::TimerEvent');
})();
//flash.events.TimerEvent


//flash.events.TouchEvent
$$package('flash.events').TouchEvent = function () { throw new Error('Use of unimplemented class: TouchEvent'); }
//flash.events.TouchEvent


//flash.events.TransformGestureEvent
$$package('flash.events').TransformGestureEvent = function () { throw new Error('Use of unimplemented class: TransformGestureEvent'); }
//flash.events.TransformGestureEvent


//flash.events.UncaughtErrorEvent
$$package('flash.events').UncaughtErrorEvent = function () { throw new Error('Use of unimplemented class: UncaughtErrorEvent'); }
//flash.events.UncaughtErrorEvent


//flash.events.UncaughtErrorEvents
$es4.$$package('flash.events').UncaughtErrorEvents = (function ()
{
	//imports
	var EventDispatcher;

	//class pre initializer
	UncaughtErrorEvents.$$sinit = (function ()
	{
		UncaughtErrorEvents.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		UncaughtErrorEvents.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(UncaughtErrorEvents.prototype, "constructor", { value: UncaughtErrorEvents, enumerable: false });

		//hold private values
		Object.defineProperty(UncaughtErrorEvents.prototype, '$$v', {value:{}});
	});

	//class initializer
	UncaughtErrorEvents.$$cinit = (function ()
	{
		UncaughtErrorEvents.$$cinit = undefined;
	});

	function UncaughtErrorEvents()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof UncaughtErrorEvents) || $$this.$$UncaughtErrorEvents !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], UncaughtErrorEvents) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			UncaughtErrorEvents.$$construct($$this, $$args);
		}
	}

	//construct
	UncaughtErrorEvents.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (UncaughtErrorEvents.$$cinit !== undefined) UncaughtErrorEvents.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$UncaughtErrorEvents', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		UncaughtErrorEvents.$$iinit($$this);

		//call constructor
		if (args !== undefined) UncaughtErrorEvents.$$constructor.apply($$this, args);
	});

	//initializer
	UncaughtErrorEvents.$$iinit = (function ($$this)
	{
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	UncaughtErrorEvents.$$constructor = (function ()
	{
		var $$this = this;

		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(UncaughtErrorEvents, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.events::UncaughtErrorEvents');
})();
//flash.events.UncaughtErrorEvents


//flash.events.VideoEvent
$$package('flash.events').VideoEvent = function () { throw new Error('Use of unimplemented class: VideoEvent'); }
//flash.events.VideoEvent


//flash.external.ExternalInterface
$es4.$$package('flash.external').ExternalInterface = (function ()
{
	//imports
	var Player;

	//class pre initializer
	ExternalInterface.$$sinit = (function ()
	{
		ExternalInterface.$$sinit = undefined;

		//initialize imports
		Player = $es4.$$['player'].Player;

		//set prototype and constructor
		ExternalInterface.prototype = Object.create(Object.prototype);
		Object.defineProperty(ExternalInterface.prototype, "constructor", { value: ExternalInterface, enumerable: false });

		//hold private values
		Object.defineProperty(ExternalInterface.prototype, '$$v', {value:{}});
	});

	//class initializer
	ExternalInterface.$$cinit = (function ()
	{
		ExternalInterface.$$cinit = undefined;
	});

	//public static method
	ExternalInterface.addCallback = (function ($$$$functionName, $$$$closure)
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		//set default parameter values
		var functionName = $es4.$$coerce($$$$functionName, String);
		var closure = $es4.$$coerce($$$$closure, Function);

		Player.getCallObject()[functionName] = closure;
	});

	//public static method
	ExternalInterface.call = (function ($$$$functionName, $$$$rest)
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		//set default parameter values
		var functionName = $es4.$$coerce($$$$functionName, String);
		for (var $$i = 1, $$length = arguments.length, rest = new Array($$length - 1); $$i < $$length; $$i += 1) rest[$$i - 1] = arguments[$$i];

		var scope = window;
		var properties = functionName.split('.');
		for (var i = 0; i < properties.length - 1; i++)
		{
			scope = scope[properties[i]];
			if ($es4.$$typeof(scope) === "undefined" || scope === null)
			{
				throw $es4.$$primitive(new Error('undefined scope in External Interface call method'));
			}
		}
		var fn = scope[properties[properties.length - 1]];
		return $es4.$$typeof(fn) === 'function' ? Function(fn).apply(scope, rest) : null;
	});
	Object.defineProperty(ExternalInterface, 'marshallExceptions', {get:function ()
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		return false;
	}, set:function ($$$$value)
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		if (!value)
		{
			return;
		}
		throw $es4.$$primitive(new Error('ExternalInterface.marshallExceptions is not supported.'));
	}});
	Object.defineProperty(ExternalInterface, 'available', {get:function ()
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		return true;
	}});
	Object.defineProperty(ExternalInterface, 'objectID', {get:function ()
	{
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		return Player.getDomStageContainerID();
	}});

	function ExternalInterface()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ExternalInterface) || $$this.$$ExternalInterface !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ExternalInterface) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ExternalInterface.$$construct($$this, $$args);
		}
	}

	//construct
	ExternalInterface.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ExternalInterface.$$cinit !== undefined) ExternalInterface.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ExternalInterface', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ExternalInterface.$$iinit($$this);

		//call constructor
		if (args !== undefined) ExternalInterface.$$constructor.apply($$this, args);
	});

	//initializer
	ExternalInterface.$$iinit = (function ($$this)
	{
	});

	//constructor
	ExternalInterface.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(ExternalInterface, null, 'flash.external::ExternalInterface');
})();
//flash.external.ExternalInterface


//flash.filters.BevelFilter
$$package('flash.filters').BevelFilter = function () { throw new Error('Use of unimplemented class: BevelFilter'); }
//flash.filters.BevelFilter


//flash.filters.BitmapFilter
$$package('flash.filters').BitmapFilter = function () { throw new Error('Use of unimplemented class: BitmapFilter'); }
//flash.filters.BitmapFilter


//flash.filters.BitmapFilterQuality
$$package('flash.filters').BitmapFilterQuality = function () { throw new Error('Use of unimplemented class: BitmapFilterQuality'); }
//flash.filters.BitmapFilterQuality


//flash.filters.BitmapFilterType
$$package('flash.filters').BitmapFilterType = function () { throw new Error('Use of unimplemented class: BitmapFilterType'); }
//flash.filters.BitmapFilterType


//flash.filters.BlurFilter
$$package('flash.filters').BlurFilter = function () { throw new Error('Use of unimplemented class: BlurFilter'); }
//flash.filters.BlurFilter


//flash.filters.ColorMatrixFilter
$$package('flash.filters').ColorMatrixFilter = function () { throw new Error('Use of unimplemented class: ColorMatrixFilter'); }
//flash.filters.ColorMatrixFilter


//flash.filters.ConvolutionFilter
$$package('flash.filters').ConvolutionFilter = function () { throw new Error('Use of unimplemented class: ConvolutionFilter'); }
//flash.filters.ConvolutionFilter


//flash.filters.DisplacementMapFilter
$$package('flash.filters').DisplacementMapFilter = function () { throw new Error('Use of unimplemented class: DisplacementMapFilter'); }
//flash.filters.DisplacementMapFilter


//flash.filters.DisplacementMapFilterMode
$$package('flash.filters').DisplacementMapFilterMode = function () { throw new Error('Use of unimplemented class: DisplacementMapFilterMode'); }
//flash.filters.DisplacementMapFilterMode


//flash.filters.DropShadowFilter
$$package('flash.filters').DropShadowFilter = function () { throw new Error('Use of unimplemented class: DropShadowFilter'); }
//flash.filters.DropShadowFilter


//flash.filters.GlowFilter
$$package('flash.filters').GlowFilter = function () { throw new Error('Use of unimplemented class: GlowFilter'); }
//flash.filters.GlowFilter


//flash.filters.GradientBevelFilter
$$package('flash.filters').GradientBevelFilter = function () { throw new Error('Use of unimplemented class: GradientBevelFilter'); }
//flash.filters.GradientBevelFilter


//flash.filters.GradientGlowFilter
$$package('flash.filters').GradientGlowFilter = function () { throw new Error('Use of unimplemented class: GradientGlowFilter'); }
//flash.filters.GradientGlowFilter


//flash.filters.ShaderFilter
$$package('flash.filters').ShaderFilter = function () { throw new Error('Use of unimplemented class: ShaderFilter'); }
//flash.filters.ShaderFilter


//flash.geom.ColorTransform
$es4.$$package('flash.geom').ColorTransform = (function ()
{
	//imports
	var ColorTransform;

	//class pre initializer
	ColorTransform.$$sinit = (function ()
	{
		ColorTransform.$$sinit = undefined;

		//initialize imports
		//set prototype and constructor
		ColorTransform.prototype = Object.create(Object.prototype);
		Object.defineProperty(ColorTransform.prototype, "constructor", { value: ColorTransform, enumerable: false });

		//hold private values
		Object.defineProperty(ColorTransform.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(ColorTransform.prototype, 'concat', {
		get:function ()
		{
			var $$this = this;

			function concat($$$$second)
			{
				//set default parameter values
				var second = $es4.$$coerce($$$$second, $es4.$$['flash.geom'].ColorTransform);

				$$this.redMultiplier *= second.redMultiplier;
				$$this.greenMultiplier *= second.greenMultiplier;
				$$this.blueMultiplier *= second.blueMultiplier;
				$$this.alphaMultiplier *= second.alphaMultiplier;
				$$this.redOffset += second.redOffset;
				$$this.greenOffset += second.greenOffset;
				$$this.blueOffset += second.blueOffset;
				$$this.alphaOffset += second.alphaOffset;
			}

			return $$this.$$ColorTransform.$$concat || ($$this.$$ColorTransform.$$concat = concat);
		}});


		//public instance method
		Object.defineProperty(ColorTransform.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return "[ColorTransform(" + [$$this.redMultiplier, $$this.greenMultiplier, $$this.blueMultiplier, $$this.alphaMultiplier, $$this.redOffset, $$this.greenOffset, $$this.blueOffset, $$this.alphaOffset].join(", ") + ")]";
			}

			return $$this.$$ColorTransform.$$toString || ($$this.$$ColorTransform.$$toString = toString);
		}});

		Object.defineProperty(ColorTransform.prototype, 'color', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.redOffset << 16 | $$this.greenOffset << 8 | $$this.blueOffset, uint);
		}, set:function ($$$$newColor)
		{
			//set default parameter values
			var newColor = $es4.$$coerce($$$$newColor, uint);

			var $$this = this;
			$$this.redOffset = newColor >> 16 & 0xFF;
			$$this.greenOffset = newColor >> 8 & 0xFF;
			$$this.blueOffset = newColor & 0xFF;
			$$this.redMultiplier = $$this.greenMultiplier = $$this.blueMultiplier = 1;
		}});

		//properties
		Object.defineProperty(ColorTransform.prototype, 'alphaMultiplier', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.alphaMultiplier; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.alphaMultiplier = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'alphaOffset', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.alphaOffset; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.alphaOffset = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'blueMultiplier', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.blueMultiplier; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.blueMultiplier = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'blueOffset', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.blueOffset; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.blueOffset = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'greenMultiplier', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.greenMultiplier; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.greenMultiplier = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'greenOffset', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.greenOffset; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.greenOffset = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'redMultiplier', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.redMultiplier; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.redMultiplier = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(ColorTransform.prototype, 'redOffset', {
		get:function () { var $$this = this; return $$this.$$ColorTransform.redOffset; },
		set:function (value) { var $$this = this; $$this.$$ColorTransform.redOffset = $es4.$$coerce(value, Number); }
		});

	});

	//class initializer
	ColorTransform.$$cinit = (function ()
	{
		ColorTransform.$$cinit = undefined;
	});

	function ColorTransform()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ColorTransform) || $$this.$$ColorTransform !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ColorTransform) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ColorTransform.$$construct($$this, $$args);
		}
	}

	//construct
	ColorTransform.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ColorTransform.$$cinit !== undefined) ColorTransform.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ColorTransform', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ColorTransform.$$iinit($$this);

		//call constructor
		if (args !== undefined) ColorTransform.$$constructor.apply($$this, args);
	});

	//initializer
	ColorTransform.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$ColorTransform.alphaMultiplier = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.alphaOffset = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.blueMultiplier = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.blueOffset = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.greenMultiplier = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.greenOffset = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.redMultiplier = $es4.$$coerce(undefined, Number);
		$$this.$$ColorTransform.redOffset = $es4.$$coerce(undefined, Number);
	
	});

	//constructor
	ColorTransform.$$constructor = (function ($$$$redMultiplier, $$$$greenMultiplier, $$$$blueMultiplier, $$$$alphaMultiplier, $$$$redOffset, $$$$greenOffset, $$$$blueOffset, $$$$alphaOffset)
	{
		var $$this = this;
		//set default parameter values
		var redMultiplier = (0 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$redMultiplier, Number);
		var greenMultiplier = (1 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$greenMultiplier, Number);
		var blueMultiplier = (2 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$blueMultiplier, Number);
		var alphaMultiplier = (3 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$alphaMultiplier, Number);
		var redOffset = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$redOffset, Number);
		var greenOffset = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$greenOffset, Number);
		var blueOffset = (6 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$blueOffset, Number);
		var alphaOffset = (7 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$alphaOffset, Number);

		$$this.redMultiplier = redMultiplier;
		$$this.greenMultiplier = greenMultiplier;
		$$this.blueMultiplier = blueMultiplier;
		$$this.alphaMultiplier = alphaMultiplier;
		$$this.redOffset = redOffset;
		$$this.greenOffset = greenOffset;
		$$this.blueOffset = blueOffset;
		$$this.alphaOffset = alphaOffset;
	});

	return $es4.$$class(ColorTransform, null, 'flash.geom::ColorTransform');
})();
//flash.geom.ColorTransform


//flash.geom.Matrix
$es4.$$package('flash.geom').Matrix = (function ()
{
	//imports
	var Point;
	var Vector3D;
	var Matrix;

	//properties
	var $$j = {};
	Object.defineProperty(Matrix, 'MAGIC_GRADIENT_FACTOR', {
	get:function () { if (Matrix.$$cinit !== undefined) Matrix.$$cinit(); return $$j.MAGIC_GRADIENT_FACTOR; },
	set:function (value) { if (Matrix.$$cinit !== undefined) Matrix.$$cinit(); $$j.MAGIC_GRADIENT_FACTOR = $es4.$$coerce(value, Number); }
	});


	//class pre initializer
	Matrix.$$sinit = (function ()
	{
		Matrix.$$sinit = undefined;

		//initialize imports
		Point = $es4.$$['flash.geom'].Point;
		Vector3D = $es4.$$['flash.geom'].Vector3D;

		//set prototype and constructor
		Matrix.prototype = Object.create(Object.prototype);
		Object.defineProperty(Matrix.prototype, "constructor", { value: Matrix, enumerable: false });

		//hold private values
		Object.defineProperty(Matrix.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Matrix.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new Matrix($$this.a, $$this.b, $$this.c, $$this.d, $$this.tx, $$this.ty)), $es4.$$['flash.geom'].Matrix);
			}

			return $$this.$$Matrix.$$clone || ($$this.$$Matrix.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'concat', {
		get:function ()
		{
			var $$this = this;

			function concat($$$$m)
			{
				//set default parameter values
				var m = $es4.$$coerce($$$$m, $es4.$$['flash.geom'].Matrix);

				var a = $es4.$$coerce($$this.a, Number);
				var b = $es4.$$coerce($$this.b, Number);
				var c = $es4.$$coerce($$this.c, Number);
				var d = $es4.$$coerce($$this.d, Number);
				var tx = $es4.$$coerce($$this.tx, Number);
				var ty = $es4.$$coerce($$this.ty, Number);
				$$this.a = m.a * a + m.c * b;
				$$this.b = m.b * a + m.d * b;
				$$this.c = m.a * c + m.c * d;
				$$this.d = m.b * c + m.d * d;
				$$this.tx = m.a * tx + m.c * ty + m.tx;
				$$this.ty = m.b * tx + m.d * ty + m.ty;
			}

			return $$this.$$Matrix.$$concat || ($$this.$$Matrix.$$concat = concat);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'copyColumnFrom', {
		get:function ()
		{
			var $$this = this;

			function copyColumnFrom($$$$column, $$$$vector3D)
			{
				//set default parameter values
				var column = $es4.$$coerce($$$$column, uint);
				var vector3D = $es4.$$coerce($$$$vector3D, Vector3D);

				throw $es4.$$primitive(new Error('Matrix: attempted call to an unimplemented function "copyColumnFrom"'));
			}

			return $$this.$$Matrix.$$copyColumnFrom || ($$this.$$Matrix.$$copyColumnFrom = copyColumnFrom);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'copyColumnTo', {
		get:function ()
		{
			var $$this = this;

			function copyColumnTo($$$$column, $$$$vector3D)
			{
				//set default parameter values
				var column = $es4.$$coerce($$$$column, uint);
				var vector3D = $es4.$$coerce($$$$vector3D, Vector3D);

				throw $es4.$$primitive(new Error('Matrix: attempted call to an unimplemented function "copyColumnTo"'));
			}

			return $$this.$$Matrix.$$copyColumnTo || ($$this.$$Matrix.$$copyColumnTo = copyColumnTo);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'copyFrom', {
		get:function ()
		{
			var $$this = this;

			function copyFrom($$$$sourceMatrix)
			{
				//set default parameter values
				var sourceMatrix = $es4.$$coerce($$$$sourceMatrix, $es4.$$['flash.geom'].Matrix);

				throw $es4.$$primitive(new Error('Matrix: attempted call to an unimplemented function "copyFrom"'));
			}

			return $$this.$$Matrix.$$copyFrom || ($$this.$$Matrix.$$copyFrom = copyFrom);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'copyRowFrom', {
		get:function ()
		{
			var $$this = this;

			function copyRowFrom($$$$row, $$$$vector3D)
			{
				//set default parameter values
				var row = $es4.$$coerce($$$$row, uint);
				var vector3D = $es4.$$coerce($$$$vector3D, Vector3D);

				throw $es4.$$primitive(new Error('Matrix: attempted call to an unimplemented function "copyRowFrom"'));
			}

			return $$this.$$Matrix.$$copyRowFrom || ($$this.$$Matrix.$$copyRowFrom = copyRowFrom);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'copyRowTo', {
		get:function ()
		{
			var $$this = this;

			function copyRowTo($$$$row, $$$$vector3D)
			{
				//set default parameter values
				var row = $es4.$$coerce($$$$row, uint);
				var vector3D = $es4.$$coerce($$$$vector3D, Vector3D);

				throw $es4.$$primitive(new Error('Matrix: attempted call to an unimplemented function "copyRowTo"'));
			}

			return $$this.$$Matrix.$$copyRowTo || ($$this.$$Matrix.$$copyRowTo = copyRowTo);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'createBox', {
		get:function ()
		{
			var $$this = this;

			function createBox($$$$scaleX, $$$$scaleY, $$$$rotation, $$$$tx, $$$$ty)
			{
				//set default parameter values
				var scaleX = $es4.$$coerce($$$$scaleX, Number);
				var scaleY = $es4.$$coerce($$$$scaleY, Number);
				var rotation = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$rotation, Number);
				var tx = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$tx, Number);
				var ty = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$ty, Number);

				if (rotation === 0)
				{
					$$this.a = $$this.d = 1;
					$$this.b = $$this.c = 0;
				}
				else
				{
					$$this.a = Math.cos(rotation);
					$$this.b = Math.sin(rotation);
					$$this.c = -$$this.b;
					$$this.d = $$this.a;
				}
				if (scaleX !== 1)
				{
					$$this.a *= scaleX;
					$$this.c *= scaleX;
				}
				if (scaleY !== 1)
				{
					$$this.b *= scaleY;
					$$this.d *= scaleY;
				}
				$$this.tx = tx;
				$$this.ty = ty;
			}

			return $$this.$$Matrix.$$createBox || ($$this.$$Matrix.$$createBox = createBox);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'createGradientBox', {
		get:function ()
		{
			var $$this = this;

			function createGradientBox($$$$width, $$$$height, $$$$rotation, $$$$tx, $$$$ty)
			{
				//set default parameter values
				var width = $es4.$$coerce($$$$width, Number);
				var height = $es4.$$coerce($$$$height, Number);
				var rotation = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$rotation, Number);
				var tx = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$tx, Number);
				var ty = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$ty, Number);

				$$this.createBox(width / Matrix.MAGIC_GRADIENT_FACTOR, height / Matrix.MAGIC_GRADIENT_FACTOR, rotation, tx + width / 2, ty + height / 2);
			}

			return $$this.$$Matrix.$$createGradientBox || ($$this.$$Matrix.$$createGradientBox = createGradientBox);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'deltaTransformPoint', {
		get:function ()
		{
			var $$this = this;

			function deltaTransformPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				return $es4.$$primitive(new Point($$this.a * point.x + $$this.c * point.y, $$this.b * point.x + $$this.d * point.y));
			}

			return $$this.$$Matrix.$$deltaTransformPoint || ($$this.$$Matrix.$$deltaTransformPoint = deltaTransformPoint);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, '$__deltaTransformPoint', {
		get:function ()
		{
			var $$this = this;

			function $__deltaTransformPoint($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				return [$$this.a * x + $$this.c * y, $$this.b * x + $$this.d * y];
			}

			return $$this.$$Matrix.$$$__deltaTransformPoint || ($$this.$$Matrix.$$$__deltaTransformPoint = $__deltaTransformPoint);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'identity', {
		get:function ()
		{
			var $$this = this;

			function identity()
			{
				$$this.a = $$this.d = 1;
				$$this.b = $$this.c = $$this.tx = $$this.ty = 0;
			}

			return $$this.$$Matrix.$$identity || ($$this.$$Matrix.$$identity = identity);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'invert', {
		get:function ()
		{
			var $$this = this;

			function invert()
			{
				var a = $es4.$$coerce($$this.a, Number);
				var b = $es4.$$coerce($$this.b, Number);
				var c = $es4.$$coerce($$this.c, Number);
				var d = $es4.$$coerce($$this.d, Number);
				var tx = $es4.$$coerce($$this.tx, Number);
				var ty = $es4.$$coerce($$this.ty, Number);
				var det = a * d - c * b;
				$$this.a = d / det;
				$$this.b = -b / det;
				$$this.c = -c / det;
				$$this.d = a / det;
				$$this.tx = -($$this.a * tx + $$this.c * ty);
				$$this.ty = -($$this.b * tx + $$this.d * ty);
			}

			return $$this.$$Matrix.$$invert || ($$this.$$Matrix.$$invert = invert);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'rotate', {
		get:function ()
		{
			var $$this = this;

			function rotate($$$$angle)
			{
				//set default parameter values
				var angle = $es4.$$coerce($$$$angle, Number);

				if (angle != 0)
				{
					var cos = Math.cos(angle);
					var sin = Math.sin(angle);
					var a = $es4.$$coerce($$this.a, Number);
					var b = $es4.$$coerce($$this.b, Number);
					var c = $es4.$$coerce($$this.c, Number);
					var d = $es4.$$coerce($$this.d, Number);
					var tx = $es4.$$coerce($$this.tx, Number);
					var ty = $es4.$$coerce($$this.ty, Number);
					$$this.a = a * cos - b * sin;
					$$this.b = a * sin + b * cos;
					$$this.c = c * cos - d * sin;
					$$this.d = c * sin + d * cos;
					$$this.tx = tx * cos - ty * sin;
					$$this.ty = tx * sin + ty * cos;
				}
			}

			return $$this.$$Matrix.$$rotate || ($$this.$$Matrix.$$rotate = rotate);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, '$__rotate', {
		get:function ()
		{
			var $$this = this;

			function $__rotate($$$$angle)
			{
				//set default parameter values
				var angle = $es4.$$coerce($$$$angle, Number);

				if (angle != 0)
				{
					var cos = Math.cos(angle);
					var sin = Math.sin(angle);
					var a = $es4.$$coerce($$this.a, Number);
					var b = $es4.$$coerce($$this.b, Number);
					var c = $es4.$$coerce($$this.c, Number);
					var d = $es4.$$coerce($$this.d, Number);
					$$this.a = a * cos - b * sin;
					$$this.b = a * sin + b * cos;
					$$this.c = c * cos - d * sin;
					$$this.d = c * sin + d * cos;
				}
			}

			return $$this.$$Matrix.$$$__rotate || ($$this.$$Matrix.$$$__rotate = $__rotate);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'scale', {
		get:function ()
		{
			var $$this = this;

			function scale($$$$sx, $$$$sy)
			{
				//set default parameter values
				var sx = $es4.$$coerce($$$$sx, Number);
				var sy = $es4.$$coerce($$$$sy, Number);

				if (sx !== 1)
				{
					$$this.a *= sx;
					$$this.c *= sx;
					$$this.tx *= sx;
				}
				if (sy !== 1)
				{
					$$this.b *= sy;
					$$this.d *= sy;
					$$this.ty *= sy;
				}
			}

			return $$this.$$Matrix.$$scale || ($$this.$$Matrix.$$scale = scale);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, '$__scale', {
		get:function ()
		{
			var $$this = this;

			function $__scale($$$$sx, $$$$sy)
			{
				//set default parameter values
				var sx = $es4.$$coerce($$$$sx, Number);
				var sy = $es4.$$coerce($$$$sy, Number);

				if (sx !== 1)
				{
					$$this.a *= sx;
					$$this.c *= sx;
				}
				if (sy !== 1)
				{
					$$this.b *= sy;
					$$this.d *= sy;
				}
			}

			return $$this.$$Matrix.$$$__scale || ($$this.$$Matrix.$$$__scale = $__scale);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'setTo', {
		get:function ()
		{
			var $$this = this;

			function setTo($$$$aa, $$$$ba, $$$$ca, $$$$da, $$$$txa, $$$$tya)
			{
				//set default parameter values
				var aa = $es4.$$coerce($$$$aa, Number);
				var ba = $es4.$$coerce($$$$ba, Number);
				var ca = $es4.$$coerce($$$$ca, Number);
				var da = $es4.$$coerce($$$$da, Number);
				var txa = $es4.$$coerce($$$$txa, Number);
				var tya = $es4.$$coerce($$$$tya, Number);

				$$this.a = $$this.a;
				$$this.b = $$this.b;
				$$this.c = $$this.c;
				$$this.d = $$this.d;
				$$this.tx = $$this.tx;
				$$this.ty = $$this.ty;
			}

			return $$this.$$Matrix.$$setTo || ($$this.$$Matrix.$$setTo = setTo);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return "(" + ["a=" + $$this.a, "b=" + $$this.b, "c=" + $$this.c, "d=" + $$this.d, "tx=" + $$this.tx, "ty=" + $$this.ty].join(", ") + ")";
			}

			return $$this.$$Matrix.$$toString || ($$this.$$Matrix.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'transformPoint', {
		get:function ()
		{
			var $$this = this;

			function transformPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				return $es4.$$primitive(new Point($$this.a * point.x + $$this.c * point.y + $$this.tx, $$this.b * point.x + $$this.d * point.y + $$this.ty));
			}

			return $$this.$$Matrix.$$transformPoint || ($$this.$$Matrix.$$transformPoint = transformPoint);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, '$__transformPoint', {
		get:function ()
		{
			var $$this = this;

			function $__transformPoint($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				return [$$this.a * x + $$this.c * y + $$this.tx, $$this.b * x + $$this.d * y + $$this.ty];
			}

			return $$this.$$Matrix.$$$__transformPoint || ($$this.$$Matrix.$$$__transformPoint = $__transformPoint);
		}});


		//public instance method
		Object.defineProperty(Matrix.prototype, 'translate', {
		get:function ()
		{
			var $$this = this;

			function translate($$$$dx, $$$$dy)
			{
				//set default parameter values
				var dx = $es4.$$coerce($$$$dx, Number);
				var dy = $es4.$$coerce($$$$dy, Number);

				$$this.tx += dx;
				$$this.ty += dy;
			}

			return $$this.$$Matrix.$$translate || ($$this.$$Matrix.$$translate = translate);
		}});

		//properties
		Object.defineProperty(Matrix.prototype, 'a', {
		get:function () { var $$this = this; return $$this.$$Matrix.a; },
		set:function (value) { var $$this = this; $$this.$$Matrix.a = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Matrix.prototype, 'b', {
		get:function () { var $$this = this; return $$this.$$Matrix.b; },
		set:function (value) { var $$this = this; $$this.$$Matrix.b = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Matrix.prototype, 'c', {
		get:function () { var $$this = this; return $$this.$$Matrix.c; },
		set:function (value) { var $$this = this; $$this.$$Matrix.c = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Matrix.prototype, 'd', {
		get:function () { var $$this = this; return $$this.$$Matrix.d; },
		set:function (value) { var $$this = this; $$this.$$Matrix.d = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Matrix.prototype, 'tx', {
		get:function () { var $$this = this; return $$this.$$Matrix.tx; },
		set:function (value) { var $$this = this; $$this.$$Matrix.tx = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Matrix.prototype, 'ty', {
		get:function () { var $$this = this; return $$this.$$Matrix.ty; },
		set:function (value) { var $$this = this; $$this.$$Matrix.ty = $es4.$$coerce(value, Number); }
		});

	});

	//class initializer
	Matrix.$$cinit = (function ()
	{
		Matrix.$$cinit = undefined;

		//initialize properties
		$$j.MAGIC_GRADIENT_FACTOR = $es4.$$coerce(16384 / 10, Number);
	
	});

	function Matrix()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Matrix) || $$this.$$Matrix !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Matrix) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Matrix.$$construct($$this, $$args);
		}
	}

	//construct
	Matrix.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Matrix.$$cinit !== undefined) Matrix.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Matrix', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Matrix.$$iinit($$this);

		//call constructor
		if (args !== undefined) Matrix.$$constructor.apply($$this, args);
	});

	//initializer
	Matrix.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Matrix.a = $es4.$$coerce(undefined, Number);
		$$this.$$Matrix.b = $es4.$$coerce(undefined, Number);
		$$this.$$Matrix.c = $es4.$$coerce(undefined, Number);
		$$this.$$Matrix.d = $es4.$$coerce(undefined, Number);
		$$this.$$Matrix.tx = $es4.$$coerce(undefined, Number);
		$$this.$$Matrix.ty = $es4.$$coerce(undefined, Number);
	
	});

	//constructor
	Matrix.$$constructor = (function ($$$$a, $$$$b, $$$$c, $$$$d, $$$$tx, $$$$ty)
	{
		var $$this = this;
		//set default parameter values
		var a = (0 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$a, Number);
		var b = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$b, Number);
		var c = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$c, Number);
		var d = (3 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$d, Number);
		var tx = (4 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$tx, Number);
		var ty = (5 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$ty, Number);

		$$this.a = a;
		$$this.b = b;
		$$this.c = c;
		$$this.d = d;
		$$this.tx = tx;
		$$this.ty = ty;
	});

	return $es4.$$class(Matrix, null, 'flash.geom::Matrix');
})();
//flash.geom.Matrix


//flash.geom.Matrix3D
$$package('flash.geom').Matrix3D = function () { throw new Error('Use of unimplemented class: Matrix3D'); }
//flash.geom.Matrix3D


//flash.geom.Orientation3D
$$package('flash.geom').Orientation3D = function () { throw new Error('Use of unimplemented class: Orientation3D'); }
//flash.geom.Orientation3D


//flash.geom.PerspectiveProjection
$$package('flash.geom').PerspectiveProjection = function () { throw new Error('Use of unimplemented class: PerspectiveProjection'); }
//flash.geom.PerspectiveProjection


//flash.geom.Point
$es4.$$package('flash.geom').Point = (function ()
{
	//imports
	var Point;

	//class pre initializer
	Point.$$sinit = (function ()
	{
		Point.$$sinit = undefined;

		//initialize imports
		//set prototype and constructor
		Point.prototype = Object.create(Object.prototype);
		Object.defineProperty(Point.prototype, "constructor", { value: Point, enumerable: false });

		//hold private values
		Object.defineProperty(Point.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Point.prototype, 'add', {
		get:function ()
		{
			var $$this = this;

			function add($$$$v)
			{
				//set default parameter values
				var v = $es4.$$coerce($$$$v, $es4.$$['flash.geom'].Point);

				return $es4.$$coerce($es4.$$primitive(new Point($$this.$$Point._x + v.x, $$this.$$Point._y + v.y)), $es4.$$['flash.geom'].Point);
			}

			return $$this.$$Point.$$add || ($$this.$$Point.$$add = add);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new Point($$this.$$Point._x, $$this.$$Point._y)), $es4.$$['flash.geom'].Point);
			}

			return $$this.$$Point.$$clone || ($$this.$$Point.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'copyFrom', {
		get:function ()
		{
			var $$this = this;

			function copyFrom($$$$sourcePoint)
			{
				//set default parameter values
				var sourcePoint = $es4.$$coerce($$$$sourcePoint, $es4.$$['flash.geom'].Point);

				throw $es4.$$primitive(new Error('Point: attempted call to an unimplemented function "copyFrom"'));
			}

			return $$this.$$Point.$$copyFrom || ($$this.$$Point.$$copyFrom = copyFrom);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'equals', {
		get:function ()
		{
			var $$this = this;

			function equals($$$$toCompare)
			{
				//set default parameter values
				var toCompare = $es4.$$coerce($$$$toCompare, $es4.$$['flash.geom'].Point);

				return $es4.$$coerce($$this.$$Point._x == toCompare.x && $$this.$$Point._y == toCompare.y, Boolean);
			}

			return $$this.$$Point.$$equals || ($$this.$$Point.$$equals = equals);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'normalize', {
		get:function ()
		{
			var $$this = this;

			function normalize($$$$thickness)
			{
				//set default parameter values
				var thickness = $es4.$$coerce($$$$thickness, Number);

				if ($$this.$$Point._x !== 0 || $$this.$$Point._y !== 0)
				{
					var relativeThickness = thickness / $$this.length;
					$$this.$$Point._x *= relativeThickness;
					$$this.$$Point._y *= relativeThickness;
				}
			}

			return $$this.$$Point.$$normalize || ($$this.$$Point.$$normalize = normalize);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'offset', {
		get:function ()
		{
			var $$this = this;

			function offset($$$$dx, $$$$dy)
			{
				//set default parameter values
				var dx = $es4.$$coerce($$$$dx, Number);
				var dy = $es4.$$coerce($$$$dy, Number);

				$$this.$$Point._x += dx;
				$$this.$$Point._y += dy;
			}

			return $$this.$$Point.$$offset || ($$this.$$Point.$$offset = offset);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'setTo', {
		get:function ()
		{
			var $$this = this;

			function setTo($$$$xa, $$$$ya)
			{
				//set default parameter values
				var xa = $es4.$$coerce($$$$xa, Number);
				var ya = $es4.$$coerce($$$$ya, Number);

				$$this.$$Point._x = xa;
				$$this.$$Point._y = ya;
			}

			return $$this.$$Point.$$setTo || ($$this.$$Point.$$setTo = setTo);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'subtract', {
		get:function ()
		{
			var $$this = this;

			function subtract($$$$v)
			{
				//set default parameter values
				var v = $es4.$$coerce($$$$v, $es4.$$['flash.geom'].Point);

				return $es4.$$coerce($es4.$$primitive(new Point($$this.$$Point._x - v.x, $$this.$$Point._y - v.y)), $es4.$$['flash.geom'].Point);
			}

			return $$this.$$Point.$$subtract || ($$this.$$Point.$$subtract = subtract);
		}});


		//public instance method
		Object.defineProperty(Point.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return ["(x=", $$this.$$Point._x, ", y=", $$this.$$Point._y, ")"].join("");
			}

			return $$this.$$Point.$$toString || ($$this.$$Point.$$toString = toString);
		}});

		Object.defineProperty(Point.prototype, 'y', {get:function ()
		{
			var $$this = this;
			return $$this.$$Point._y;
		}, set:function ($$$$y)
		{
			//set default parameter values
			var y = $es4.$$coerce($$$$y, Number);

			var $$this = this;
			$$this.$$Point._y = y;
		}});
		Object.defineProperty(Point.prototype, 'x', {get:function ()
		{
			var $$this = this;
			return $$this.$$Point._x;
		}, set:function ($$$$x)
		{
			//set default parameter values
			var x = $es4.$$coerce($$$$x, Number);

			var $$this = this;
			$$this.$$Point._x = x;
		}});
		Object.defineProperty(Point.prototype, 'length', {get:function ()
		{
			var $$this = this;
			return Point.diagonalLength($$this.$$Point._x, $$this.$$Point._y);
		}});

		//properties
		Point.prototype.$$v._x = {
		get:function () { var $$this = this.$$this; return $$this.$$Point.$$p._x; },
		set:function (value) { var $$this = this.$$this; $$this.$$Point.$$p._x = $es4.$$coerce(value, Number); }
		};

		Point.prototype.$$v._y = {
		get:function () { var $$this = this.$$this; return $$this.$$Point.$$p._y; },
		set:function (value) { var $$this = this.$$this; $$this.$$Point.$$p._y = $es4.$$coerce(value, Number); }
		};

	});

	//class initializer
	Point.$$cinit = (function ()
	{
		Point.$$cinit = undefined;
	});

	//private static method
	Point.diagonalLength = (function ($$$$x, $$$$y)
	{
		if (Point.$$cinit !== undefined) Point.$$cinit();

		//set default parameter values
		var x = $es4.$$coerce($$$$x, Number);
		var y = $es4.$$coerce($$$$y, Number);

		return x === 0 ? Math.abs(y) : y === 0 ? Math.abs(x) : Math.sqrt(x * x + y * y);
	});

	//public static method
	Point.distance = (function ($$$$pt1, $$$$pt2)
	{
		if (Point.$$cinit !== undefined) Point.$$cinit();

		//set default parameter values
		var pt1 = $es4.$$coerce($$$$pt1, $es4.$$['flash.geom'].Point);
		var pt2 = $es4.$$coerce($$$$pt2, $es4.$$['flash.geom'].Point);

		return Point.diagonalLength(pt2.x - pt1.x, pt2.y - pt1.y);
	});

	//public static method
	Point.interpolate = (function ($$$$pt1, $$$$pt2, $$$$f)
	{
		if (Point.$$cinit !== undefined) Point.$$cinit();

		//set default parameter values
		var pt1 = $es4.$$coerce($$$$pt1, $es4.$$['flash.geom'].Point);
		var pt2 = $es4.$$coerce($$$$pt2, $es4.$$['flash.geom'].Point);
		var f = $es4.$$coerce($$$$f, Number);

		return $es4.$$coerce($es4.$$primitive(new Point(pt1.x * f + pt2.x * (1 - f), pt1.y * f + pt2.y * (1 - f))), $es4.$$['flash.geom'].Point);
	});

	//public static method
	Point.polar = (function ($$$$len, $$$$angle)
	{
		if (Point.$$cinit !== undefined) Point.$$cinit();

		//set default parameter values
		var len = $es4.$$coerce($$$$len, Number);
		var angle = $es4.$$coerce($$$$angle, Number);

		return $es4.$$coerce($es4.$$primitive(new Point(len * Math.cos(angle), len * Math.sin(angle))), $es4.$$['flash.geom'].Point);
	});
	function Point()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Point) || $$this.$$Point !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Point) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Point.$$construct($$this, $$args);
		}
	}

	//construct
	Point.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Point.$$cinit !== undefined) Point.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Point', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Point, '_x', Point.prototype.$$v._x);
		Object.defineProperty($$this.$$Point, '_y', Point.prototype.$$v._y);

		//initialize properties
		Point.$$iinit($$this);

		//call constructor
		if (args !== undefined) Point.$$constructor.apply($$this, args);
	});

	//initializer
	Point.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Point.$$p._x = $es4.$$coerce(undefined, Number);
		$$this.$$Point.$$p._y = $es4.$$coerce(undefined, Number);
	
	});

	//constructor
	Point.$$constructor = (function ($$$$x, $$$$y)
	{
		var $$this = this;
		//set default parameter values
		var x = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$x, Number);
		var y = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$y, Number);

		$$this.$$Point._x = x;
		$$this.$$Point._y = y;
	});

	return $es4.$$class(Point, null, 'flash.geom::Point');
})();
//flash.geom.Point


//flash.geom.Rectangle
$es4.$$package('flash.geom').Rectangle = (function ()
{
	//imports
	var Point;
	var Rectangle;

	//class pre initializer
	Rectangle.$$sinit = (function ()
	{
		Rectangle.$$sinit = undefined;

		//initialize imports
		Point = $es4.$$['flash.geom'].Point;

		//set prototype and constructor
		Rectangle.prototype = Object.create(Object.prototype);
		Object.defineProperty(Rectangle.prototype, "constructor", { value: Rectangle, enumerable: false });

		//hold private values
		Object.defineProperty(Rectangle.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Rectangle.prototype, 'clone', {
		get:function ()
		{
			var $$this = this;

			function clone()
			{
				return $es4.$$coerce($es4.$$primitive(new Rectangle($$this.x, $$this.y, $$this.width, $$this.height)), $es4.$$['flash.geom'].Rectangle);
			}

			return $$this.$$Rectangle.$$clone || ($$this.$$Rectangle.$$clone = clone);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'contains', {
		get:function ()
		{
			var $$this = this;

			function contains($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				return $es4.$$coerce($$this.x <= x && x <= $$this.right && $$this.y <= y && y <= $$this.bottom, Boolean);
			}

			return $$this.$$Rectangle.$$contains || ($$this.$$Rectangle.$$contains = contains);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'containsPoint', {
		get:function ()
		{
			var $$this = this;

			function containsPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				return $$this.contains(point.x, point.y);
			}

			return $$this.$$Rectangle.$$containsPoint || ($$this.$$Rectangle.$$containsPoint = containsPoint);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'containsRect', {
		get:function ()
		{
			var $$this = this;

			function containsRect($$$$rect)
			{
				//set default parameter values
				var rect = $es4.$$coerce($$$$rect, $es4.$$['flash.geom'].Rectangle);

				return $$this.containsPoint(rect.topLeft) && $$this.containsPoint(rect.bottomRight);
			}

			return $$this.$$Rectangle.$$containsRect || ($$this.$$Rectangle.$$containsRect = containsRect);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'copyFrom', {
		get:function ()
		{
			var $$this = this;

			function copyFrom($$$$sourceRect)
			{
				//set default parameter values
				var sourceRect = $es4.$$coerce($$$$sourceRect, $es4.$$['flash.geom'].Rectangle);

				throw $es4.$$primitive(new Error('Rectangle: attempted call to an unimplemented function "copyFrom"'));
			}

			return $$this.$$Rectangle.$$copyFrom || ($$this.$$Rectangle.$$copyFrom = copyFrom);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'equals', {
		get:function ()
		{
			var $$this = this;

			function equals($$$$toCompare)
			{
				//set default parameter values
				var toCompare = $es4.$$coerce($$$$toCompare, $es4.$$['flash.geom'].Rectangle);

				return $es4.$$coerce($$this.x == toCompare.x && $$this.y == toCompare.y && $$this.width == toCompare.width && $$this.height == toCompare.height, Boolean);
			}

			return $$this.$$Rectangle.$$equals || ($$this.$$Rectangle.$$equals = equals);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'inflate', {
		get:function ()
		{
			var $$this = this;

			function inflate($$$$dx, $$$$dy)
			{
				//set default parameter values
				var dx = $es4.$$coerce($$$$dx, Number);
				var dy = $es4.$$coerce($$$$dy, Number);

				$$this.x -= dx;
				$$this.y -= dy;
				$$this.width += (dx * 2);
				$$this.height += (dy * 2);
			}

			return $$this.$$Rectangle.$$inflate || ($$this.$$Rectangle.$$inflate = inflate);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'inflatePoint', {
		get:function ()
		{
			var $$this = this;

			function inflatePoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				$$this.inflate(point.x, point.y);
			}

			return $$this.$$Rectangle.$$inflatePoint || ($$this.$$Rectangle.$$inflatePoint = inflatePoint);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'intersection', {
		get:function ()
		{
			var $$this = this;

			function intersection($$$$toIntersect)
			{
				//set default parameter values
				var toIntersect = $es4.$$coerce($$$$toIntersect, $es4.$$['flash.geom'].Rectangle);

				var x = Math.max($$this.x, toIntersect.x);
				var right = Math.min($$this.right, toIntersect.right);
				if (x <= right)
				{
					var y = Math.max($$this.y, toIntersect.y);
					var bottom = Math.min($$this.bottom, toIntersect.bottom);
					if (y <= bottom)
					{
						return $es4.$$coerce($es4.$$primitive(new Rectangle(x, y, right - x, bottom - y)), $es4.$$['flash.geom'].Rectangle);
					}
				}
				return $es4.$$coerce($es4.$$primitive(new Rectangle()), $es4.$$['flash.geom'].Rectangle);
			}

			return $$this.$$Rectangle.$$intersection || ($$this.$$Rectangle.$$intersection = intersection);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'intersects', {
		get:function ()
		{
			var $$this = this;

			function intersects($$$$toIntersect)
			{
				//set default parameter values
				var toIntersect = $es4.$$coerce($$$$toIntersect, $es4.$$['flash.geom'].Rectangle);

				return $es4.$$coerce(Math.max($$this.x, toIntersect.x) <= Math.min($$this.right, toIntersect.right) && Math.max($$this.y, toIntersect.y) <= Math.min($$this.bottom, toIntersect.bottom), Boolean);
			}

			return $$this.$$Rectangle.$$intersects || ($$this.$$Rectangle.$$intersects = intersects);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'isEmpty', {
		get:function ()
		{
			var $$this = this;

			function isEmpty()
			{
				return $es4.$$coerce($$this.x == 0 && $$this.y == 0 && $$this.width == 0 && $$this.height == 0, Boolean);
			}

			return $$this.$$Rectangle.$$isEmpty || ($$this.$$Rectangle.$$isEmpty = isEmpty);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'offset', {
		get:function ()
		{
			var $$this = this;

			function offset($$$$dx, $$$$dy)
			{
				//set default parameter values
				var dx = $es4.$$coerce($$$$dx, Number);
				var dy = $es4.$$coerce($$$$dy, Number);

				$$this.x += dx;
				$$this.y += dy;
			}

			return $$this.$$Rectangle.$$offset || ($$this.$$Rectangle.$$offset = offset);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'offsetPoint', {
		get:function ()
		{
			var $$this = this;

			function offsetPoint($$$$point)
			{
				//set default parameter values
				var point = $es4.$$coerce($$$$point, Point);

				$$this.offset(point.x, point.y);
			}

			return $$this.$$Rectangle.$$offsetPoint || ($$this.$$Rectangle.$$offsetPoint = offsetPoint);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'setEmpty', {
		get:function ()
		{
			var $$this = this;

			function setEmpty()
			{
				$$this.x = $$this.y = $$this.width = $$this.height = 0;
			}

			return $$this.$$Rectangle.$$setEmpty || ($$this.$$Rectangle.$$setEmpty = setEmpty);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'setTo', {
		get:function ()
		{
			var $$this = this;

			function setTo($$$$xa, $$$$ya, $$$$widtha, $$$$heighta)
			{
				//set default parameter values
				var xa = $es4.$$coerce($$$$xa, Number);
				var ya = $es4.$$coerce($$$$ya, Number);
				var widtha = $es4.$$coerce($$$$widtha, Number);
				var heighta = $es4.$$coerce($$$$heighta, Number);

				throw $es4.$$primitive(new Error('Rectangle: attempted call to an unimplemented function "setTo"'));
			}

			return $$this.$$Rectangle.$$setTo || ($$this.$$Rectangle.$$setTo = setTo);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return '(x=' + $$this.x + ', y=' + $$this.y + ', w=' + $$this.width + ', h=' + $$this.height + ')';
			}

			return $$this.$$Rectangle.$$toString || ($$this.$$Rectangle.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(Rectangle.prototype, 'union', {
		get:function ()
		{
			var $$this = this;

			function union($$$$toUnion)
			{
				//set default parameter values
				var toUnion = $es4.$$coerce($$$$toUnion, $es4.$$['flash.geom'].Rectangle);

				if (toUnion.width === 0 || toUnion.height === 0)
				{
					return $$this.clone();
				}
				if ($$this.width === 0 || $$this.height === 0)
				{
					return toUnion.clone();
				}
				var x = Math.min($$this.x, toUnion.x);
				var y = Math.min($$this.y, toUnion.y);
				return $es4.$$coerce($es4.$$primitive(new Rectangle(x, y, Math.max($$this.right, toUnion.right) - x, Math.max($$this.bottom, toUnion.bottom) - y)), $es4.$$['flash.geom'].Rectangle);
			}

			return $$this.$$Rectangle.$$union || ($$this.$$Rectangle.$$union = union);
		}});

		Object.defineProperty(Rectangle.prototype, 'bottom', {get:function ()
		{
			var $$this = this;
			return $$this.y + $$this.height;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.height = Math.max(value - $$this.y, 0);
		}});
		Object.defineProperty(Rectangle.prototype, 'bottomRight', {get:function ()
		{
			var $$this = this;
			return $es4.$$primitive(new Point($$this.right, $$this.bottom));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Point);

			var $$this = this;
			$$this.right = value.x;
			$$this.bottom = value.y;
		}});
		Object.defineProperty(Rectangle.prototype, 'left', {get:function ()
		{
			var $$this = this;
			return $$this.x;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.width += $$this.x - value;
			$$this.x = value;
		}});
		Object.defineProperty(Rectangle.prototype, 'right', {get:function ()
		{
			var $$this = this;
			return $$this.x + $$this.width;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.width = value - $$this.x;
		}});
		Object.defineProperty(Rectangle.prototype, 'size', {get:function ()
		{
			var $$this = this;
			return $es4.$$primitive(new Point($$this.width, $$this.height));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Point);

			var $$this = this;
			$$this.width = value.x;
			$$this.height = value.y;
		}});
		Object.defineProperty(Rectangle.prototype, 'top', {get:function ()
		{
			var $$this = this;
			return $$this.y;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.height += $$this.y - value;
			$$this.y = value;
		}});
		Object.defineProperty(Rectangle.prototype, 'topLeft', {get:function ()
		{
			var $$this = this;
			return $es4.$$primitive(new Point($$this.x, $$this.y));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Point);

			var $$this = this;
			$$this.left = value.x;
			$$this.top = value.y;
		}});

		//properties
		Object.defineProperty(Rectangle.prototype, 'height', {
		get:function () { var $$this = this; return $$this.$$Rectangle.height; },
		set:function (value) { var $$this = this; $$this.$$Rectangle.height = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Rectangle.prototype, 'width', {
		get:function () { var $$this = this; return $$this.$$Rectangle.width; },
		set:function (value) { var $$this = this; $$this.$$Rectangle.width = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Rectangle.prototype, 'x', {
		get:function () { var $$this = this; return $$this.$$Rectangle.x; },
		set:function (value) { var $$this = this; $$this.$$Rectangle.x = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Rectangle.prototype, 'y', {
		get:function () { var $$this = this; return $$this.$$Rectangle.y; },
		set:function (value) { var $$this = this; $$this.$$Rectangle.y = $es4.$$coerce(value, Number); }
		});

	});

	//class initializer
	Rectangle.$$cinit = (function ()
	{
		Rectangle.$$cinit = undefined;
	});

	function Rectangle()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Rectangle) || $$this.$$Rectangle !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Rectangle) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Rectangle.$$construct($$this, $$args);
		}
	}

	//construct
	Rectangle.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Rectangle.$$cinit !== undefined) Rectangle.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Rectangle', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Rectangle.$$iinit($$this);

		//call constructor
		if (args !== undefined) Rectangle.$$constructor.apply($$this, args);
	});

	//initializer
	Rectangle.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Rectangle.height = $es4.$$coerce(undefined, Number);
		$$this.$$Rectangle.width = $es4.$$coerce(undefined, Number);
		$$this.$$Rectangle.x = $es4.$$coerce(undefined, Number);
		$$this.$$Rectangle.y = $es4.$$coerce(undefined, Number);
	
	});

	//constructor
	Rectangle.$$constructor = (function ($$$$x, $$$$y, $$$$width, $$$$height)
	{
		var $$this = this;
		//set default parameter values
		var x = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$x, Number);
		var y = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$y, Number);
		var width = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$width, Number);
		var height = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$height, Number);

		$$this.x = x;
		$$this.y = y;
		$$this.width = width;
		$$this.height = height;
	});

	return $es4.$$class(Rectangle, null, 'flash.geom::Rectangle');
})();
//flash.geom.Rectangle


//flash.geom.Transform
$es4.$$package('flash.geom').Transform = (function ()
{
	//imports
	var DisplayObject;
	var ColorTransform;
	var Matrix;
	var Matrix3D;
	var PerspectiveProjection;
	var Rectangle;

	//class pre initializer
	Transform.$$sinit = (function ()
	{
		Transform.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		ColorTransform = $es4.$$['flash.geom'].ColorTransform;
		Matrix = $es4.$$['flash.geom'].Matrix;
		Matrix3D = $es4.$$['flash.geom'].Matrix3D;
		PerspectiveProjection = $es4.$$['flash.geom'].PerspectiveProjection;
		Rectangle = $es4.$$['flash.geom'].Rectangle;

		//set prototype and constructor
		Transform.prototype = Object.create(Object.prototype);
		Object.defineProperty(Transform.prototype, "constructor", { value: Transform, enumerable: false });

		//hold private values
		Object.defineProperty(Transform.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Transform.prototype, 'getRelativeMatrix3D', {
		get:function ()
		{
			var $$this = this;

			function getRelativeMatrix3D($$$$relativeTo)
			{
				//set default parameter values
				var relativeTo = $es4.$$coerce($$$$relativeTo, DisplayObject);

				throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "getRelativeMatrix3D"'));
			}

			return $$this.$$Transform.$$getRelativeMatrix3D || ($$this.$$Transform.$$getRelativeMatrix3D = getRelativeMatrix3D);
		}});

		Object.defineProperty(Transform.prototype, 'colorTransform', {get:function ()
		{
			var $$this = this;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, ColorTransform);

			var $$this = this;
		}});
		Object.defineProperty(Transform.prototype, 'concatenatedColorTransform', {get:function ()
		{
			var $$this = this;
		}});
		Object.defineProperty(Transform.prototype, 'concatenatedMatrix', {get:function ()
		{
			var $$this = this;
			var concMatrix = $es4.$$coerce($$this.$$Transform._displayObject.$__properties().DisplayObjectScope.$_matrix, Matrix);
			var currentDO = $$this.$$Transform._displayObject.parent;
			while (currentDO)
			{
				concMatrix.concat(currentDO.transform.matrix);
				currentDO = currentDO.parent;
			}
			return concMatrix;
		}});
		Object.defineProperty(Transform.prototype, 'matrix', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Transform._displayObject.$__properties().DisplayObjectScope.$_matrix.clone(), Matrix);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Matrix);

			var $$this = this;
		}});
		Object.defineProperty(Transform.prototype, 'matrix3D', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "matrix3D"'));
		}, set:function ($$$$m)
		{
			//set default parameter values
			var m = $es4.$$coerce($$$$m, Matrix3D);

			var $$this = this;
			throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "matrix3D"'));
		}});
		Object.defineProperty(Transform.prototype, 'perspectiveProjection', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "perspectiveProjection"'));
		}, set:function ($$$$pm)
		{
			//set default parameter values
			var pm = $es4.$$coerce($$$$pm, PerspectiveProjection);

			var $$this = this;
			throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "perspectiveProjection"'));
		}});
		Object.defineProperty(Transform.prototype, 'pixelBounds', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Transform: attempted call to an unimplemented function "pixelBounds"'));
		}});

		//properties
		Transform.prototype.$$v._displayObject = {
		get:function () { var $$this = this.$$this; return $$this.$$Transform.$$p._displayObject; },
		set:function (value) { var $$this = this.$$this; $$this.$$Transform.$$p._displayObject = $es4.$$coerce(value, DisplayObject); }
		};

	});

	//class initializer
	Transform.$$cinit = (function ()
	{
		Transform.$$cinit = undefined;
	});

	function Transform()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Transform) || $$this.$$Transform !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Transform) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Transform.$$construct($$this, $$args);
		}
	}

	//construct
	Transform.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Transform.$$cinit !== undefined) Transform.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Transform', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Transform, '_displayObject', Transform.prototype.$$v._displayObject);

		//initialize properties
		Transform.$$iinit($$this);

		//call constructor
		if (args !== undefined) Transform.$$constructor.apply($$this, args);
	});

	//initializer
	Transform.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Transform.$$p._displayObject = $es4.$$coerce(undefined, DisplayObject);
	
	});

	//constructor
	Transform.$$constructor = (function ($$$$displayObject)
	{
		var $$this = this;
		//set default parameter values
		var displayObject = $es4.$$coerce($$$$displayObject, DisplayObject);

		$$this.$$Transform._displayObject = displayObject;
	});

	return $es4.$$class(Transform, null, 'flash.geom::Transform');
})();
//flash.geom.Transform


//flash.geom.Utils3D
$$package('flash.geom').Utils3D = function () { throw new Error('Use of unimplemented class: Utils3D'); }
//flash.geom.Utils3D


//flash.geom.Vector3D
$$package('flash.geom').Vector3D = function () { throw new Error('Use of unimplemented class: Vector3D'); }
//flash.geom.Vector3D


//flash.globalization.Collator
$$package('flash.globalization').Collator = function () { throw new Error('Use of unimplemented class: Collator'); }
//flash.globalization.Collator


//flash.globalization.CollatorMode
$$package('flash.globalization').CollatorMode = function () { throw new Error('Use of unimplemented class: CollatorMode'); }
//flash.globalization.CollatorMode


//flash.globalization.CurrencyFormatter
$$package('flash.globalization').CurrencyFormatter = function () { throw new Error('Use of unimplemented class: CurrencyFormatter'); }
//flash.globalization.CurrencyFormatter


//flash.globalization.CurrencyParseResult
$$package('flash.globalization').CurrencyParseResult = function () { throw new Error('Use of unimplemented class: CurrencyParseResult'); }
//flash.globalization.CurrencyParseResult


//flash.globalization.DateTimeFormatter
$$package('flash.globalization').DateTimeFormatter = function () { throw new Error('Use of unimplemented class: DateTimeFormatter'); }
//flash.globalization.DateTimeFormatter


//flash.globalization.DateTimeNameContext
$$package('flash.globalization').DateTimeNameContext = function () { throw new Error('Use of unimplemented class: DateTimeNameContext'); }
//flash.globalization.DateTimeNameContext


//flash.globalization.DateTimeNameStyle
$$package('flash.globalization').DateTimeNameStyle = function () { throw new Error('Use of unimplemented class: DateTimeNameStyle'); }
//flash.globalization.DateTimeNameStyle


//flash.globalization.DateTimeStyle
$$package('flash.globalization').DateTimeStyle = function () { throw new Error('Use of unimplemented class: DateTimeStyle'); }
//flash.globalization.DateTimeStyle


//flash.globalization.LastOperationStatus
$$package('flash.globalization').LastOperationStatus = function () { throw new Error('Use of unimplemented class: LastOperationStatus'); }
//flash.globalization.LastOperationStatus


//flash.globalization.LocaleID
$$package('flash.globalization').LocaleID = function () { throw new Error('Use of unimplemented class: LocaleID'); }
//flash.globalization.LocaleID


//flash.globalization.NationalDigitsType
$$package('flash.globalization').NationalDigitsType = function () { throw new Error('Use of unimplemented class: NationalDigitsType'); }
//flash.globalization.NationalDigitsType


//flash.globalization.NumberFormatter
$$package('flash.globalization').NumberFormatter = function () { throw new Error('Use of unimplemented class: NumberFormatter'); }
//flash.globalization.NumberFormatter


//flash.globalization.NumberParseResult
$$package('flash.globalization').NumberParseResult = function () { throw new Error('Use of unimplemented class: NumberParseResult'); }
//flash.globalization.NumberParseResult


//flash.globalization.StringTools
$$package('flash.globalization').StringTools = function () { throw new Error('Use of unimplemented class: StringTools'); }
//flash.globalization.StringTools


//flash.media.Camera
$$package('flash.media').Camera = function () { throw new Error('Use of unimplemented class: Camera'); }
//flash.media.Camera


//flash.media.ID3Info
$$package('flash.media').ID3Info = function () { throw new Error('Use of unimplemented class: ID3Info'); }
//flash.media.ID3Info


//flash.media.Microphone
$es4.$$package('flash.media').Microphone = (function ()
{
	//imports
	var EventDispatcher;
	var SampleDataEvent;
	var StatusEvent;
	var Microphone;
	var SoundTransform;
	var MicrophoneEnhancedOptions;
	var Browser;
	var ByteArray;
	var SoundCodec;

	//class pre initializer
	Microphone.$$sinit = (function ()
	{
		Microphone.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		SampleDataEvent = $es4.$$['flash.events'].SampleDataEvent;
		StatusEvent = $es4.$$['flash.events'].StatusEvent;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		MicrophoneEnhancedOptions = $es4.$$['flash.media'].MicrophoneEnhancedOptions;
		Browser = $es4.$$['browser'].Browser;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		SoundCodec = $es4.$$['flash.media'].SoundCodec;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		Microphone.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(Microphone.prototype, "constructor", { value: Microphone, enumerable: false });

		//hold private values
		Object.defineProperty(Microphone.prototype, '$$v', {value:{}});

		//private instance method
		Microphone.prototype.$$v.$__onStream = {
		get:function ()
		{
			var $$this = this.$$this;

			function $__onStream($$$$stream)
			{
				//set default parameter values
				var stream = $$$$stream;

				var audioContext = Browser.getNewAudioContext();
				var audioInput = audioContext.createMediaStreamSource(stream);
				var bufferSize = 2048;
				var recorder = audioContext.createScriptProcessor(bufferSize, 1, 1);
				recorder.onaudioprocess = recorderProcess;
				audioInput.connect(recorder);
				recorder.connect(audioContext.destination);

				function recorderProcess($$$$event) 
				{
					//set default parameter values
					var event = $$$$event;

					var left = event.inputBuffer.getChannelData(0);
					var byteArray = $es4.$$primitive(new ByteArray());
					byteArray.$__setArrayBuffer(left.buffer);
					$$this.dispatchEvent($es4.$$primitive(new SampleDataEvent(SampleDataEvent.SAMPLE_DATA, false, false, 0, byteArray)));
				}
;

				$$this.dispatchEvent($es4.$$primitive(new StatusEvent(StatusEvent.STATUS, false, false, 'Microphone.Unmuted', '')));
			}

			return $$this.$$Microphone.$$p.$$$__onStream || ($$this.$$Microphone.$$p.$$$__onStream = $__onStream);
		}};


		//private instance method
		Microphone.prototype.$$v.$__onError = {
		get:function ()
		{
			var $$this = this.$$this;

			function $__onError()
			{
				$$this.dispatchEvent($es4.$$primitive(new StatusEvent(StatusEvent.STATUS, false, false, 'Microphone.Muted', '')));
			}

			return $$this.$$Microphone.$$p.$$$__onError || ($$this.$$Microphone.$$p.$$$__onError = $__onError);
		}};


		//public instance method
		Object.defineProperty(Microphone.prototype, 'setLoopBack', {
		get:function ()
		{
			var $$this = this;

			function setLoopBack($$$$state)
			{
				//set default parameter values
				var state = (0 > arguments.length - 1) ? true : $es4.$$coerce($$$$state, Boolean);

				throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "setLoopBack"'));
			}

			return $$this.$$Microphone.$$setLoopBack || ($$this.$$Microphone.$$setLoopBack = setLoopBack);
		}});


		//public instance method
		Object.defineProperty(Microphone.prototype, 'setSilenceLevel', {
		get:function ()
		{
			var $$this = this;

			function setSilenceLevel($$$$silenceLevel, $$$$timeout)
			{
				//set default parameter values
				var silenceLevel = $es4.$$coerce($$$$silenceLevel, Number);
				var timeout = (1 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$timeout, int);

				throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "setSilenceLevel"'));
			}

			return $$this.$$Microphone.$$setSilenceLevel || ($$this.$$Microphone.$$setSilenceLevel = setSilenceLevel);
		}});


		//public instance method
		Object.defineProperty(Microphone.prototype, 'setUseEchoSuppression', {
		get:function ()
		{
			var $$this = this;

			function setUseEchoSuppression($$$$useEchoSuppression)
			{
				//set default parameter values
				var useEchoSuppression = $es4.$$coerce($$$$useEchoSuppression, Boolean);

				throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "setUseEchoSuppression"'));
			}

			return $$this.$$Microphone.$$setUseEchoSuppression || ($$this.$$Microphone.$$setUseEchoSuppression = setUseEchoSuppression);
		}});

		Object.defineProperty(Microphone.prototype, 'activityLevel', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "activityLevel"'));
		}});
		Object.defineProperty(Microphone.prototype, 'codec', {get:function ()
		{
			var $$this = this;
			return $$this.$$Microphone._codec;
		}, set:function ($$$$codec)
		{
			//set default parameter values
			var codec = $es4.$$coerce($$$$codec, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "codec"'));
		}});
		Object.defineProperty(Microphone.prototype, 'enableVAD', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "enableVAD"'));
		}, set:function ($$$$enable)
		{
			//set default parameter values
			var enable = $es4.$$coerce($$$$enable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "enableVAD"'));
		}});
		Object.defineProperty(Microphone.prototype, 'encodeQuality', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "encodeQuality"'));
		}, set:function ($$$$quality)
		{
			//set default parameter values
			var quality = $es4.$$coerce($$$$quality, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "encodeQuality"'));
		}});
		Object.defineProperty(Microphone.prototype, 'enhancedOptions', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "enhancedOptions"'));
		}, set:function ($$$$options)
		{
			//set default parameter values
			var options = $es4.$$coerce($$$$options, MicrophoneEnhancedOptions);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "enhancedOptions"'));
		}});
		Object.defineProperty(Microphone.prototype, 'framesPerPacket', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "framesPerPacket"'));
		}, set:function ($$$$frames)
		{
			//set default parameter values
			var frames = $es4.$$coerce($$$$frames, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "framesPerPacket"'));
		}});
		Object.defineProperty(Microphone.prototype, 'gain', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "gain"'));
		}, set:function ($$$$gain)
		{
			//set default parameter values
			var gain = $es4.$$coerce($$$$gain, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "gain"'));
		}});
		Object.defineProperty(Microphone.prototype, 'index', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "index"'));
		}});
		Object.defineProperty(Microphone.prototype, 'muted', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "muted"'));
		}});
		Object.defineProperty(Microphone.prototype, 'name', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "name"'));
		}});
		Object.defineProperty(Microphone.prototype, 'noiseSuppressionLevel', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "noiseSuppressionLevel"'));
		}, set:function ($$$$level)
		{
			//set default parameter values
			var level = $es4.$$coerce($$$$level, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "noiseSuppressionLevel"'));
		}});
		Object.defineProperty(Microphone.prototype, 'rate', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "rate"'));
		}, set:function ($$$$rate)
		{
			//set default parameter values
			var rate = $es4.$$coerce($$$$rate, int);

			var $$this = this;
		}});
		Object.defineProperty(Microphone.prototype, 'silenceLevel', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "silenceLevel"'));
		}});
		Object.defineProperty(Microphone.prototype, 'silenceTimeout', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "silenceTimeout"'));
		}});
		Object.defineProperty(Microphone.prototype, 'soundTransform', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "soundTransform"'));
		}, set:function ($$$$sndTransform)
		{
			//set default parameter values
			var sndTransform = $es4.$$coerce($$$$sndTransform, SoundTransform);

			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "soundTransform"'));
		}});
		Object.defineProperty(Microphone.prototype, 'useEchoSuppression', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "useEchoSuppression"'));
		}});

		//properties
		Microphone.prototype.$$v._codec = {
		get:function () { var $$this = this.$$this; return $$this.$$Microphone.$$p._codec; },
		set:function (value) { var $$this = this.$$this; $$this.$$Microphone.$$p._codec = $es4.$$coerce(value, String); }
		};

	});

	//class initializer
	Microphone.$$cinit = (function ()
	{
		Microphone.$$cinit = undefined;
	});

	//public static method
	Microphone.getEnhancedMicrophone = (function ($$$$index)
	{
		if (Microphone.$$cinit !== undefined) Microphone.$$cinit();

		//set default parameter values
		var index = (0 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$index, int);

		throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "getEnhancedMicrophone"'));
	});

	//public static method
	Microphone.getMicrophone = (function ($$$$index)
	{
		if (Microphone.$$cinit !== undefined) Microphone.$$cinit();

		//set default parameter values
		var index = (0 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$index, int);

		var navigator = Browser.getWindow().navigator;
		navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);
		var microphone = $es4.$$primitive(new Microphone());
		navigator.getUserMedia({audio:true, video:false}, microphone.$__onStream, microphone.$__onError);
		return $es4.$$coerce(microphone, $es4.$$['flash.media'].Microphone);
	});
	Object.defineProperty(Microphone, 'isSupported', {get:function ()
	{
		if (Microphone.$$cinit !== undefined) Microphone.$$cinit();

		throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "isSupported"'));
	}});
	Object.defineProperty(Microphone, 'names', {get:function ()
	{
		if (Microphone.$$cinit !== undefined) Microphone.$$cinit();

		throw $es4.$$primitive(new Error('Microphone: attempted call to an unimplemented function "names"'));
	}});

	function Microphone()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Microphone) || $$this.$$Microphone !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Microphone) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Microphone.$$construct($$this, $$args);
		}
	}

	//construct
	Microphone.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Microphone.$$cinit !== undefined) Microphone.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Microphone', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Microphone, '_codec', Microphone.prototype.$$v._codec);

		//private instance method
		Object.defineProperty($$this.$$Microphone, '$__onStream', Microphone.prototype.$$v.$__onStream);

		//private instance method
		Object.defineProperty($$this.$$Microphone, '$__onError', Microphone.prototype.$$v.$__onError);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		Microphone.$$iinit($$this);

		//call constructor
		if (args !== undefined) Microphone.$$constructor.apply($$this, args);
	});

	//initializer
	Microphone.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Microphone.$$p._codec = $es4.$$coerce(SoundCodec.NELLYMOSER, String);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	Microphone.$$constructor = (function ()
	{
		var $$this = this;

		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(Microphone, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.media::Microphone');
})();
//flash.media.Microphone


//flash.media.MicrophoneEnhancedOptions
$$package('flash.media').MicrophoneEnhancedOptions = function () { throw new Error('Use of unimplemented class: MicrophoneEnhancedOptions'); }
//flash.media.MicrophoneEnhancedOptions


//flash.media.Sound
$es4.$$package('flash.media').Sound = (function ()
{
	//imports
	var Event;
	var EventDispatcher;
	var ProgressEvent;
	var ID3Info;
	var SoundChannel;
	var SoundLoaderContext;
	var SoundTransform;
	var URLRequest;
	var ByteArray;
	var Browser;

	//class pre initializer
	Sound.$$sinit = (function ()
	{
		Sound.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		ProgressEvent = $es4.$$['flash.events'].ProgressEvent;
		ID3Info = $es4.$$['flash.media'].ID3Info;
		SoundChannel = $es4.$$['flash.media'].SoundChannel;
		SoundLoaderContext = $es4.$$['flash.media'].SoundLoaderContext;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		URLRequest = $es4.$$['flash.net'].URLRequest;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Browser = $es4.$$['browser'].Browser;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		Sound.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(Sound.prototype, "constructor", { value: Sound, enumerable: false });

		//hold private values
		Object.defineProperty(Sound.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Sound.prototype, 'load', {
		get:function ()
		{
			var $$this = this;

			function load($$$$stream, $$$$context)
			{
				//set default parameter values
				var stream = $es4.$$coerce($$$$stream, URLRequest);
				var context = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$context, SoundLoaderContext);

				if (!stream || !stream.url)
				{
					throw $es4.$$primitive(new TypeError('stream or stream.url is null'));
				}
				if ($$this.$_xmlHttpRequest)
				{
					throw $es4.$$primitive(new Error('Sound: load in progress'));
				}
				$$this.$_stream = stream;
				var onLoad = $es4.$$coerce(function ($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

					if (!$$this.$_xmlHttpRequest)
					{
						return;
					}
					trace('sound loaded');
					var arrayBuffer = $$this.$_xmlHttpRequest.response;
					$$this.$_xmlHttpRequest.onprogress = null;
					$$this.$_xmlHttpRequest.onload = null;
					$$this.$_xmlHttpRequest = null;
					if (window.AudioContext !== undefined || window.webkitAudioContext !== undefined)
					{
						var audioContext = Browser.getNewAudioContext();
						if (audioContext)
						{
							trace('audio context found');
							$$this.$__audioContext = audioContext;
							audioContext.decodeAudioData(arrayBuffer, $$this.$$Sound.onDecodeAudioDataSuccess, $$this.$$Sound.onDecodeAudioDataFailure);
							return;
						}
					}
					$$this.$$Sound.calculateDuration(arrayBuffer);
					$$this.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
				}
, Function);
				var onProgress = $es4.$$coerce(function ($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

					if (!event.lengthComputable)
					{
						return;
					}
					$$this.$_bytesLoaded = event.loaded;
					$$this.$_bytesTotal = event.total;
					$$this.dispatchEvent($es4.$$primitive(new ProgressEvent(ProgressEvent.PROGRESS, false, false, $$this.$_bytesLoaded, $$this.$_bytesTotal)));
				}
, Function);
				trace('loading sound');
				$$this.$_xmlHttpRequest = Browser.getNewXMLHttpRequest();
				$$this.$_xmlHttpRequest.onload = onLoad;
				$$this.$_xmlHttpRequest.onprogress = onProgress;
				$$this.$_xmlHttpRequest.open('GET', stream.url, true);
				$$this.$_xmlHttpRequest.responseType = 'arraybuffer';
				$$this.$_xmlHttpRequest.overrideMimeType('text/plain; charset=x-user-defined');
				$$this.$_xmlHttpRequest.send(null);
			}

			return $$this.$$Sound.$$load || ($$this.$$Sound.$$load = load);
		}});


		//private instance method
		Sound.prototype.$$v.calculateDuration = {
		get:function ()
		{
			var $$this = this.$$this;

			function calculateDuration($$$$arrayBuffer)
			{
				//set default parameter values
				var arrayBuffer = $es4.$$coerce($$$$arrayBuffer, Object);

				var bytes = Browser.getNewUint8Array(arrayBuffer);
				var bytesOffset = 0;
				if (bytes[0] == 73 && bytes[1] == 68 && bytes[2] == 51)
				{
					if (bytes[3] != 3)
					{
						throw $es4.$$primitive(new Error('invalid mp3 id3 major format, expected 3, got: ' + bytes[3]));
					}
					bytesOffset = $es4.$$coerce((bytes[6] * 2097152 + bytes[7] * 16384 + bytes[8] * 128 + bytes[9]) + 10, int);
				}
				var preFrameSyncBytesOffset = bytesOffset;
				var byte2 = $es4.$$coerce(bytes[bytesOffset + 1], int);
				if (bytes[bytesOffset++] != 255)
				{
					throw $es4.$$primitive(new Error('invalid mp3 format. please use cbr mp3s, only'));
				}
				var version = $es4.$$coerce((bytes[bytesOffset] & 24) >> 3, int);
				var layer = $es4.$$coerce((bytes[bytesOffset] & 6) >> 1, int);
				bytesOffset++;
				var bitrateIndex = $es4.$$coerce(bytes[bytesOffset] >> 4, int);
				var bitrateLookupTable = [0, 0, 0, 0, 0, 32, 32, 32, 32, 8, 64, 48, 40, 48, 16, 96, 56, 48, 56, 24, 128, 64, 56, 64, 32, 160, 80, 64, 80, 40, 192, 96, 80, 96, 48, 224, 112, 96, 112, 56, 256, 128, 112, 128, 64, 288, 160, 128, 144, 80, 320, 192, 160, 160, 96, 352, 224, 192, 176, 112, 384, 256, 224, 192, 128, 416, 320, 256, 224, 144, 448, 384, 320, 256, 160, 0, 0, 0, 0, 0];
				var row = (bitrateIndex * 5);
				var column = 0;
				if (version == 3 && layer == 3)
				{
					column = 0;
				}
				else if (version == 3 && layer == 2)
				{
					column = 1;
				}
				else if (version == 3 && layer == 1)
				{
					column = 2;
				}
				else if ((version == 2 || version == 0) && layer == 3)
				{
					column = 3;
				}
				else if ((version == 2 || version == 0) && (layer == 2 || layer == 1))
				{
					column = 4;
				}
				else
				{
					throw $es4.$$primitive(new Error('invalid mp3 given'));
				}
				if (!bitrateLookupTable[row + column])
				{
					throw $es4.$$primitive(new Error('invalid mp3 given'));
				}
				var bitrate = $es4.$$coerce(bitrateLookupTable[row + column], int);
				var samplerateIndex = $es4.$$coerce((bytes[bytesOffset] & 12) >> 2, int);
				var samplerateLookupTable = [44100, 22050, 11025, 48000, 24000, 12000, 32000, 16000, 8000, 0, 0, 0];
				row = (samplerateIndex * 3);
				if (version == 3)
				{
					column = 0;
				}
				else if (version == 2)
				{
					column = 1;
				}
				else if (version == 0)
				{
					column = 2;
				}
				else
				{
					throw $es4.$$primitive(new Error('invalid mp3 given'));
				}
				if (!samplerateLookupTable[row + column])
				{
					throw $es4.$$primitive(new Error('invalid mp3 given'));
				}
				var samplerate = $es4.$$coerce(samplerateLookupTable[row + column], int);
				var framesamplesLookupTable = [0, 576, 1152, 384, 0, 0, 0, 0, 0, 576, 1152, 384, 0, 1152, 1152, 384];
				var framesamples = $es4.$$coerce(framesamplesLookupTable[(version * 4) + layer], int);
				var slotSizeLookupTable = [0, 1, 1, 4];
				var baseFrameSize = $es4.$$coerce(Math.floor((((framesamples / 8) * (bitrate * 1000)) / samplerate)), int);
				bytesOffset = preFrameSyncBytesOffset;
				var byteOffset = bytesOffset;
				var frames = 0;
				while (bytes[byteOffset] == 255 && bytes[byteOffset + 1] == byte2)
				{
					frames++;
					var pad = $es4.$$coerce((bytes[byteOffset + 2] & 2) >> 1, int);
					var frameSize = $es4.$$coerce(baseFrameSize + ((pad) ? slotSizeLookupTable[layer] : 0), int);
					byteOffset += frameSize;
				}
				$$this.$_duration = ((framesamples / samplerate) * 1000) * (frames - 1);
				trace('reported audio duration: ' + $$this.$_duration);
			}

			return $$this.$$Sound.$$p.$$calculateDuration || ($$this.$$Sound.$$p.$$calculateDuration = calculateDuration);
		}};


		//private instance method
		Sound.prototype.$$v.onDecodeAudioDataSuccess = {
		get:function ()
		{
			var $$this = this.$$this;

			function onDecodeAudioDataSuccess($$$$buffer)
			{
				//set default parameter values
				var buffer = $$$$buffer;

				trace('audio context decode data success');
				$$this.$__audioSourceBuffer = buffer;
				$$this.$_duration = buffer.duration * 1000;
				$$this.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
			}

			return $$this.$$Sound.$$p.$$onDecodeAudioDataSuccess || ($$this.$$Sound.$$p.$$onDecodeAudioDataSuccess = onDecodeAudioDataSuccess);
		}};


		//private instance method
		Sound.prototype.$$v.onDecodeAudioDataFailure = {
		get:function ()
		{
			var $$this = this.$$this;

			function onDecodeAudioDataFailure($$$$error)
			{
				//set default parameter values
				var error = $$$$error;

				trace("error (decodeAudioData): " + error);
				$$this.$__audioContext = null;
				$$this.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
			}

			return $$this.$$Sound.$$p.$$onDecodeAudioDataFailure || ($$this.$$Sound.$$p.$$onDecodeAudioDataFailure = onDecodeAudioDataFailure);
		}};


		//public instance method
		Object.defineProperty(Sound.prototype, 'play', {
		get:function ()
		{
			var $$this = this;

			function play($$$$startTime, $$$$loops, $$$$sndTransform)
			{
				//set default parameter values
				var startTime = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$startTime, Number);
				var loops = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$loops, int);
				var sndTransform = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$sndTransform, SoundTransform);

				if (!$$this.$_duration)
				{
					throw $es4.$$primitive(new Error('Sound not loaded'));
				}
				return SoundChannel.$__getNewSoundChannel($$this, startTime, loops, sndTransform);
			}

			return $$this.$$Sound.$$play || ($$this.$$Sound.$$play = play);
		}});


		//public instance method
		Object.defineProperty(Sound.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				var soundChannel = $$this.$__soundChannel;
				if (soundChannel)
				{
					soundChannel.stop();
				}
				$$this.$__audioContext = null;
			}

			return $$this.$$Sound.$$close || ($$this.$$Sound.$$close = close);
		}});


		//public instance method
		Object.defineProperty(Sound.prototype, 'extract', {
		get:function ()
		{
			var $$this = this;

			function extract($$$$target, $$$$length, $$$$startPosition)
			{
				//set default parameter values
				var target = $es4.$$coerce($$$$target, ByteArray);
				var length = $es4.$$coerce($$$$length, Number);
				var startPosition = (2 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$startPosition, Number);

				throw $es4.$$primitive(new Error('Sound: attempted call to an unimplemented function "extract"'));
			}

			return $$this.$$Sound.$$extract || ($$this.$$Sound.$$extract = extract);
		}});


		//public instance method
		Object.defineProperty(Sound.prototype, 'loadCompressedDataFromByteArray', {
		get:function ()
		{
			var $$this = this;

			function loadCompressedDataFromByteArray($$$$byteArray, $$$$bytesLength)
			{
				//set default parameter values
				var byteArray = $es4.$$coerce($$$$byteArray, ByteArray);
				var bytesLength = $es4.$$coerce($$$$bytesLength, uint);

				var arrayBuffer = byteArray.$__getArrayBuffer();
				if (window.AudioContext !== undefined || window.webkitAudioContext !== undefined)
				{
					var audioContext = Browser.getNewAudioContext();
					if (audioContext)
					{
						$$this.$__waitForAudioSourceBuffer = true;
						$$this.$__audioContext = audioContext;
						audioContext.decodeAudioData(arrayBuffer, function ($$$$buffer) 
{
					//set default parameter values
					var buffer = $$$$buffer;

	$$this.$__audioSourceBuffer = buffer;
	$$this.$_duration = buffer.duration * 1000;
	var callback = null;
	if ($es4.$$is($$this.$__waitForAudioSourceBuffer, Function))
	{
		callback = $es4.$$coerce($$this.$__waitForAudioSourceBuffer, Function);
	}
	$$this.$__waitForAudioSourceBuffer = false;
	if (callback !== null)
	{
		callback();
	}
}
, function ($$$$error) 
{
					//set default parameter values
					var error = $$$$error;

	trace("error decoding Audio Data: " + error);
}
);
						return;
					}
				}
				$$this.$$Sound.calculateDuration(arrayBuffer);
				var bytes = Browser.getNewUint8Array(arrayBuffer);
				var binary = '';
				var length = $es4.$$coerce(bytes.byteLength, Number);
				if (length != bytesLength)
				{
					throw $es4.$$primitive(new Error('Sound: loadCompressedDataFromByteArray does not support a bytesLength value that differs from the ByteArray length at this time'));
				}
				for (var i = 0; i < length; i++)
				{
					binary += String.fromCharCode(bytes[i]);
				}
				$$this.$__base64String = 'data:audio/mp3;base64,' + window.btoa(binary);
			}

			return $$this.$$Sound.$$loadCompressedDataFromByteArray || ($$this.$$Sound.$$loadCompressedDataFromByteArray = loadCompressedDataFromByteArray);
		}});


		//public instance method
		Object.defineProperty(Sound.prototype, 'loadPCMFromByteArray', {
		get:function ()
		{
			var $$this = this;

			function loadPCMFromByteArray($$$$bytes, $$$$samples, $$$$format, $$$$stereo, $$$$sampleRate)
			{
				//set default parameter values
				var bytes = $es4.$$coerce($$$$bytes, ByteArray);
				var samples = $es4.$$coerce($$$$samples, uint);
				var format = (2 > arguments.length - 1) ? "float" : $es4.$$coerce($$$$format, String);
				var stereo = (3 > arguments.length - 1) ? true : $es4.$$coerce($$$$stereo, Boolean);
				var sampleRate = (4 > arguments.length - 1) ? 44100 : $es4.$$coerce($$$$sampleRate, Number);

				throw $es4.$$primitive(new Error('Sound: attempted call to an unimplemented function "loadPCMFromByteArray"'));
			}

			return $$this.$$Sound.$$loadPCMFromByteArray || ($$this.$$Sound.$$loadPCMFromByteArray = loadPCMFromByteArray);
		}});

		Object.defineProperty(Sound.prototype, 'bytesLoaded', {get:function ()
		{
			var $$this = this;
			return $$this.$_bytesLoaded;
		}});
		Object.defineProperty(Sound.prototype, 'bytesTotal', {get:function ()
		{
			var $$this = this;
			return $$this.$_bytesTotal;
		}});
		Object.defineProperty(Sound.prototype, 'url', {get:function ()
		{
			var $$this = this;
			return $$this.$_stream.url;
		}});
		Object.defineProperty(Sound.prototype, 'id3', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sound: attempted call to an unimplemented function "id3"'));
		}});
		Object.defineProperty(Sound.prototype, 'isBuffering', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sound: attempted call to an unimplemented function "isBuffering"'));
		}});
		Object.defineProperty(Sound.prototype, 'isURLInaccessible', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Sound: attempted call to an unimplemented function "isURLInaccessible"'));
		}});
		Object.defineProperty(Sound.prototype, 'length', {get:function ()
		{
			var $$this = this;
			return $$this.$_duration;
		}});

		//properties
		Object.defineProperty(Sound.prototype, '$_xmlHttpRequest', {
		get:function () { var $$this = this; return $$this.$$Sound.$_xmlHttpRequest; },
		set:function (value) { var $$this = this; $$this.$$Sound.$_xmlHttpRequest = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(Sound.prototype, '$_stream', {
		get:function () { var $$this = this; return $$this.$$Sound.$_stream; },
		set:function (value) { var $$this = this; $$this.$$Sound.$_stream = $es4.$$coerce(value, URLRequest); }
		});

		Object.defineProperty(Sound.prototype, '$_bytesLoaded', {
		get:function () { var $$this = this; return $$this.$$Sound.$_bytesLoaded; },
		set:function (value) { var $$this = this; $$this.$$Sound.$_bytesLoaded = $es4.$$coerce(value, uint); }
		});

		Object.defineProperty(Sound.prototype, '$_bytesTotal', {
		get:function () { var $$this = this; return $$this.$$Sound.$_bytesTotal; },
		set:function (value) { var $$this = this; $$this.$$Sound.$_bytesTotal = $es4.$$coerce(value, int); }
		});

		Object.defineProperty(Sound.prototype, '$_duration', {
		get:function () { var $$this = this; return $$this.$$Sound.$_duration; },
		set:function (value) { var $$this = this; $$this.$$Sound.$_duration = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(Sound.prototype, '$__soundChannel', {
		get:function () { var $$this = this; return $$this.$$Sound.$__soundChannel; },
		set:function (value) { var $$this = this; $$this.$$Sound.$__soundChannel = $es4.$$coerce(value, SoundChannel); }
		});

		Object.defineProperty(Sound.prototype, '$__audioContext', {
		get:function () { var $$this = this; return $$this.$$Sound.$__audioContext; },
		set:function (value) { var $$this = this; $$this.$$Sound.$__audioContext = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(Sound.prototype, '$__audioSourceBuffer', {
		get:function () { var $$this = this; return $$this.$$Sound.$__audioSourceBuffer; },
		set:function (value) { var $$this = this; $$this.$$Sound.$__audioSourceBuffer = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(Sound.prototype, '$__base64String', {
		get:function () { var $$this = this; return $$this.$$Sound.$__base64String; },
		set:function (value) { var $$this = this; $$this.$$Sound.$__base64String = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(Sound.prototype, '$__waitForAudioSourceBuffer', {
		get:function () { var $$this = this; return $$this.$$Sound.$__waitForAudioSourceBuffer; },
		set:function (value) { var $$this = this; $$this.$$Sound.$__waitForAudioSourceBuffer = value }
		});

	});

	//class initializer
	Sound.$$cinit = (function ()
	{
		Sound.$$cinit = undefined;
	});

	function Sound()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Sound) || $$this.$$Sound !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Sound) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Sound.$$construct($$this, $$args);
		}
	}

	//construct
	Sound.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Sound.$$cinit !== undefined) Sound.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Sound', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//private instance method
		Object.defineProperty($$this.$$Sound, 'calculateDuration', Sound.prototype.$$v.calculateDuration);

		//private instance method
		Object.defineProperty($$this.$$Sound, 'onDecodeAudioDataSuccess', Sound.prototype.$$v.onDecodeAudioDataSuccess);

		//private instance method
		Object.defineProperty($$this.$$Sound, 'onDecodeAudioDataFailure', Sound.prototype.$$v.onDecodeAudioDataFailure);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		Sound.$$iinit($$this);

		//call constructor
		if (args !== undefined) Sound.$$constructor.apply($$this, args);
	});

	//initializer
	Sound.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Sound.$_xmlHttpRequest = $es4.$$coerce(undefined, Object);
		$$this.$$Sound.$_stream = $es4.$$coerce(undefined, URLRequest);
		$$this.$$Sound.$_bytesLoaded = $es4.$$coerce(0, uint);
		$$this.$$Sound.$_bytesTotal = $es4.$$coerce(0, int);
		$$this.$$Sound.$_duration = $es4.$$coerce(0, Number);
		$$this.$$Sound.$__soundChannel = $es4.$$coerce(undefined, SoundChannel);
		$$this.$$Sound.$__audioContext = $es4.$$coerce(undefined, Object);
		$$this.$$Sound.$__audioSourceBuffer = $es4.$$coerce(undefined, Object);
		$$this.$$Sound.$__base64String = $es4.$$coerce(undefined, String);
		$$this.$$Sound.$__waitForAudioSourceBuffer = false;
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	Sound.$$constructor = (function ($$$$stream, $$$$context)
	{
		var $$this = this;
		//set default parameter values
		var stream = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$stream, URLRequest);
		var context = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$context, SoundLoaderContext);

		EventDispatcher.$$constructor.call($$this);
		if (stream)
		{
			$$this.load(stream, context);
		}
	});

	return $es4.$$class(Sound, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.media::Sound');
})();
//flash.media.Sound


//flash.media.SoundChannel
$es4.$$package('flash.media').SoundChannel = (function ()
{
	//imports
	var Event;
	var EventDispatcher;
	var Sound;
	var SoundTransform;
	var Browser;
	var clearTimeout;
	var setTimeout;
	var SoundChannel;

	//class pre initializer
	SoundChannel.$$sinit = (function ()
	{
		SoundChannel.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		Sound = $es4.$$['flash.media'].Sound;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		Browser = $es4.$$['browser'].Browser;
		clearTimeout = $es4.$$['flash.utils'].clearTimeout;
		setTimeout = $es4.$$['flash.utils'].setTimeout;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		SoundChannel.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(SoundChannel.prototype, "constructor", { value: SoundChannel, enumerable: false });

		//hold private values
		Object.defineProperty(SoundChannel.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(SoundChannel.prototype, '$_onEndedTimeout', {
		get:function ()
		{
			var $$this = this;

			function $_onEndedTimeout($$$$event)
			{
				//set default parameter values
				var event = $$$$event;

				if (!$$this.$__source)
				{
					return;
				}
				if ($$this.position < $$this.$__sound.length)
				{
					$$this.$_timeoutID = setTimeout($$this.$_onEndedTimeout, 500);
					return;
				}
				trace('soundChannel setTimeout ended');
				$$this.$_onEnded(null);
			}

			return $$this.$$SoundChannel.$$$_onEndedTimeout || ($$this.$$SoundChannel.$$$_onEndedTimeout = $_onEndedTimeout);
		}});


		//public instance method
		Object.defineProperty(SoundChannel.prototype, '$_onEnded', {
		get:function ()
		{
			var $$this = this;

			function $_onEnded($$$$event)
			{
				//set default parameter values
				var event = $$$$event;

				trace('on ended called');
				if (!isNaN($$this.$_timeoutID))
				{
					clearTimeout($$this.$_timeoutID);
				}
				if ($$this.$__source)
				{
					$$this.$__source.removeEventListener('ended', $$this.$_onEnded);
				}
				$$this.dispatchEvent($es4.$$primitive(new Event(Event.SOUND_COMPLETE)));
			}

			return $$this.$$SoundChannel.$$$_onEnded || ($$this.$$SoundChannel.$$$_onEnded = $_onEnded);
		}});


		//public instance method
		Object.defineProperty(SoundChannel.prototype, 'stop', {
		get:function ()
		{
			var $$this = this;

			function stop()
			{
				if ($$this.$__sound && $$this.$__sound.$__audioContext)
				{
					if ($$this.$__source)
					{
						clearTimeout($$this.$_timeoutID);
						$$this.$__source.removeEventListener('ended', $$this.$_onEnded);
						$$this.$__sourcePauseTime = $$this.position;
						$$this.$__source.stop(0);
						$$this.$__gainNode.disconnect();
						$$this.$__source.disconnect();
						$$this.$__source = null;
					}
					return;
				}
				if ($$this.$__audio)
				{
					$$this.$__audio.pause();
				}
			}

			return $$this.$$SoundChannel.$$stop || ($$this.$$SoundChannel.$$stop = stop);
		}});

		Object.defineProperty(SoundChannel.prototype, 'leftPeak', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundChannel: attempted call to an unimplemented function "leftPeak"'));
		}});
		Object.defineProperty(SoundChannel.prototype, 'position', {get:function ()
		{
			var $$this = this;
			if ($$this.$__sound && $$this.$__sound.$__audioContext)
			{
				var position = $es4.$$coerce((($$this.$__source) ? ($$this.$__sound.$__audioContext.currentTime + $$this.$__sourceOffsetTime) - $$this.$__sourceStartTime : $$this.$__sourcePauseTime) * 1000, Number);
				return (position > $$this.$__sound.length) ? $$this.$__sound.length : position;
			}
			return $es4.$$coerce(($$this.$__audio) ? $$this.$__audio.currentTime * 1000 : 0, Number);
		}});
		Object.defineProperty(SoundChannel.prototype, 'rightPeak', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundChannel: attempted call to an unimplemented function "rightPeak"'));
		}});
		Object.defineProperty(SoundChannel.prototype, 'soundTransform', {get:function ()
		{
			var $$this = this;
			return $$this.$__soundTransform;
		}, set:function ($$$$soundTransform)
		{
			//set default parameter values
			var soundTransform = $es4.$$coerce($$$$soundTransform, SoundTransform);

			var $$this = this;
			$$this.$__soundTransform = soundTransform;
			if ($$this.$__sound && $$this.$__sound.$__audioContext)
			{
				$$this.$__gainNode.gain.value = soundTransform.volume;
				return;
			}
			if ($$this.$__audio)
			{
				$$this.$__audio.volume = soundTransform.volume;
			}
		}});

		//properties
		Object.defineProperty(SoundChannel.prototype, '$__gainNode', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__gainNode; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__gainNode = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__audio', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__audio; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__audio = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__sound', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__sound; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__sound = $es4.$$coerce(value, Sound); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__source', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__source; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__source = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__sourceStartTime', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__sourceStartTime; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__sourceStartTime = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__sourcePauseTime', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__sourcePauseTime; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__sourcePauseTime = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__sourceOffsetTime', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__sourceOffsetTime; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__sourceOffsetTime = $es4.$$coerce(value, Number); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__loops', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__loops; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__loops = $es4.$$coerce(value, int); }
		});

		Object.defineProperty(SoundChannel.prototype, '$__soundTransform', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$__soundTransform; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$__soundTransform = $es4.$$coerce(value, SoundTransform); }
		});

		Object.defineProperty(SoundChannel.prototype, '$_timeoutID', {
		get:function () { var $$this = this; return $$this.$$SoundChannel.$_timeoutID; },
		set:function (value) { var $$this = this; $$this.$$SoundChannel.$_timeoutID = $es4.$$coerce(value, Number); }
		});

	});

	//class initializer
	SoundChannel.$$cinit = (function ()
	{
		SoundChannel.$$cinit = undefined;
	});

	//internal static method
	SoundChannel.$__getNewSoundChannel = (function ($$$$sound, $$$$startTime, $$$$loops, $$$$sndTransform)
	{
		if (SoundChannel.$$cinit !== undefined) SoundChannel.$$cinit();

		//set default parameter values
		var sound = $es4.$$coerce($$$$sound, Sound);
		var startTime = $es4.$$coerce($$$$startTime, Number);
		var loops = $es4.$$coerce($$$$loops, int);
		var sndTransform = $es4.$$coerce($$$$sndTransform, SoundTransform);

		trace('getting new sound channel');
		var soundChannel = null;
		var source = null;
		if (sound.$__audioContext && !sound.$__base64String)
		{
			trace('new sound channel via audio context');
			soundChannel = $es4.$$coerce((sound.$__soundChannel) ? sound.$__soundChannel : $es4.$$primitive(new SoundChannel()), $es4.$$['flash.media'].SoundChannel);
			if (sndTransform)
			{
				soundChannel.$__soundTransform = sndTransform;
			}
			soundChannel.$__sound = sound;
			soundChannel.$__loops = loops;
			sound.$__soundChannel = soundChannel;
			if (soundChannel.$__source)
			{
				trace('soundChannel.$__source exists');
				clearTimeout(soundChannel.$_timeoutID);
				soundChannel.$__source.removeEventListener('ended', soundChannel.$_onEnded);
				soundChannel.$__source.stop(0);
				soundChannel.$__gainNode.disconnect();
				soundChannel.$__source.disconnect();
			}
			var callback = $es4.$$coerce(function () 
			{
				source = sound.$__audioContext.createBufferSource();
				source.buffer = sound.$__audioSourceBuffer;
				var gainNode = soundChannel.$__gainNode = sound.$__audioContext.createGain();
				source.connect(gainNode);
				gainNode.connect(sound.$__audioContext.destination);
				gainNode.gain.value = soundChannel.$__soundTransform.volume;
				trace('sample rates: ' + sound.$__audioContext.sampleRate + ', ' + source.buffer.sampleRate);
				trace('duration: ' + source.buffer.duration);
				var time = Math.max(0, Math.min(source.buffer.duration - .001, (startTime - 1) / 1000));
				trace('time: ' + time);
				trace('audio context current time: ' + sound.$__audioContext.currentTime);
				soundChannel.$__sourceStartTime = sound.$__audioContext.currentTime;
				soundChannel.$__sourceOffsetTime = time;
				soundChannel.$__sourcePauseTime = 0;
				soundChannel.$__source = source;
				soundChannel.$_timeoutID = setTimeout(soundChannel.$_onEndedTimeout, sound.length - startTime);
				source.addEventListener('ended', soundChannel.$_onEnded);
				source.start(0, time);
			}
, Function);
			if (sound.$__waitForAudioSourceBuffer)
			{
				sound.$__waitForAudioSourceBuffer = callback;
				return soundChannel;
			}
			callback();
			return soundChannel;
		}
		trace('no AudioContext support. Using standard Audio');
		if (sound.$__soundChannel)
		{
			soundChannel = sound.$__soundChannel;
			if (sndTransform)
			{
				soundChannel.$__soundTransform = sndTransform;
			}
			soundChannel.$__audio.currentTime = startTime / 1000;
			soundChannel.$__audio.play();
			soundChannel.$__audio.volume = soundChannel.$__soundTransform.volume;
			return soundChannel;
		}
		if (startTime)
		{
			trace('SoundChannel: startTime in sound.play is not supported on first call');
		}
		soundChannel = $es4.$$coerce($es4.$$primitive(new SoundChannel()), $es4.$$['flash.media'].SoundChannel);
		if (sndTransform)
		{
			soundChannel.$__soundTransform = sndTransform;
		}
		sound.$__soundChannel = soundChannel;
		soundChannel.$__sound = sound;
		soundChannel.$__audio = Browser.getNewAudio();
		soundChannel.$__audio.src = (sound.$__base64String) ? sound.$__base64String : sound.url;
		soundChannel.$__audio.load();
		soundChannel.$__audio.addEventListener('ended', soundChannel.$_onEnded);
		soundChannel.$__audio.play();
		soundChannel.$__audio.volume = soundChannel.$__soundTransform.volume;
		return soundChannel;
	});
	function SoundChannel()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SoundChannel) || $$this.$$SoundChannel !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SoundChannel) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SoundChannel.$$construct($$this, $$args);
		}
	}

	//construct
	SoundChannel.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SoundChannel.$$cinit !== undefined) SoundChannel.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SoundChannel', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		SoundChannel.$$iinit($$this);

		//call constructor
		if (args !== undefined) SoundChannel.$$constructor.apply($$this, args);
	});

	//initializer
	SoundChannel.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$SoundChannel.$__gainNode = $es4.$$coerce(undefined, Object);
		$$this.$$SoundChannel.$__audio = $es4.$$coerce(undefined, Object);
		$$this.$$SoundChannel.$__sound = $es4.$$coerce(undefined, Sound);
		$$this.$$SoundChannel.$__source = $es4.$$coerce(undefined, Object);
		$$this.$$SoundChannel.$__sourceStartTime = $es4.$$coerce(0, Number);
		$$this.$$SoundChannel.$__sourcePauseTime = $es4.$$coerce(0, Number);
		$$this.$$SoundChannel.$__sourceOffsetTime = $es4.$$coerce(0, Number);
		$$this.$$SoundChannel.$__loops = $es4.$$coerce(0, int);
		$$this.$$SoundChannel.$__soundTransform = $es4.$$coerce($es4.$$primitive(new SoundTransform()), SoundTransform);
		$$this.$$SoundChannel.$_timeoutID = $es4.$$coerce(undefined, Number);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	SoundChannel.$$constructor = (function ()
	{
		var $$this = this;
		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(SoundChannel, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.media::SoundChannel');
})();
//flash.media.SoundChannel


//flash.media.SoundCodec
$es4.$$package('flash.media').SoundCodec = (function ()
{
	//properties
	var $$j = {};
	SoundCodec.NELLYMOSER = "NellyMoser";
	Object.defineProperty(SoundCodec, 'PCMA', {
	get:function () { if (SoundCodec.$$cinit !== undefined) SoundCodec.$$cinit(); return $$j.PCMA; },
	set:function (value) { if (SoundCodec.$$cinit !== undefined) SoundCodec.$$cinit(); $$j.PCMA = $es4.$$coerce(value, String); }
	});

	Object.defineProperty(SoundCodec, 'PCMU', {
	get:function () { if (SoundCodec.$$cinit !== undefined) SoundCodec.$$cinit(); return $$j.PCMU; },
	set:function (value) { if (SoundCodec.$$cinit !== undefined) SoundCodec.$$cinit(); $$j.PCMU = $es4.$$coerce(value, String); }
	});

	SoundCodec.SPEEX = "Speex";

	//class pre initializer
	SoundCodec.$$sinit = (function ()
	{
		SoundCodec.$$sinit = undefined;

		//set prototype and constructor
		SoundCodec.prototype = Object.create(Object.prototype);
		Object.defineProperty(SoundCodec.prototype, "constructor", { value: SoundCodec, enumerable: false });

		//hold private values
		Object.defineProperty(SoundCodec.prototype, '$$v', {value:{}});
	});

	//class initializer
	SoundCodec.$$cinit = (function ()
	{
		SoundCodec.$$cinit = undefined;

		//initialize properties
		$$j.PCMA = $es4.$$coerce(undefined, String);
		$$j.PCMU = $es4.$$coerce(undefined, String);
	
	});

	function SoundCodec()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SoundCodec) || $$this.$$SoundCodec !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SoundCodec) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SoundCodec.$$construct($$this, $$args);
		}
	}

	//construct
	SoundCodec.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SoundCodec.$$cinit !== undefined) SoundCodec.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SoundCodec', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		SoundCodec.$$iinit($$this);

		//call constructor
		if (args !== undefined) SoundCodec.$$constructor.apply($$this, args);
	});

	//initializer
	SoundCodec.$$iinit = (function ($$this)
	{
	});

	//constructor
	SoundCodec.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(SoundCodec, null, 'flash.media::SoundCodec');
})();
//flash.media.SoundCodec


//flash.media.SoundLoaderContext
$$package('flash.media').SoundLoaderContext = function () { throw new Error('Use of unimplemented class: SoundLoaderContext'); }
//flash.media.SoundLoaderContext


//flash.media.SoundMixer
$$package('flash.media').SoundMixer = function () { throw new Error('Use of unimplemented class: SoundMixer'); }
//flash.media.SoundMixer


//flash.media.SoundTransform
$es4.$$package('flash.media').SoundTransform = (function ()
{
	//class pre initializer
	SoundTransform.$$sinit = (function ()
	{
		SoundTransform.$$sinit = undefined;

		//set prototype and constructor
		SoundTransform.prototype = Object.create(Object.prototype);
		Object.defineProperty(SoundTransform.prototype, "constructor", { value: SoundTransform, enumerable: false });

		//hold private values
		Object.defineProperty(SoundTransform.prototype, '$$v', {value:{}});

		Object.defineProperty(SoundTransform.prototype, 'leftToLeft', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "leftToLeft"'));
		}, set:function ($$$$leftToLeft)
		{
			//set default parameter values
			var leftToLeft = $es4.$$coerce($$$$leftToLeft, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "leftToLeft"'));
		}});
		Object.defineProperty(SoundTransform.prototype, 'leftToRight', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "leftToRight"'));
		}, set:function ($$$$leftToRight)
		{
			//set default parameter values
			var leftToRight = $es4.$$coerce($$$$leftToRight, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "leftToRight"'));
		}});
		Object.defineProperty(SoundTransform.prototype, 'pan', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "pan"'));
		}, set:function ($$$$panning)
		{
			//set default parameter values
			var panning = $es4.$$coerce($$$$panning, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "pan"'));
		}});
		Object.defineProperty(SoundTransform.prototype, 'rightToLeft', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "rightToLeft"'));
		}, set:function ($$$$rightToLeft)
		{
			//set default parameter values
			var rightToLeft = $es4.$$coerce($$$$rightToLeft, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "rightToLeft"'));
		}});
		Object.defineProperty(SoundTransform.prototype, 'rightToRight', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "rightToRight"'));
		}, set:function ($$$$rightToRight)
		{
			//set default parameter values
			var rightToRight = $es4.$$coerce($$$$rightToRight, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SoundTransform: attempted call to an unimplemented function "rightToRight"'));
		}});
		Object.defineProperty(SoundTransform.prototype, 'volume', {get:function ()
		{
			var $$this = this;
			return $$this.$$SoundTransform.$_volume;
		}, set:function ($$$$volume)
		{
			//set default parameter values
			var volume = $es4.$$coerce($$$$volume, Number);

			var $$this = this;
			$$this.$$SoundTransform.$_volume = volume;
		}});

		//properties
		SoundTransform.prototype.$$v.$_volume = {
		get:function () { var $$this = this.$$this; return $$this.$$SoundTransform.$$p.$_volume; },
		set:function (value) { var $$this = this.$$this; $$this.$$SoundTransform.$$p.$_volume = $es4.$$coerce(value, Number); }
		};

		SoundTransform.prototype.$$v.$_panning = {
		get:function () { var $$this = this.$$this; return $$this.$$SoundTransform.$$p.$_panning; },
		set:function (value) { var $$this = this.$$this; $$this.$$SoundTransform.$$p.$_panning = $es4.$$coerce(value, Number); }
		};

	});

	//class initializer
	SoundTransform.$$cinit = (function ()
	{
		SoundTransform.$$cinit = undefined;
	});

	function SoundTransform()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SoundTransform) || $$this.$$SoundTransform !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SoundTransform) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SoundTransform.$$construct($$this, $$args);
		}
	}

	//construct
	SoundTransform.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SoundTransform.$$cinit !== undefined) SoundTransform.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SoundTransform', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$SoundTransform, '$_volume', SoundTransform.prototype.$$v.$_volume);
		Object.defineProperty($$this.$$SoundTransform, '$_panning', SoundTransform.prototype.$$v.$_panning);

		//initialize properties
		SoundTransform.$$iinit($$this);

		//call constructor
		if (args !== undefined) SoundTransform.$$constructor.apply($$this, args);
	});

	//initializer
	SoundTransform.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$SoundTransform.$$p.$_volume = $es4.$$coerce(undefined, Number);
		$$this.$$SoundTransform.$$p.$_panning = $es4.$$coerce(undefined, Number);
	
	});

	//constructor
	SoundTransform.$$constructor = (function ($$$$volume, $$$$panning)
	{
		var $$this = this;
		//set default parameter values
		var volume = (0 > arguments.length - 1) ? 1 : $es4.$$coerce($$$$volume, Number);
		var panning = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$panning, Number);

		$$this.$$SoundTransform.$_volume = volume;
		$$this.$$SoundTransform.$_panning = panning;
	});

	return $es4.$$class(SoundTransform, null, 'flash.media::SoundTransform');
})();
//flash.media.SoundTransform


//flash.media.StageVideo
$$package('flash.media').StageVideo = function () { throw new Error('Use of unimplemented class: StageVideo'); }
//flash.media.StageVideo


//flash.media.StageVideoAvailability
$$package('flash.media').StageVideoAvailability = function () { throw new Error('Use of unimplemented class: StageVideoAvailability'); }
//flash.media.StageVideoAvailability


//flash.media.Video
$es4.$$package('flash.media').Video = (function ()
{
	//imports
	var DisplayObject;
	var Event;
	var Camera;
	var NetStream;

	//class pre initializer
	Video.$$sinit = (function ()
	{
		Video.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		Event = $es4.$$['flash.events'].Event;
		Camera = $es4.$$['flash.media'].Camera;
		NetStream = $es4.$$['flash.net'].NetStream;

		//ensure $$sinit is called on super class
		if (DisplayObject.$$sinit !== undefined) DisplayObject.$$sinit();

		//set prototype and constructor
		Video.prototype = Object.create(DisplayObject.prototype);
		Object.defineProperty(Video.prototype, "constructor", { value: Video, enumerable: false });

		//hold private values
		Object.defineProperty(Video.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Video.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$Video.$_properties === undefined)
				{
					object = $es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__properties', 'func', undefined)(object);
					object.VideoScope = {};
					return $$this.$$Video.$_properties = object;
				}
				return $$this.$$Video.$_properties;
			}

			return $$this.$$Video.$$$__properties || ($$this.$$Video.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(Video.prototype, '$__notify', {
		get:function ()
		{
			var $$this = this;

			function $__notify($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);
				var args = $$$$args;

				if (name === 'visibilityChange' && $$this.$$Video.$_domVideoView && $$this.$$Video.$_netStream)
				{
					if (args)
					{
						if (!$$this.$$Video.$_domVideoView.paused)
						{
							$$this.$$Video.$_netStream.$__suspended = true;
							$$this.$$Video.$_domVideoView.pause();
						}
					}
					else
					{
						if ($$this.$$Video.$_netStream.$__suspended)
						{
							$$this.$$Video.$_netStream.$__suspended = false;
							$$this.$$Video.$_domVideoView.play();
						}
					}
				}
				$es4.$$super2($$this, DisplayObject, '$$DisplayObject', '$__notify', 'func', undefined)(name, args);
			}

			return $$this.$$Video.$$$__notify || ($$this.$$Video.$$$__notify = $__notify);
		}});


		//protected instance method
		Object.defineProperty(Video.prototype, '$_applySize', {
		get:function ()
		{
			var $$this = this;

			function $_applySize()
			{
				if (!$$this.$$Video.$_domVideoView)
				{
					return;
				}
				$$this.$$Video.$_domVideoView.setAttribute('width', $$this.$$Video.$_properties.DisplayObjectScope.$_width + 'px');
				$$this.$$Video.$_domVideoView.setAttribute('height', $$this.$$Video.$_properties.DisplayObjectScope.$_height + 'px');
			}

			return $$this.$$Video.$$$_applySize || ($$this.$$Video.$$$_applySize = $_applySize);
		}});


		//public instance method
		Object.defineProperty(Video.prototype, 'attachNetStream', {
		get:function ()
		{
			var $$this = this;

			function attachNetStream($$$$netStream)
			{
				//set default parameter values
				var netStream = $es4.$$coerce($$$$netStream, NetStream);

				if ($$this.$$Video.$_netStream)
				{
					$$this.$$Video.$_netStream.removeEventListener('videoCreated', $$this.$$Video.onVideoCreated);
					if ($$this.$$Video.$_domVideoView)
					{
						$$this.$$Video.$_properties.DisplayObjectScope.$_domView.removeChild($$this.$$Video.$_domVideoView);
					}
					$$this.$$Video.$_netStream = null;
					return;
				}
				if (!netStream)
				{
					return;
				}
				$$this.$$Video.$_netStream = netStream;
				if ($$this.$$Video.$_netStream.$__domVideoView)
				{
					$$this.$$Video.onVideoCreated(null);
					return;
				}
				else
				{
					$$this.$$Video.$_netStream.addEventListener('videoCreated', $$this.$$Video.onVideoCreated);
				}
			}

			return $$this.$$Video.$$attachNetStream || ($$this.$$Video.$$attachNetStream = attachNetStream);
		}});


		//private instance method
		Video.prototype.$$v.onVideoCreated = {
		get:function ()
		{
			var $$this = this.$$this;

			function onVideoCreated($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				$$this.$$Video.$_domVideoView = $$this.$$Video.$_netStream.$__domVideoView;
				$$this.$$Video.$_properties.DisplayObjectScope.$_domView.appendChild($$this.$$Video.$_domVideoView);
				$$this.$_applySize();
			}

			return $$this.$$Video.$$p.$$onVideoCreated || ($$this.$$Video.$$p.$$onVideoCreated = onVideoCreated);
		}};


		//public instance method
		Object.defineProperty(Video.prototype, 'attachCamera', {
		get:function ()
		{
			var $$this = this;

			function attachCamera($$$$camera)
			{
				//set default parameter values
				var camera = $es4.$$coerce($$$$camera, Camera);

				throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "attachCamera"'));
			}

			return $$this.$$Video.$$attachCamera || ($$this.$$Video.$$attachCamera = attachCamera);
		}});


		//public instance method
		Object.defineProperty(Video.prototype, 'clear', {
		get:function ()
		{
			var $$this = this;

			function clear()
			{
				throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "clear"'));
			}

			return $$this.$$Video.$$clear || ($$this.$$Video.$$clear = clear);
		}});

		Object.defineProperty(Video.prototype, 'width', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, DisplayObject, '$$Video', 'width', 'get');
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			var width = (value > 0) ? value : 320;
			$$this.$$Video.$_properties.DisplayObjectScope.$_setExplicitBounds(width, $$this.$$Video.$_properties.DisplayObjectScope.$_height);
			$$this.$_applySize();
		}});
		Object.defineProperty(Video.prototype, 'height', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, DisplayObject, '$$Video', 'height', 'get');
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			var height = (value > 0) ? value : 240;
			$$this.$$Video.$_properties.DisplayObjectScope.$_setExplicitBounds($$this.$$Video.$_properties.DisplayObjectScope.$_width, height);
			$$this.$_applySize();
		}});
		Object.defineProperty(Video.prototype, 'deblocking', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "deblocking"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "deblocking"'));
		}});
		Object.defineProperty(Video.prototype, 'smoothing', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "smoothing"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('Video: attempted call to an unimplemented function "smoothing"'));
		}});
		Object.defineProperty(Video.prototype, 'videoHeight', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(($$this.$$Video.$_domVideoView) ? $$this.$$Video.$_domVideoView.videoHeight : 0, int);
		}});
		Object.defineProperty(Video.prototype, 'videoWidth', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce(($$this.$$Video.$_domVideoView) ? $$this.$$Video.$_domVideoView.videoWidth : 0, int);
		}});

		//properties
		Video.prototype.$$v.$_netStream = {
		get:function () { var $$this = this.$$this; return $$this.$$Video.$$p.$_netStream; },
		set:function (value) { var $$this = this.$$this; $$this.$$Video.$$p.$_netStream = $es4.$$coerce(value, NetStream); }
		};

		Video.prototype.$$v.$_domVideoView = {
		get:function () { var $$this = this.$$this; return $$this.$$Video.$$p.$_domVideoView; },
		set:function (value) { var $$this = this.$$this; $$this.$$Video.$$p.$_domVideoView = $es4.$$coerce(value, Object); }
		};

		Video.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$Video.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$Video.$$p.$_properties = value }
		};

	});

	//class initializer
	Video.$$cinit = (function ()
	{
		Video.$$cinit = undefined;
	});

	function Video()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Video) || $$this.$$Video !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Video) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Video.$$construct($$this, $$args);
		}
	}

	//construct
	Video.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Video.$$cinit !== undefined) Video.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Video', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Video, '$_netStream', Video.prototype.$$v.$_netStream);
		Object.defineProperty($$this.$$Video, '$_domVideoView', Video.prototype.$$v.$_domVideoView);
		Object.defineProperty($$this.$$Video, '$_properties', Video.prototype.$$v.$_properties);

		//private instance method
		Object.defineProperty($$this.$$Video, 'onVideoCreated', Video.prototype.$$v.onVideoCreated);

		//call construct on super
		DisplayObject.$$construct($$this);

		//initialize properties
		Video.$$iinit($$this);

		//call constructor
		if (args !== undefined) Video.$$constructor.apply($$this, args);
	});

	//initializer
	Video.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Video.$$p.$_netStream = $es4.$$coerce(undefined, NetStream);
		$$this.$$Video.$$p.$_domVideoView = $es4.$$coerce(undefined, Object);
		$$this.$$Video.$$p.$_properties = undefined;
	
		//call iinit on super
		DisplayObject.$$iinit($$this);
	});

	//constructor
	Video.$$constructor = (function ($$$$width, $$$$height)
	{
		var $$this = this;
		//set default parameter values
		var width = (0 > arguments.length - 1) ? 320 : $es4.$$coerce($$$$width, int);
		var height = (1 > arguments.length - 1) ? 240 : $es4.$$coerce($$$$height, int);

		if ($$this.$$Video.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		DisplayObject.$$constructor.call($$this);
		$$this.$$Video.$_properties.DisplayObjectScope.$_setExplicitBounds(width, height);
	});

	return $es4.$$class(Video, {EXTENDS:'flash.display.DisplayObject'}, 'flash.media::Video');
})();
//flash.media.Video


//flash.media.VideoStatus
$es4.$$package('flash.media').VideoStatus = (function ()
{
	//properties
	var $$j = {};
	VideoStatus.ACCELERATED = "accelerated";
	VideoStatus.SOFTWARE = "software";
	VideoStatus.UNAVAILABLE = "unavailable";

	//class pre initializer
	VideoStatus.$$sinit = (function ()
	{
		VideoStatus.$$sinit = undefined;

		//set prototype and constructor
		VideoStatus.prototype = Object.create(Object.prototype);
		Object.defineProperty(VideoStatus.prototype, "constructor", { value: VideoStatus, enumerable: false });

		//hold private values
		Object.defineProperty(VideoStatus.prototype, '$$v', {value:{}});
	});

	//class initializer
	VideoStatus.$$cinit = (function ()
	{
		VideoStatus.$$cinit = undefined;
	});

	function VideoStatus()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof VideoStatus) || $$this.$$VideoStatus !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], VideoStatus) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			VideoStatus.$$construct($$this, $$args);
		}
	}

	//construct
	VideoStatus.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (VideoStatus.$$cinit !== undefined) VideoStatus.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$VideoStatus', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		VideoStatus.$$iinit($$this);

		//call constructor
		if (args !== undefined) VideoStatus.$$constructor.apply($$this, args);
	});

	//initializer
	VideoStatus.$$iinit = (function ($$this)
	{
	});

	//constructor
	VideoStatus.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(VideoStatus, null, 'flash.media::VideoStatus');
})();
//flash.media.VideoStatus


//flash.media.VideoStreamSettings
$$package('flash.media').VideoStreamSettings = function () { throw new Error('Use of unimplemented class: VideoStreamSettings'); }
//flash.media.VideoStreamSettings


//flash.net.drm.AuthenticationMethod
$$package('flash.net.drm').AuthenticationMethod = function () { throw new Error('Use of unimplemented class: AuthenticationMethod'); }
//flash.net.drm.AuthenticationMethod


//flash.net.drm.DRMContentData
$$package('flash.net.drm').DRMContentData = function () { throw new Error('Use of unimplemented class: DRMContentData'); }
//flash.net.drm.DRMContentData


//flash.net.drm.DRMManager
$$package('flash.net.drm').DRMManager = function () { throw new Error('Use of unimplemented class: DRMManager'); }
//flash.net.drm.DRMManager


//flash.net.drm.DRMPlaybackTimeWindow
$$package('flash.net.drm').DRMPlaybackTimeWindow = function () { throw new Error('Use of unimplemented class: DRMPlaybackTimeWindow'); }
//flash.net.drm.DRMPlaybackTimeWindow


//flash.net.drm.DRMVoucher
$$package('flash.net.drm').DRMVoucher = function () { throw new Error('Use of unimplemented class: DRMVoucher'); }
//flash.net.drm.DRMVoucher


//flash.net.drm.LoadVoucherSetting
$$package('flash.net.drm').LoadVoucherSetting = function () { throw new Error('Use of unimplemented class: LoadVoucherSetting'); }
//flash.net.drm.LoadVoucherSetting


//flash.net.drm.VoucherAccessInfo
$$package('flash.net.drm').VoucherAccessInfo = function () { throw new Error('Use of unimplemented class: VoucherAccessInfo'); }
//flash.net.drm.VoucherAccessInfo


//flash.net.FileFilter
$$package('flash.net').FileFilter = function () { throw new Error('Use of unimplemented class: FileFilter'); }
//flash.net.FileFilter


//flash.net.FileReference
$$package('flash.net').FileReference = function () { throw new Error('Use of unimplemented class: FileReference'); }
//flash.net.FileReference


//flash.net.FileReferenceList
$$package('flash.net').FileReferenceList = function () { throw new Error('Use of unimplemented class: FileReferenceList'); }
//flash.net.FileReferenceList


//flash.net.GroupSpecifier
$$package('flash.net').GroupSpecifier = function () { throw new Error('Use of unimplemented class: GroupSpecifier'); }
//flash.net.GroupSpecifier


//flash.net.LocalConnection
$$package('flash.net').LocalConnection = function () { throw new Error('Use of unimplemented class: LocalConnection'); }
//flash.net.LocalConnection


//flash.net.NetConnection
$es4.$$package('flash.net').NetConnection = (function ()
{
	//imports
	var EventDispatcher;
	var Responder;

	//class pre initializer
	NetConnection.$$sinit = (function ()
	{
		NetConnection.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		Responder = $es4.$$['flash.net'].Responder;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		NetConnection.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(NetConnection.prototype, "constructor", { value: NetConnection, enumerable: false });

		//hold private values
		Object.defineProperty(NetConnection.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(NetConnection.prototype, 'connect', {
		get:function ()
		{
			var $$this = this;

			function connect($$$$command, $$$$rest)
			{
				//set default parameter values
				var command = $es4.$$coerce($$$$command, String);
				for (var $$i = 1, $$length = arguments.length, rest = new Array($$length - 1); $$i < $$length; $$i += 1) rest[$$i - 1] = arguments[$$i];

			}

			return $$this.$$NetConnection.$$connect || ($$this.$$NetConnection.$$connect = connect);
		}});


		//public instance method
		Object.defineProperty(NetConnection.prototype, 'addHeader', {
		get:function ()
		{
			var $$this = this;

			function addHeader($$$$operation, $$$$mustUnderstand, $$$$param)
			{
				//set default parameter values
				var operation = $es4.$$coerce($$$$operation, String);
				var mustUnderstand = (1 > arguments.length - 1) ? false : $es4.$$coerce($$$$mustUnderstand, Boolean);
				var param = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$param, Object);

				throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "addHeader"'));
			}

			return $$this.$$NetConnection.$$addHeader || ($$this.$$NetConnection.$$addHeader = addHeader);
		}});


		//public instance method
		Object.defineProperty(NetConnection.prototype, 'call', {
		get:function ()
		{
			var $$this = this;

			function call($$$$command, $$$$responder, $$$$rest)
			{
				//set default parameter values
				var command = $es4.$$coerce($$$$command, String);
				var responder = $es4.$$coerce($$$$responder, Responder);
				for (var $$i = 2, $$length = arguments.length, rest = new Array($$length - 2); $$i < $$length; $$i += 1) rest[$$i - 2] = arguments[$$i];

				throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "call"'));
			}

			return $$this.$$NetConnection.$$call || ($$this.$$NetConnection.$$call = call);
		}});


		//public instance method
		Object.defineProperty(NetConnection.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "close"'));
			}

			return $$this.$$NetConnection.$$close || ($$this.$$NetConnection.$$close = close);
		}});

		Object.defineProperty(NetConnection.prototype, 'client', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "client"'));
		}, set:function ($$$$object)
		{
			//set default parameter values
			var object = $es4.$$coerce($$$$object, Object);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "client"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'connected', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "connected"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'connectedProxyType', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "connectedProxyType"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'farID', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "farID"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'farNonce', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "farNonce"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'maxPeerConnections', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "maxPeerConnections"'));
		}, set:function ($$$$maxPeers)
		{
			//set default parameter values
			var maxPeers = $es4.$$coerce($$$$maxPeers, uint);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "maxPeerConnections"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'nearID', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "nearID"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'nearNonce', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "nearNonce"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'objectEncoding', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "objectEncoding"'));
		}, set:function ($$$$version)
		{
			//set default parameter values
			var version = $es4.$$coerce($$$$version, uint);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "objectEncoding"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'protocol', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "protocol"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'proxyType', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "proxyType"'));
		}, set:function ($$$$ptype)
		{
			//set default parameter values
			var ptype = $es4.$$coerce($$$$ptype, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "proxyType"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'unconnectedPeerStreams', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "unconnectedPeerStreams"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'uri', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "uri"'));
		}});
		Object.defineProperty(NetConnection.prototype, 'usingTLS', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "usingTLS"'));
		}});
	});

	//class initializer
	NetConnection.$$cinit = (function ()
	{
		NetConnection.$$cinit = undefined;
	});

	Object.defineProperty(NetConnection, 'defaultObjectEncoding', {get:function ()
	{
		if (NetConnection.$$cinit !== undefined) NetConnection.$$cinit();

		throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "defaultObjectEncoding"'));
	}, set:function ($$$$version)
	{
		if (NetConnection.$$cinit !== undefined) NetConnection.$$cinit();

		//set default parameter values
		var version = $es4.$$coerce($$$$version, uint);

		throw $es4.$$primitive(new Error('NetConnection: attempted call to an unimplemented function "defaultObjectEncoding"'));
	}});

	function NetConnection()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof NetConnection) || $$this.$$NetConnection !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], NetConnection) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			NetConnection.$$construct($$this, $$args);
		}
	}

	//construct
	NetConnection.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (NetConnection.$$cinit !== undefined) NetConnection.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$NetConnection', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		NetConnection.$$iinit($$this);

		//call constructor
		if (args !== undefined) NetConnection.$$constructor.apply($$this, args);
	});

	//initializer
	NetConnection.$$iinit = (function ($$this)
	{
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	NetConnection.$$constructor = (function ()
	{
		var $$this = this;
		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(NetConnection, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.net::NetConnection');
})();
//flash.net.NetConnection


//flash.net.NetGroup
$$package('flash.net').NetGroup = function () { throw new Error('Use of unimplemented class: NetGroup'); }
//flash.net.NetGroup


//flash.net.NetGroupInfo
$$package('flash.net').NetGroupInfo = function () { throw new Error('Use of unimplemented class: NetGroupInfo'); }
//flash.net.NetGroupInfo


//flash.net.NetGroupReceiveMode
$$package('flash.net').NetGroupReceiveMode = function () { throw new Error('Use of unimplemented class: NetGroupReceiveMode'); }
//flash.net.NetGroupReceiveMode


//flash.net.NetGroupReplicationStrategy
$$package('flash.net').NetGroupReplicationStrategy = function () { throw new Error('Use of unimplemented class: NetGroupReplicationStrategy'); }
//flash.net.NetGroupReplicationStrategy


//flash.net.NetGroupSendMode
$$package('flash.net').NetGroupSendMode = function () { throw new Error('Use of unimplemented class: NetGroupSendMode'); }
//flash.net.NetGroupSendMode


//flash.net.NetGroupSendResult
$$package('flash.net').NetGroupSendResult = function () { throw new Error('Use of unimplemented class: NetGroupSendResult'); }
//flash.net.NetGroupSendResult


//flash.net.NetStream
$es4.$$package('flash.net').NetStream = (function ()
{
	//imports
	var Event;
	var EventDispatcher;
	var NetStatusEvent;
	var Camera;
	var Microphone;
	var SoundTransform;
	var VideoStreamSettings;
	var ByteArray;
	var Browser;
	var NetConnection;
	var NetStream;
	var NetStreamPlayOptions;

	//properties
	var $$j = {};
	Object.defineProperty(NetStream, '$__PLAYING', {
	get:function () { if (NetStream.$$cinit !== undefined) NetStream.$$cinit(); return $$j.$__PLAYING; },
	set:function (value) { if (NetStream.$$cinit !== undefined) NetStream.$$cinit(); $$j.$__PLAYING = $es4.$$coerce(value, String); }
	});

	Object.defineProperty(NetStream, '$__VIDEO_CREATED', {
	get:function () { if (NetStream.$$cinit !== undefined) NetStream.$$cinit(); return $$j.$__VIDEO_CREATED; },
	set:function (value) { if (NetStream.$$cinit !== undefined) NetStream.$$cinit(); $$j.$__VIDEO_CREATED = $es4.$$coerce(value, String); }
	});

	NetStream.CONNECT_TO_FMS = "connectToFMS";
	NetStream.DIRECT_CONNECTIONS = "directConnections";

	//class pre initializer
	NetStream.$$sinit = (function ()
	{
		NetStream.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		NetStatusEvent = $es4.$$['flash.events'].NetStatusEvent;
		Camera = $es4.$$['flash.media'].Camera;
		Microphone = $es4.$$['flash.media'].Microphone;
		SoundTransform = $es4.$$['flash.media'].SoundTransform;
		VideoStreamSettings = $es4.$$['flash.media'].VideoStreamSettings;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Browser = $es4.$$['browser'].Browser;
		NetConnection = $es4.$$['flash.net'].NetConnection;
		NetStreamPlayOptions = $es4.$$['flash.net'].NetStreamPlayOptions;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		NetStream.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(NetStream.prototype, "constructor", { value: NetStream, enumerable: false });

		//hold private values
		Object.defineProperty(NetStream.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(NetStream.prototype, 'play', {
		get:function ()
		{
			var $$this = this;

			function play($$$$rest)
			{
				//set default parameter values
				for (var $$i = 0, $$length = arguments.length, rest = new Array($$length - 0); $$i < $$length; $$i += 1) rest[$$i - 0] = arguments[$$i];

				$$this.$__domVideoView = Browser.getNewVideo();
				$$this.dispatchEvent($es4.$$primitive(new Event(NetStream.$__VIDEO_CREATED)));
				var window = Browser.getWindow();
				var isPlaying = false;
				var isIE = $es4.$$coerce(window.ie, Boolean);
				var setTimeout = $es4.$$coerce(window.setTimeout, Function);
				var firefoxMobile = $es4.$$coerce((window.mobile && window.firefox), Boolean);
				var safariMobile = $es4.$$coerce((window.mobile && window.safari), Boolean);
				var canPlayThrough = false;
				$$this.$__domVideoView.addEventListener('loadedmetadata', onLoadedMetaData);
				$$this.$__domVideoView.addEventListener('play', onPlay);
				$$this.$__domVideoView.addEventListener('canplaythrough', onCanPlay);
				$$this.$__domVideoView.src = rest[0];
				if (safariMobile)
				{
					$$this.$__domVideoView.load();
					$$this.$__domVideoView.play();
					$$this.$__domVideoView.pause();
				}
				else if (firefoxMobile)
				{
					$$this.$__domVideoView.play();
				}

				function onLoadedMetaData($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Event);

					$$this.$__domVideoView.removeEventListener('loadedmetadata', onLoadedMetaData);
					if (!$$this.$_client.onMetaData)
					{
						return;
					}
					$$this.$$NetStream.$_duration = $$this.$__domVideoView.duration;
					trace('reported video duration: ' + $$this.$$NetStream.$_duration);
					if ($$this.$$NetStream.$_duration == 1)
					{
						trace('incorrect video duration metadata detected. loading metadata file');
						var parts = $es4.$$coerce(rest[0].split('.'), Array);
						parts.pop();
						var uri = parts.join('.') + '.metadata';
						var xmlHttpRequest = $es4.$$primitive(new window.XMLHttpRequest());
						xmlHttpRequest.open('GET', uri, false);
						xmlHttpRequest.overrideMimeType('text/javascript');
						xmlHttpRequest.send(null);
						trace('metadata file reported duration: ' + xmlHttpRequest.responseText);
						$$this.$$NetStream.$_duration = xmlHttpRequest.responseText;
					}
					$$this.$_client.onMetaData({width:$$this.$__domVideoView.videoWidth, height:$$this.$__domVideoView.videoHeight, duration:$$this.$$NetStream.$_duration, framerate:30});
				}
;

				function onCanPlay($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Event);

					$$this.$__domVideoView.removeEventListener('canplaythrough', onCanPlay);
					trace('can play through');
					canPlayThrough = true;
					if (!firefoxMobile)
					{
						$$this.$__domVideoView.play();
					}
				}
;

				function onPlay($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Event);

					if (!canPlayThrough)
					{
						return;
					}
					if ($$this.$$NetStream.$_wasEnded)
					{
						$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.Play.Start'})));
						$$this.$$NetStream.$_wasEnded = false;
					}
					if (!isPlaying)
					{
						onPlaying();
					}
				}
;

				function onPlaying() 
				{
					isPlaying = true;
					if (!$$this.$__domVideoView)
					{
						isPlaying = false;
						return;
					}
					if ($$this.$__domVideoView.paused || $$this.$__domVideoView.ended)
					{
						isPlaying = false;
						if ($$this.$__suspended)
						{
							return;
						}
						else if ($$this.$__domVideoView.ended)
						{
							onEnded();
						}
						else if ($$this.$$NetStream.$_realPause)
						{
							$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.Pause.Notify'})));
							$$this.$$NetStream.$_wasPaused = true;
						}
						else
						{
							trace('unbuffered edge case');
							$$this.$__domVideoView.play();
						}
						return;
					}
					else if ($$this.$$NetStream.$_wasPaused)
					{
						$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.Unpause.Notify'})));
						$$this.$$NetStream.$_wasPaused = false;
					}
					else if ($$this.$__domVideoView.currentTime > $$this.$$NetStream.$_duration)
					{
						trace('ie reporting currentTime greater than duration');
						onEnded();
						$$this.$__domVideoView.pause();
						return;
					}
					$$this.dispatchEvent($es4.$$primitive(new Event(NetStream.$__PLAYING)));
					setTimeout(onPlaying, (isIE) ? 50 : 250);
				}
;

				function onEnded() 
				{
					$$this.$$NetStream.$_wasEnded = true;
					$$this.$$NetStream.$_endTime = $$this.time;
					trace('onEnded called, end time: ' + $$this.$$NetStream.$_endTime);
					$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.Play.Stop'})));
					if ($$this.$_client.onPlayStatus)
					{
						$$this.$_client.onPlayStatus({code:'NetStream.Play.Complete'});
					}
				}
;
			}

			return $$this.$$NetStream.$$play || ($$this.$$NetStream.$$play = play);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'appendBytes', {
		get:function ()
		{
			var $$this = this;

			function appendBytes($$$$bytes)
			{
				//set default parameter values
				var bytes = $es4.$$coerce($$$$bytes, ByteArray);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "appendBytes"'));
			}

			return $$this.$$NetStream.$$appendBytes || ($$this.$$NetStream.$$appendBytes = appendBytes);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'appendBytesAction', {
		get:function ()
		{
			var $$this = this;

			function appendBytesAction($$$$netStreamAppendBytesAction)
			{
				//set default parameter values
				var netStreamAppendBytesAction = $es4.$$coerce($$$$netStreamAppendBytesAction, String);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "appendBytesAction"'));
			}

			return $$this.$$NetStream.$$appendBytesAction || ($$this.$$NetStream.$$appendBytesAction = appendBytesAction);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'attach', {
		get:function ()
		{
			var $$this = this;

			function attach($$$$connection)
			{
				//set default parameter values
				var connection = $es4.$$coerce($$$$connection, NetConnection);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "attach"'));
			}

			return $$this.$$NetStream.$$attach || ($$this.$$NetStream.$$attach = attach);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'attachAudio', {
		get:function ()
		{
			var $$this = this;

			function attachAudio($$$$microphone)
			{
				//set default parameter values
				var microphone = $es4.$$coerce($$$$microphone, Microphone);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "attachAudio"'));
			}

			return $$this.$$NetStream.$$attachAudio || ($$this.$$NetStream.$$attachAudio = attachAudio);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'attachCamera', {
		get:function ()
		{
			var $$this = this;

			function attachCamera($$$$theCamera, $$$$snapshotMilliseconds)
			{
				//set default parameter values
				var theCamera = $es4.$$coerce($$$$theCamera, Camera);
				var snapshotMilliseconds = (1 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$snapshotMilliseconds, int);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "attachCamera"'));
			}

			return $$this.$$NetStream.$$attachCamera || ($$this.$$NetStream.$$attachCamera = attachCamera);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				if (!$$this.$__domVideoView)
				{
					return;
				}
				$$this.$__domVideoView.pause();
				$$this.$__domVideoView.src = '';
				$$this.$__domVideoView.removeAttribute('src');
			}

			return $$this.$$NetStream.$$close || ($$this.$$NetStream.$$close = close);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'dispose', {
		get:function ()
		{
			var $$this = this;

			function dispose()
			{
				if (!$$this.$__domVideoView)
				{
					return;
				}
				$$this.close();
				if ($$this.$__domVideoView.parentNode)
				{
					$$this.$__domVideoView.parentNode.displayObject.attachNetStream(null);
				}
				$$this.$__domVideoView = null;
			}

			return $$this.$$NetStream.$$dispose || ($$this.$$NetStream.$$dispose = dispose);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'onPeerConnect', {
		get:function ()
		{
			var $$this = this;

			function onPeerConnect($$$$subscriber)
			{
				//set default parameter values
				var subscriber = $es4.$$coerce($$$$subscriber, $es4.$$['flash.net'].NetStream);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "onPeerConnect"'));
			}

			return $$this.$$NetStream.$$onPeerConnect || ($$this.$$NetStream.$$onPeerConnect = onPeerConnect);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'pause', {
		get:function ()
		{
			var $$this = this;

			function pause()
			{
				if ($$this.$$NetStream.$_wasEnded && $$this.$$NetStream.$_endTime)
				{
					return;
				}
				$$this.$$NetStream.$_realPause = true;
				$$this.$__domVideoView.pause();
			}

			return $$this.$$NetStream.$$pause || ($$this.$$NetStream.$$pause = pause);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'play2', {
		get:function ()
		{
			var $$this = this;

			function play2($$$$param)
			{
				//set default parameter values
				var param = $es4.$$coerce($$$$param, NetStreamPlayOptions);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "play2"'));
			}

			return $$this.$$NetStream.$$play2 || ($$this.$$NetStream.$$play2 = play2);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'publish', {
		get:function ()
		{
			var $$this = this;

			function publish($$$$name, $$$$type)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, String);
				var type = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$type, String);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "publish"'));
			}

			return $$this.$$NetStream.$$publish || ($$this.$$NetStream.$$publish = publish);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'receiveAudio', {
		get:function ()
		{
			var $$this = this;

			function receiveAudio($$$$flag)
			{
				//set default parameter values
				var flag = $es4.$$coerce($$$$flag, Boolean);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "receiveAudio"'));
			}

			return $$this.$$NetStream.$$receiveAudio || ($$this.$$NetStream.$$receiveAudio = receiveAudio);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'receiveVideo', {
		get:function ()
		{
			var $$this = this;

			function receiveVideo($$$$flag)
			{
				//set default parameter values
				var flag = $es4.$$coerce($$$$flag, Boolean);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "receiveVideo"'));
			}

			return $$this.$$NetStream.$$receiveVideo || ($$this.$$NetStream.$$receiveVideo = receiveVideo);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'receiveVideoFPS', {
		get:function ()
		{
			var $$this = this;

			function receiveVideoFPS($$$$FPS)
			{
				//set default parameter values
				var FPS = $es4.$$coerce($$$$FPS, Number);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "receiveVideoFPS"'));
			}

			return $$this.$$NetStream.$$receiveVideoFPS || ($$this.$$NetStream.$$receiveVideoFPS = receiveVideoFPS);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'resume', {
		get:function ()
		{
			var $$this = this;

			function resume()
			{
				if ($$this.$$NetStream.$_wasEnded && $$this.$$NetStream.$_endTime)
				{
					return;
				}
				$$this.$$NetStream.$_realPause = false;
				$$this.$__domVideoView.play();
			}

			return $$this.$$NetStream.$$resume || ($$this.$$NetStream.$$resume = resume);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'seek', {
		get:function ()
		{
			var $$this = this;

			function seek($$$$offset)
			{
				//set default parameter values
				var offset = $es4.$$coerce($$$$offset, Number);

				if (offset == $$this.$__domVideoView.currentTime)
				{
					return;
				}
				if ($$this.$$NetStream.$_wasEnded)
				{
					if (offset >= $$this.$$NetStream.$_endTime)
					{
						return;
					}
					$$this.$$NetStream.$_wasEnded = false;
					$$this.$$NetStream.$_endTime = 0;
					$$this.$$NetStream.$_realPause = false;
					$$this.$__domVideoView.play();
				}
				$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.SeekStart.Notify'})));
				if ($$this.$$NetStream.$_duration == -1 && offset > $$this.$__domVideoView.buffered.end(0))
				{
					offset = $es4.$$coerce($$this.$__domVideoView.buffered.end(0) - 1, Number);
				}
				else if ($$this.$$NetStream.$_duration != -1 && offset >= $$this.$$NetStream.$_duration)
				{
					offset = $$this.$$NetStream.$_duration - 1;
				}
				$$this.$__domVideoView.currentTime = offset;
				$$this.dispatchEvent($es4.$$primitive(new NetStatusEvent(NetStatusEvent.NET_STATUS, false, false, {code:'NetStream.Seek.Notify'})));
			}

			return $$this.$$NetStream.$$seek || ($$this.$$NetStream.$$seek = seek);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'send', {
		get:function ()
		{
			var $$this = this;

			function send($$$$handlerName, $$$$rest)
			{
				//set default parameter values
				var handlerName = $es4.$$coerce($$$$handlerName, String);
				for (var $$i = 1, $$length = arguments.length, rest = new Array($$length - 1); $$i < $$length; $$i += 1) rest[$$i - 1] = arguments[$$i];

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "send"'));
			}

			return $$this.$$NetStream.$$send || ($$this.$$NetStream.$$send = send);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'step', {
		get:function ()
		{
			var $$this = this;

			function step($$$$frames)
			{
				//set default parameter values
				var frames = $es4.$$coerce($$$$frames, int);

				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "step"'));
			}

			return $$this.$$NetStream.$$step || ($$this.$$NetStream.$$step = step);
		}});


		//public instance method
		Object.defineProperty(NetStream.prototype, 'togglePause', {
		get:function ()
		{
			var $$this = this;

			function togglePause()
			{
				throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "togglePause"'));
			}

			return $$this.$$NetStream.$$togglePause || ($$this.$$NetStream.$$togglePause = togglePause);
		}});

		Object.defineProperty(NetStream.prototype, 'client', {get:function ()
		{
			var $$this = this;
			return $$this.$_client;
		}, set:function ($$$$object)
		{
			//set default parameter values
			var object = $es4.$$coerce($$$$object, Object);

			var $$this = this;
			if (!object)
			{
				object = $$this;
			}
			$$this.$_client = object;
		}});
		Object.defineProperty(NetStream.prototype, 'audioCodec', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "audioCodec"'));
		}});
		Object.defineProperty(NetStream.prototype, 'audioReliable', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "audioReliable"'));
		}, set:function ($$$$reliable)
		{
			//set default parameter values
			var reliable = $es4.$$coerce($$$$reliable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "audioReliable"'));
		}});
		Object.defineProperty(NetStream.prototype, 'audioSampleAccess', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "audioSampleAccess"'));
		}, set:function ($$$$reliable)
		{
			//set default parameter values
			var reliable = $es4.$$coerce($$$$reliable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "audioSampleAccess"'));
		}});
		Object.defineProperty(NetStream.prototype, 'backBufferLength', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "backBufferLength"'));
		}});
		Object.defineProperty(NetStream.prototype, 'backBufferTime', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "backBufferTime"'));
		}, set:function ($$$$backBufferTime)
		{
			//set default parameter values
			var backBufferTime = $es4.$$coerce($$$$backBufferTime, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "backBufferTime"'));
		}});
		Object.defineProperty(NetStream.prototype, 'bufferLength', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bufferLength"'));
		}});
		Object.defineProperty(NetStream.prototype, 'bufferTime', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bufferTime"'));
		}, set:function ($$$$bufferTime)
		{
			//set default parameter values
			var bufferTime = $es4.$$coerce($$$$bufferTime, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bufferTime"'));
		}});
		Object.defineProperty(NetStream.prototype, 'bufferTimeMax', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bufferTimeMax"'));
		}, set:function ($$$$bufferTimeMax)
		{
			//set default parameter values
			var bufferTimeMax = $es4.$$coerce($$$$bufferTimeMax, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bufferTimeMax"'));
		}});
		Object.defineProperty(NetStream.prototype, 'bytesLoaded', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bytesLoaded"'));
		}});
		Object.defineProperty(NetStream.prototype, 'bytesTotal', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "bytesTotal"'));
		}});
		Object.defineProperty(NetStream.prototype, 'checkPolicyFile', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "checkPolicyFile"'));
		}, set:function ($$$$state)
		{
			//set default parameter values
			var state = $es4.$$coerce($$$$state, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "checkPolicyFile"'));
		}});
		Object.defineProperty(NetStream.prototype, 'currentFPS', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "currentFPS"'));
		}});
		Object.defineProperty(NetStream.prototype, 'dataReliable', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "dataReliable"'));
		}, set:function ($$$$reliable)
		{
			//set default parameter values
			var reliable = $es4.$$coerce($$$$reliable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "dataReliable"'));
		}});
		Object.defineProperty(NetStream.prototype, 'decodedFrames', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "decodedFrames"'));
		}});
		Object.defineProperty(NetStream.prototype, 'farID', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "farID"'));
		}});
		Object.defineProperty(NetStream.prototype, 'farNonce', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "farNonce"'));
		}});
		Object.defineProperty(NetStream.prototype, 'inBufferSeek', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "inBufferSeek"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "inBufferSeek"'));
		}});
		Object.defineProperty(NetStream.prototype, 'info', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "info"'));
		}});
		Object.defineProperty(NetStream.prototype, 'liveDelay', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "liveDelay"'));
		}});
		Object.defineProperty(NetStream.prototype, 'maxPauseBufferTime', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "maxPauseBufferTime"'));
		}, set:function ($$$$pauseBufferTime)
		{
			//set default parameter values
			var pauseBufferTime = $es4.$$coerce($$$$pauseBufferTime, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "maxPauseBufferTime"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastAvailabilitySendToAll', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastAvailabilitySendToAll"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastAvailabilitySendToAll"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastAvailabilityUpdatePeriod', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastAvailabilityUpdatePeriod"'));
		}, set:function ($$$$seconds)
		{
			//set default parameter values
			var seconds = $es4.$$coerce($$$$seconds, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastAvailabilityUpdatePeriod"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastFetchPeriod', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastFetchPeriod"'));
		}, set:function ($$$$seconds)
		{
			//set default parameter values
			var seconds = $es4.$$coerce($$$$seconds, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastFetchPeriod"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastInfo', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastInfo"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastPushNeighborLimit', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastPushNeighborLimit"'));
		}, set:function ($$$$neighbors)
		{
			//set default parameter values
			var neighbors = $es4.$$coerce($$$$neighbors, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastPushNeighborLimit"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastRelayMarginDuration', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastRelayMarginDuration"'));
		}, set:function ($$$$seconds)
		{
			//set default parameter values
			var seconds = $es4.$$coerce($$$$seconds, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastRelayMarginDuration"'));
		}});
		Object.defineProperty(NetStream.prototype, 'multicastWindowDuration', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastWindowDuration"'));
		}, set:function ($$$$seconds)
		{
			//set default parameter values
			var seconds = $es4.$$coerce($$$$seconds, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "multicastWindowDuration"'));
		}});
		Object.defineProperty(NetStream.prototype, 'nearNonce', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "nearNonce"'));
		}});
		Object.defineProperty(NetStream.prototype, 'objectEncoding', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "objectEncoding"'));
		}});
		Object.defineProperty(NetStream.prototype, 'peerStreams', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "peerStreams"'));
		}});
		Object.defineProperty(NetStream.prototype, 'soundTransform', {get:function ()
		{
			var $$this = this;
			return $$this.$$NetStream.$_soundTransform;
		}, set:function ($$$$soundTransform)
		{
			//set default parameter values
			var soundTransform = $es4.$$coerce($$$$soundTransform, SoundTransform);

			var $$this = this;
			$$this.$$NetStream.$_soundTransform = soundTransform;
			$$this.$__domVideoView.volume = soundTransform.volume;
		}});
		Object.defineProperty(NetStream.prototype, 'time', {get:function ()
		{
			var $$this = this;
			return Math.min($$this.$__domVideoView.currentTime, $$this.$$NetStream.$_duration);
		}});
		Object.defineProperty(NetStream.prototype, 'useHardwareDecoder', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "useHardwareDecoder"'));
		}, set:function ($$$$v)
		{
			//set default parameter values
			var v = $es4.$$coerce($$$$v, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "useHardwareDecoder"'));
		}});
		Object.defineProperty(NetStream.prototype, 'videoCodec', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoCodec"'));
		}});
		Object.defineProperty(NetStream.prototype, 'videoReliable', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoReliable"'));
		}, set:function ($$$$reliable)
		{
			//set default parameter values
			var reliable = $es4.$$coerce($$$$reliable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoReliable"'));
		}});
		Object.defineProperty(NetStream.prototype, 'videoSampleAccess', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoSampleAccess"'));
		}, set:function ($$$$reliable)
		{
			//set default parameter values
			var reliable = $es4.$$coerce($$$$reliable, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoSampleAccess"'));
		}});
		Object.defineProperty(NetStream.prototype, 'videoStreamSettings', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoStreamSettings"'));
		}, set:function ($$$$settings)
		{
			//set default parameter values
			var settings = $es4.$$coerce($$$$settings, VideoStreamSettings);

			var $$this = this;
			throw $es4.$$primitive(new Error('NetStream: attempted call to an unimplemented function "videoStreamSettings"'));
		}});

		//properties
		NetStream.prototype.$$v.$_soundTransform = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_soundTransform; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_soundTransform = $es4.$$coerce(value, SoundTransform); }
		};

		NetStream.prototype.$$v.$_wasPaused = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_wasPaused; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_wasPaused = $es4.$$coerce(value, Boolean); }
		};

		NetStream.prototype.$$v.$_wasEnded = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_wasEnded; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_wasEnded = $es4.$$coerce(value, Boolean); }
		};

		NetStream.prototype.$$v.$_endTime = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_endTime; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_endTime = $es4.$$coerce(value, Number); }
		};

		NetStream.prototype.$$v.$_realPause = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_realPause; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_realPause = $es4.$$coerce(value, Boolean); }
		};

		Object.defineProperty(NetStream.prototype, '$__suspended', {
		get:function () { var $$this = this; return $$this.$$NetStream.$__suspended; },
		set:function (value) { var $$this = this; $$this.$$NetStream.$__suspended = $es4.$$coerce(value, Boolean); }
		});

		NetStream.prototype.$$v.$_duration = {
		get:function () { var $$this = this.$$this; return $$this.$$NetStream.$$p.$_duration; },
		set:function (value) { var $$this = this.$$this; $$this.$$NetStream.$$p.$_duration = $es4.$$coerce(value, Number); }
		};

		Object.defineProperty(NetStream.prototype, '$__domVideoView', {
		get:function () { var $$this = this; return $$this.$$NetStream.$__domVideoView; },
		set:function (value) { var $$this = this; $$this.$$NetStream.$__domVideoView = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(NetStream.prototype, '$_client', {
		get:function () { var $$this = this; return $$this.$$NetStream.$_client; },
		set:function (value) { var $$this = this; $$this.$$NetStream.$_client = $es4.$$coerce(value, Object); }
		});

	});

	//class initializer
	NetStream.$$cinit = (function ()
	{
		NetStream.$$cinit = undefined;

		//initialize properties
		$$j.$__PLAYING = $es4.$$coerce('playing', String);
		$$j.$__VIDEO_CREATED = $es4.$$coerce('videoCreated', String);
	
	});

	function NetStream()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof NetStream) || $$this.$$NetStream !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], NetStream) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			NetStream.$$construct($$this, $$args);
		}
	}

	//construct
	NetStream.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (NetStream.$$cinit !== undefined) NetStream.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$NetStream', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$NetStream, '$_soundTransform', NetStream.prototype.$$v.$_soundTransform);
		Object.defineProperty($$this.$$NetStream, '$_wasPaused', NetStream.prototype.$$v.$_wasPaused);
		Object.defineProperty($$this.$$NetStream, '$_wasEnded', NetStream.prototype.$$v.$_wasEnded);
		Object.defineProperty($$this.$$NetStream, '$_endTime', NetStream.prototype.$$v.$_endTime);
		Object.defineProperty($$this.$$NetStream, '$_realPause', NetStream.prototype.$$v.$_realPause);
		Object.defineProperty($$this.$$NetStream, '$_duration', NetStream.prototype.$$v.$_duration);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		NetStream.$$iinit($$this);

		//call constructor
		if (args !== undefined) NetStream.$$constructor.apply($$this, args);
	});

	//initializer
	NetStream.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$NetStream.$$p.$_soundTransform = $es4.$$coerce($es4.$$primitive(new SoundTransform()), SoundTransform);
		$$this.$$NetStream.$$p.$_wasPaused = $es4.$$coerce(undefined, Boolean);
		$$this.$$NetStream.$$p.$_wasEnded = $es4.$$coerce(true, Boolean);
		$$this.$$NetStream.$$p.$_endTime = $es4.$$coerce(0, Number);
		$$this.$$NetStream.$$p.$_realPause = $es4.$$coerce(undefined, Boolean);
		$$this.$$NetStream.$__suspended = $es4.$$coerce(undefined, Boolean);
		$$this.$$NetStream.$$p.$_duration = $es4.$$coerce(-1, Number);
		$$this.$$NetStream.$__domVideoView = $es4.$$coerce(undefined, Object);
		$$this.$$NetStream.$_client = $es4.$$coerce(undefined, Object);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	NetStream.$$constructor = (function ($$$$connection, $$$$peerID)
	{
		var $$this = this;
		//set default parameter values
		var connection = $es4.$$coerce($$$$connection, NetConnection);
		var peerID = (1 > arguments.length - 1) ? "connectToFMS" : $es4.$$coerce($$$$peerID, String);

		EventDispatcher.$$constructor.call($$this);
		$$this.$_client = $$this;
	});

	return $es4.$$class(NetStream, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.net::NetStream');
})();
//flash.net.NetStream


//flash.net.NetStreamAppendBytesAction
$$package('flash.net').NetStreamAppendBytesAction = function () { throw new Error('Use of unimplemented class: NetStreamAppendBytesAction'); }
//flash.net.NetStreamAppendBytesAction


//flash.net.NetStreamInfo
$$package('flash.net').NetStreamInfo = function () { throw new Error('Use of unimplemented class: NetStreamInfo'); }
//flash.net.NetStreamInfo


//flash.net.NetStreamMulticastInfo
$$package('flash.net').NetStreamMulticastInfo = function () { throw new Error('Use of unimplemented class: NetStreamMulticastInfo'); }
//flash.net.NetStreamMulticastInfo


//flash.net.NetStreamPlayOptions
$$package('flash.net').NetStreamPlayOptions = function () { throw new Error('Use of unimplemented class: NetStreamPlayOptions'); }
//flash.net.NetStreamPlayOptions


//flash.net.NetStreamPlayTransitions
$$package('flash.net').NetStreamPlayTransitions = function () { throw new Error('Use of unimplemented class: NetStreamPlayTransitions'); }
//flash.net.NetStreamPlayTransitions


//flash.net.ObjectEncoding
$es4.$$package('flash.net').ObjectEncoding = (function ()
{
	//imports
	var IDynamicPropertyWriter;

	//properties
	var $$j = {};
	ObjectEncoding.AMF0 = 0;
	ObjectEncoding.AMF3 = 3;
	ObjectEncoding.DEFAULT = 3;

	//class pre initializer
	ObjectEncoding.$$sinit = (function ()
	{
		ObjectEncoding.$$sinit = undefined;

		//initialize imports
		IDynamicPropertyWriter = $es4.$$['flash.net'].IDynamicPropertyWriter;

		//set prototype and constructor
		ObjectEncoding.prototype = Object.create(Object.prototype);
		Object.defineProperty(ObjectEncoding.prototype, "constructor", { value: ObjectEncoding, enumerable: false });

		//hold private values
		Object.defineProperty(ObjectEncoding.prototype, '$$v', {value:{}});
	});

	//class initializer
	ObjectEncoding.$$cinit = (function ()
	{
		ObjectEncoding.$$cinit = undefined;
	});

	Object.defineProperty(ObjectEncoding, 'dynamicPropertyWriter', {get:function ()
	{
		if (ObjectEncoding.$$cinit !== undefined) ObjectEncoding.$$cinit();

		throw $es4.$$primitive(new Error('ObjectEncoding: attempted call to an unimplemented function "dynamicPropertyWriter"'));
	}, set:function ($$$$object)
	{
		if (ObjectEncoding.$$cinit !== undefined) ObjectEncoding.$$cinit();

		//set default parameter values
		var object = $es4.$$coerce($$$$object, IDynamicPropertyWriter);

		throw $es4.$$primitive(new Error('ObjectEncoding: attempted call to an unimplemented function "dynamicPropertyWriter"'));
	}});

	function ObjectEncoding()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ObjectEncoding) || $$this.$$ObjectEncoding !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ObjectEncoding) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ObjectEncoding.$$construct($$this, $$args);
		}
	}

	//construct
	ObjectEncoding.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ObjectEncoding.$$cinit !== undefined) ObjectEncoding.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ObjectEncoding', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ObjectEncoding.$$iinit($$this);

		//call constructor
		if (args !== undefined) ObjectEncoding.$$constructor.apply($$this, args);
	});

	//initializer
	ObjectEncoding.$$iinit = (function ($$this)
	{
	});

	//constructor
	ObjectEncoding.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('ObjectEncoding: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(ObjectEncoding, null, 'flash.net::ObjectEncoding');
})();
//flash.net.ObjectEncoding


//flash.net.Responder
$$package('flash.net').Responder = function () { throw new Error('Use of unimplemented class: Responder'); }
//flash.net.Responder


//flash.net.SecureSocket
$$package('flash.net').SecureSocket = function () { throw new Error('Use of unimplemented class: SecureSocket'); }
//flash.net.SecureSocket


//flash.net.SharedObject
$es4.$$package('flash.net').SharedObject = (function ()
{
	//imports
	var EventDispatcher;
	var NetConnection;
	var SharedObject;

	//properties
	var $$j = {};
	Object.defineProperty(SharedObject, '$_dataAssociations', {
	get:function () { if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit(); return $$j.$_dataAssociations; },
	set:function (value) { if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit(); $$j.$_dataAssociations = $es4.$$coerce(value, Object); }
	});


	//class pre initializer
	SharedObject.$$sinit = (function ()
	{
		SharedObject.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		NetConnection = $es4.$$['flash.net'].NetConnection;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		SharedObject.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(SharedObject.prototype, "constructor", { value: SharedObject, enumerable: false });

		//hold private values
		Object.defineProperty(SharedObject.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(SharedObject.prototype, 'clear', {
		get:function ()
		{
			var $$this = this;

			function clear()
			{
				for (var prop in $$this.$_data)
				{
					delete $$this.$_data[prop];
				}
				SharedObject.$_deleteCookie($$this.$_name + "___" + $$this.$_localPath);
			}

			return $$this.$$SharedObject.$$clear || ($$this.$$SharedObject.$$clear = clear);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "close"'));
			}

			return $$this.$$SharedObject.$$close || ($$this.$$SharedObject.$$close = close);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'connect', {
		get:function ()
		{
			var $$this = this;

			function connect($$$$myConnection, $$$$params)
			{
				//set default parameter values
				var myConnection = $es4.$$coerce($$$$myConnection, NetConnection);
				var params = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$params, String);

				throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "connect"'));
			}

			return $$this.$$SharedObject.$$connect || ($$this.$$SharedObject.$$connect = connect);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'flush', {
		get:function ()
		{
			var $$this = this;

			function flush($$$$minDiskSpace)
			{
				//set default parameter values
				var minDiskSpace = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$minDiskSpace, int);

				return SharedObject.$_setCookie($$this.$_name + "___" + $$this.$_localPath, JSON.stringify($$this.$_data), 99999);
			}

			return $$this.$$SharedObject.$$flush || ($$this.$$SharedObject.$$flush = flush);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'send', {
		get:function ()
		{
			var $$this = this;

			function send($$$$rest)
			{
				//set default parameter values
				for (var $$i = 0, $$length = arguments.length, rest = new Array($$length - 0); $$i < $$length; $$i += 1) rest[$$i - 0] = arguments[$$i];

				throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "send"'));
			}

			return $$this.$$SharedObject.$$send || ($$this.$$SharedObject.$$send = send);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'setDirty', {
		get:function ()
		{
			var $$this = this;

			function setDirty($$$$propertyName)
			{
				//set default parameter values
				var propertyName = $es4.$$coerce($$$$propertyName, String);

				throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "setDirty"'));
			}

			return $$this.$$SharedObject.$$setDirty || ($$this.$$SharedObject.$$setDirty = setDirty);
		}});


		//public instance method
		Object.defineProperty(SharedObject.prototype, 'setProperty', {
		get:function ()
		{
			var $$this = this;

			function setProperty($$$$propertyName, $$$$value)
			{
				//set default parameter values
				var propertyName = $es4.$$coerce($$$$propertyName, String);
				var value = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$value, Object);

				throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "setProperty"'));
			}

			return $$this.$$SharedObject.$$setProperty || ($$this.$$SharedObject.$$setProperty = setProperty);
		}});

		Object.defineProperty(SharedObject.prototype, 'client', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "client"'));
		}, set:function ($$$$object)
		{
			//set default parameter values
			var object = $es4.$$coerce($$$$object, Object);

			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "client"'));
		}});
		Object.defineProperty(SharedObject.prototype, 'data', {get:function ()
		{
			var $$this = this;
			return $$this.$_data;
		}});
		Object.defineProperty(SharedObject.prototype, 'fps', {set:function ($$$$updatesPerSecond)
		{
			//set default parameter values
			var updatesPerSecond = $es4.$$coerce($$$$updatesPerSecond, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "fps"'));
		}});
		Object.defineProperty(SharedObject.prototype, 'objectEncoding', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "objectEncoding"'));
		}, set:function ($$$$version)
		{
			//set default parameter values
			var version = $es4.$$coerce($$$$version, uint);

			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "objectEncoding"'));
		}});
		Object.defineProperty(SharedObject.prototype, 'size', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "size"'));
		}});

		//properties
		Object.defineProperty(SharedObject.prototype, '$_name', {
		get:function () { var $$this = this; return $$this.$$SharedObject.$_name; },
		set:function (value) { var $$this = this; $$this.$$SharedObject.$_name = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(SharedObject.prototype, '$_localPath', {
		get:function () { var $$this = this; return $$this.$$SharedObject.$_localPath; },
		set:function (value) { var $$this = this; $$this.$$SharedObject.$_localPath = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(SharedObject.prototype, '$_secure', {
		get:function () { var $$this = this; return $$this.$$SharedObject.$_secure; },
		set:function (value) { var $$this = this; $$this.$$SharedObject.$_secure = $es4.$$coerce(value, Boolean); }
		});

		Object.defineProperty(SharedObject.prototype, '$_data', {
		get:function () { var $$this = this; return $$this.$$SharedObject.$_data; },
		set:function (value) { var $$this = this; $$this.$$SharedObject.$_data = $es4.$$coerce(value, Object); }
		});

	});

	//class initializer
	SharedObject.$$cinit = (function ()
	{
		SharedObject.$$cinit = undefined;

		//initialize properties
		$$j.$_dataAssociations = $es4.$$coerce({}, Object);
	
	});

	//public static method
	SharedObject.deleteAll = (function ($$$$url)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var url = $es4.$$coerce($$$$url, String);

		throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "deleteAll"'));
	});

	//public static method
	SharedObject.getDiskUsage = (function ($$$$url)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var url = $es4.$$coerce($$$$url, String);

		throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "getDiskUsage"'));
	});

	//public static method
	SharedObject.getLocal = (function ($$$$name, $$$$localPath, $$$$secure)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);
		var localPath = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$localPath, String);
		var secure = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$secure, Boolean);

		return $es4.$$coerce($es4.$$primitive(new SharedObject(name, localPath, secure)), $es4.$$['flash.net'].SharedObject);
	});

	//public static method
	SharedObject.getRemote = (function ($$$$name, $$$$remotePath, $$$$persistence, $$$$secure)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);
		var remotePath = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$remotePath, String);
		var persistence = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$persistence, Object);
		var secure = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$secure, Boolean);

		throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "getRemote"'));
	});

	//protected static method
	SharedObject.$_setCookie = (function ($$$$cookie_name, $$$$cookie_value, $$$$extendDays)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var cookie_name = $es4.$$coerce($$$$cookie_name, String);
		var cookie_value = $es4.$$coerce($$$$cookie_value, String);
		var extendDays = (2 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$extendDays, int);

		var exdate = $es4.$$coerce($es4.$$primitive(new Date()), Date);
		exdate.setDate(exdate.getDate() + extendDays);
		var c_value = escape(cookie_value) + ((extendDays == -1) ? "" : "; expires=" + exdate.toUTCString());
		return $es4.$$coerce(document.cookie = cookie_name + "=" + c_value, String);
	});

	//protected static method
	SharedObject.$_deleteCookie = (function ($$$$name)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);

		document.cookie = name + '=; expires=Thu, 01 Jan 1970 00:00:01 GMT;';
	});

	//protected static method
	SharedObject.$_getCookie = (function ($$$$name)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);

		var nameEQ = name + "=";
		var ca = $es4.$$coerce(document.cookie.split(';'), Array);
		for (var i = 0; i < ca.length; i++)
		{
			var c = $es4.$$coerce(ca[i], String);
			while (c.charAt(0) == ' ')
			{
				c = c.substring(1, c.length);
			}
			if (c.indexOf(nameEQ) == 0)
			{
				return unescape(c.substring(nameEQ.length, c.length));
			}
		}
		return null;
	});
	Object.defineProperty(SharedObject, 'defaultObjectEncoding', {get:function ()
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "defaultObjectEncoding"'));
	}, set:function ($$$$version)
	{
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//set default parameter values
		var version = $es4.$$coerce($$$$version, uint);

		throw $es4.$$primitive(new Error('SharedObject: attempted call to an unimplemented function "defaultObjectEncoding"'));
	}});

	function SharedObject()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SharedObject) || $$this.$$SharedObject !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SharedObject) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SharedObject.$$construct($$this, $$args);
		}
	}

	//construct
	SharedObject.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SharedObject.$$cinit !== undefined) SharedObject.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SharedObject', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		SharedObject.$$iinit($$this);

		//call constructor
		if (args !== undefined) SharedObject.$$constructor.apply($$this, args);
	});

	//initializer
	SharedObject.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$SharedObject.$_name = $es4.$$coerce(undefined, String);
		$$this.$$SharedObject.$_localPath = $es4.$$coerce(undefined, String);
		$$this.$$SharedObject.$_secure = $es4.$$coerce(undefined, Boolean);
		$$this.$$SharedObject.$_data = $es4.$$coerce({}, Object);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	SharedObject.$$constructor = (function ($$$$name, $$$$localPath, $$$$secure)
	{
		var $$this = this;
		//set default parameter values
		var name = (0 > arguments.length - 1) ? "" : $es4.$$coerce($$$$name, String);
		var localPath = (1 > arguments.length - 1) ? "" : $es4.$$coerce($$$$localPath, String);
		var secure = (2 > arguments.length - 1) ? false : $es4.$$coerce($$$$secure, Boolean);


		EventDispatcher.$$constructor.call($$this);

		$$this.$_name = name;
		$$this.$_localPath = localPath != null ? localPath : "";
		$$this.$_secure = secure;
		if (SharedObject.$_dataAssociations[name + "___" + $$this.$_localPath])
		{
			$$this.$_data = SharedObject.$_dataAssociations[name + "___" + $$this.$_localPath];
			return;
		}
		var cookie = SharedObject.$_getCookie(name + "___" + $$this.$_localPath);
		if (cookie != null)
		{
			$$this.$_data = JSON.parse(cookie);
		}
		else
		{
			$$this.$_data = {};
		}
		SharedObject.$_dataAssociations[name + "___" + $$this.$_localPath] = $$this.$_data;
	});

	return $es4.$$class(SharedObject, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.net::SharedObject');
})();
//flash.net.SharedObject


//flash.net.SharedObjectFlushStatus
$es4.$$package('flash.net').SharedObjectFlushStatus = (function ()
{
	//properties
	var $$j = {};
	SharedObjectFlushStatus.FLUSHED = "flushed";
	SharedObjectFlushStatus.PENDING = "pending";

	//class pre initializer
	SharedObjectFlushStatus.$$sinit = (function ()
	{
		SharedObjectFlushStatus.$$sinit = undefined;

		//set prototype and constructor
		SharedObjectFlushStatus.prototype = Object.create(Object.prototype);
		Object.defineProperty(SharedObjectFlushStatus.prototype, "constructor", { value: SharedObjectFlushStatus, enumerable: false });

		//hold private values
		Object.defineProperty(SharedObjectFlushStatus.prototype, '$$v', {value:{}});
	});

	//class initializer
	SharedObjectFlushStatus.$$cinit = (function ()
	{
		SharedObjectFlushStatus.$$cinit = undefined;
	});

	function SharedObjectFlushStatus()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SharedObjectFlushStatus) || $$this.$$SharedObjectFlushStatus !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SharedObjectFlushStatus) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SharedObjectFlushStatus.$$construct($$this, $$args);
		}
	}

	//construct
	SharedObjectFlushStatus.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SharedObjectFlushStatus.$$cinit !== undefined) SharedObjectFlushStatus.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SharedObjectFlushStatus', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		SharedObjectFlushStatus.$$iinit($$this);

		//call constructor
		if (args !== undefined) SharedObjectFlushStatus.$$constructor.apply($$this, args);
	});

	//initializer
	SharedObjectFlushStatus.$$iinit = (function ($$this)
	{
	});

	//constructor
	SharedObjectFlushStatus.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(SharedObjectFlushStatus, null, 'flash.net::SharedObjectFlushStatus');
})();
//flash.net.SharedObjectFlushStatus


//flash.net.Socket
$es4.$$package('flash.net').Socket = (function ()
{
	//imports
	var IOError;
	var Event;
	var EventDispatcher;
	var IOErrorEvent;
	var ProgressEvent;
	var SecurityErrorEvent;
	var ByteArray;
	var Endian;
	var IDataInput;
	var IDataOutput;
	var clearInterval;
	var getTimer;
	var setInterval;
	var ObjectEncoding;

	//class pre initializer
	Socket.$$sinit = (function ()
	{
		Socket.$$sinit = undefined;

		//initialize imports
		IOError = $es4.$$['flash.errors'].IOError;
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		IOErrorEvent = $es4.$$['flash.events'].IOErrorEvent;
		ProgressEvent = $es4.$$['flash.events'].ProgressEvent;
		SecurityErrorEvent = $es4.$$['flash.events'].SecurityErrorEvent;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Endian = $es4.$$['flash.utils'].Endian;
		IDataInput = $es4.$$['flash.utils'].IDataInput;
		IDataOutput = $es4.$$['flash.utils'].IDataOutput;
		clearInterval = $es4.$$['flash.utils'].clearInterval;
		getTimer = $es4.$$['flash.utils'].getTimer;
		setInterval = $es4.$$['flash.utils'].setInterval;
		ObjectEncoding = $es4.$$['flash.net'].ObjectEncoding;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		Socket.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(Socket.prototype, "constructor", { value: Socket, enumerable: false });

		//hold private values
		Object.defineProperty(Socket.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Socket.prototype, 'connect', {
		get:function ()
		{
			var $$this = this;

			function connect($$$$host, $$$$port)
			{
				//set default parameter values
				var host = $es4.$$coerce($$$$host, String);
				var port = $es4.$$coerce($$$$port, int);

				if ($$this.$$Socket._socket)
				{
					throw $es4.$$primitive(new Error('socket connect already called'));
				}
				if ($$this.$$Socket._intervalID)
				{
					throw $es4.$$primitive(new Error('failed to close interval'));
				}
				$$this.$$Socket._writeByteArray = $es4.$$primitive(new ByteArray());
				$$this.$$Socket._writeByteArray.endian = $$this.$$Socket._endian;
				$$this.$$Socket._readByteArray = $es4.$$primitive(new ByteArray());
				$$this.$$Socket._readByteArray.endian = $$this.$$Socket._endian;
				$$this.$$Socket._connectStartTime = getTimer();
				$$this.$$Socket._intervalID = setInterval($$this.$$Socket.updateProgress, 50);
				var uri = window.URI(host);
				uri.port(port);
				if (!uri.protocol() || uri.protocol() === 'http')
				{
					uri.protocol('ws');
				}
				if (uri.protocol() === 'https')
				{
					uri.protocol('wss');
				}
				$$this.$$Socket._socket = $es4.$$primitive(new window.WebSocket(uri.toString()));
				$$this.$$Socket._socket.binaryType = 'arraybuffer';
				$$this.$$Socket._socket.onopen = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	$$this.$$Socket._socket.onopen = null;
	clearInterval($$this.$$Socket._intervalID);
	$$this.$$Socket._intervalID = 0;
	$$this.$$Socket._connected = true;
	$$this.dispatchEvent($es4.$$primitive(new Event(Event.CONNECT)));
}
;
				$$this.$$Socket._socket.onerror = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	if ($$this.$$Socket._connected)
	{
		$$this.dispatchEvent($es4.$$primitive(new SecurityErrorEvent(SecurityErrorEvent.SECURITY_ERROR, false, false, "SOCKET could not connect to server.")));
	}
	else
	{
		$$this.dispatchEvent($es4.$$primitive(new IOErrorEvent(IOErrorEvent.IO_ERROR, false, false, "SOCKET trouble sending and or receiving data.")));
	}
}
;
				$$this.$$Socket._socket.onmessage = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	var byteArray = $es4.$$primitive(new ByteArray());
	byteArray.$__setArrayBuffer(event.data);
	var readByteArray = $es4.$$primitive(new ByteArray());
	readByteArray.writeBytes($$this.$$Socket._readByteArray, $$this.$$Socket._readByteArray.position);
	readByteArray.writeBytes(byteArray);
	readByteArray.position = 0;
	$$this.$$Socket._readByteArray = readByteArray;
	$$this.dispatchEvent($es4.$$primitive(new ProgressEvent(ProgressEvent.SOCKET_DATA, false, false, byteArray.bytesAvailable)));
}
;
				$$this.$$Socket._socket.onclose = function ($$$$event) 
{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

	$$this.close();
	$$this.dispatchEvent($es4.$$primitive(new Event(Event.CLOSE)));
}
;
			}

			return $$this.$$Socket.$$connect || ($$this.$$Socket.$$connect = connect);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'flush', {
		get:function ()
		{
			var $$this = this;

			function flush()
			{
				if (!$$this.$$Socket._connected)
				{
					throw $es4.$$primitive(new IOError('Socket not open'));
				}
				var arrayBuffer = $$this.$$Socket._writeByteArray.$__getArrayBuffer();
				$$this.$$Socket._writeByteArray = $es4.$$primitive(new ByteArray());
				$$this.$$Socket._writeByteArray.endian = $$this.$$Socket._endian;
				$$this.$$Socket._socket.send(arrayBuffer);
			}

			return $$this.$$Socket.$$flush || ($$this.$$Socket.$$flush = flush);
		}});


		//private instance method
		Socket.prototype.$$v.updateProgress = {
		get:function ()
		{
			var $$this = this.$$this;

			function updateProgress()
			{
				if (!$$this.$$Socket._socket)
				{
					throw $es4.$$primitive(new Error('no socket'));
				}
				if ($$this.$$Socket._connected)
				{
					throw $es4.$$primitive(new Error('connected'));
				}
				var diff = getTimer() - $$this.$$Socket._connectStartTime;
				if ($$this.$$Socket._timeout > diff)
				{
					return;
				}
				$$this.close();
				throw $es4.$$primitive(new IOError('SOCKET connect timeout'));
			}

			return $$this.$$Socket.$$p.$$updateProgress || ($$this.$$Socket.$$p.$$updateProgress = updateProgress);
		}};


		//public instance method
		Object.defineProperty(Socket.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				if (!$$this.$$Socket._socket)
				{
					throw $es4.$$primitive(new IOError('socket was not open'));
				}
				$$this.$$Socket._connected = false;
				$$this.$$Socket._writeByteArray = null;
				$$this.$$Socket._readByteArray = null;
				$$this.$$Socket._connectStartTime = 0;
				if ($$this.$$Socket._intervalID)
				{
					clearInterval($$this.$$Socket._intervalID);
					$$this.$$Socket._intervalID = 0;
				}
				$$this.$$Socket._socket.onopen = null;
				$$this.$$Socket._socket.onerror = null;
				$$this.$$Socket._socket.onmessage = null;
				$$this.$$Socket._socket.onclose = null;
				$$this.$$Socket._socket.close();
				$$this.$$Socket._socket = null;
			}

			return $$this.$$Socket.$$close || ($$this.$$Socket.$$close = close);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readBoolean', {
		get:function ()
		{
			var $$this = this;

			function readBoolean()
			{
				return $$this.$$Socket._readByteArray.readBoolean();
			}

			return $$this.$$Socket.$$readBoolean || ($$this.$$Socket.$$readBoolean = readBoolean);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readByte', {
		get:function ()
		{
			var $$this = this;

			function readByte()
			{
				return $$this.$$Socket._readByteArray.readByte();
			}

			return $$this.$$Socket.$$readByte || ($$this.$$Socket.$$readByte = readByte);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readBytes', {
		get:function ()
		{
			var $$this = this;

			function readBytes($$$$bytes, $$$$offset, $$$$length)
			{
				//set default parameter values
				var bytes = $es4.$$coerce($$$$bytes, ByteArray);
				var offset = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$offset, uint);
				var length = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$length, uint);

				return $$this.$$Socket._readByteArray.readBytes(bytes, offset, length);
			}

			return $$this.$$Socket.$$readBytes || ($$this.$$Socket.$$readBytes = readBytes);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readDouble', {
		get:function ()
		{
			var $$this = this;

			function readDouble()
			{
				return $$this.$$Socket._readByteArray.readDouble();
			}

			return $$this.$$Socket.$$readDouble || ($$this.$$Socket.$$readDouble = readDouble);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readFloat', {
		get:function ()
		{
			var $$this = this;

			function readFloat()
			{
				return $$this.$$Socket._readByteArray.readFloat();
			}

			return $$this.$$Socket.$$readFloat || ($$this.$$Socket.$$readFloat = readFloat);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readInt', {
		get:function ()
		{
			var $$this = this;

			function readInt()
			{
				return $$this.$$Socket._readByteArray.readInt();
			}

			return $$this.$$Socket.$$readInt || ($$this.$$Socket.$$readInt = readInt);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readMultiByte', {
		get:function ()
		{
			var $$this = this;

			function readMultiByte($$$$length, $$$$charSet)
			{
				//set default parameter values
				var length = $es4.$$coerce($$$$length, uint);
				var charSet = $es4.$$coerce($$$$charSet, String);

				return $$this.$$Socket._readByteArray.readMultiByte(length, charSet);
			}

			return $$this.$$Socket.$$readMultiByte || ($$this.$$Socket.$$readMultiByte = readMultiByte);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readObject', {
		get:function ()
		{
			var $$this = this;

			function readObject()
			{
				return $$this.$$Socket._readByteArray.readObject();
			}

			return $$this.$$Socket.$$readObject || ($$this.$$Socket.$$readObject = readObject);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readShort', {
		get:function ()
		{
			var $$this = this;

			function readShort()
			{
				return $$this.$$Socket._readByteArray.readShort();
			}

			return $$this.$$Socket.$$readShort || ($$this.$$Socket.$$readShort = readShort);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readUnsignedByte', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedByte()
			{
				return $$this.$$Socket._readByteArray.readUnsignedByte();
			}

			return $$this.$$Socket.$$readUnsignedByte || ($$this.$$Socket.$$readUnsignedByte = readUnsignedByte);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readUnsignedInt', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedInt()
			{
				return $$this.$$Socket._readByteArray.readUnsignedInt();
			}

			return $$this.$$Socket.$$readUnsignedInt || ($$this.$$Socket.$$readUnsignedInt = readUnsignedInt);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readUnsignedShort', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedShort()
			{
				return $$this.$$Socket._readByteArray.readUnsignedShort();
			}

			return $$this.$$Socket.$$readUnsignedShort || ($$this.$$Socket.$$readUnsignedShort = readUnsignedShort);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readUTF', {
		get:function ()
		{
			var $$this = this;

			function readUTF()
			{
				return $$this.$$Socket._readByteArray.readUTF();
			}

			return $$this.$$Socket.$$readUTF || ($$this.$$Socket.$$readUTF = readUTF);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'readUTFBytes', {
		get:function ()
		{
			var $$this = this;

			function readUTFBytes($$$$length)
			{
				//set default parameter values
				var length = $es4.$$coerce($$$$length, uint);

				return $$this.$$Socket._readByteArray.readUTFBytes(length);
			}

			return $$this.$$Socket.$$readUTFBytes || ($$this.$$Socket.$$readUTFBytes = readUTFBytes);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeBoolean', {
		get:function ()
		{
			var $$this = this;

			function writeBoolean($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Boolean);

				$$this.$$Socket._writeByteArray.writeBoolean(value);
			}

			return $$this.$$Socket.$$writeBoolean || ($$this.$$Socket.$$writeBoolean = writeBoolean);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeByte', {
		get:function ()
		{
			var $$this = this;

			function writeByte($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				$$this.$$Socket._writeByteArray.writeByte(value);
			}

			return $$this.$$Socket.$$writeByte || ($$this.$$Socket.$$writeByte = writeByte);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeBytes', {
		get:function ()
		{
			var $$this = this;

			function writeBytes($$$$bytes, $$$$offset, $$$$length)
			{
				//set default parameter values
				var bytes = $es4.$$coerce($$$$bytes, ByteArray);
				var offset = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$offset, uint);
				var length = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$length, uint);

				$$this.$$Socket._writeByteArray.writeBytes(bytes, offset, length);
			}

			return $$this.$$Socket.$$writeBytes || ($$this.$$Socket.$$writeBytes = writeBytes);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeDouble', {
		get:function ()
		{
			var $$this = this;

			function writeDouble($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Number);

				$$this.$$Socket._writeByteArray.writeDouble(value);
			}

			return $$this.$$Socket.$$writeDouble || ($$this.$$Socket.$$writeDouble = writeDouble);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeFloat', {
		get:function ()
		{
			var $$this = this;

			function writeFloat($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Number);

				$$this.$$Socket._writeByteArray.writeFloat(value);
			}

			return $$this.$$Socket.$$writeFloat || ($$this.$$Socket.$$writeFloat = writeFloat);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeInt', {
		get:function ()
		{
			var $$this = this;

			function writeInt($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				$$this.$$Socket._writeByteArray.writeInt(value);
			}

			return $$this.$$Socket.$$writeInt || ($$this.$$Socket.$$writeInt = writeInt);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeMultiByte', {
		get:function ()
		{
			var $$this = this;

			function writeMultiByte($$$$value, $$$$charSet)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);
				var charSet = $es4.$$coerce($$$$charSet, String);

				$$this.$$Socket._writeByteArray.writeMultiByte(value, charSet);
			}

			return $$this.$$Socket.$$writeMultiByte || ($$this.$$Socket.$$writeMultiByte = writeMultiByte);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeObject', {
		get:function ()
		{
			var $$this = this;

			function writeObject($$$$object)
			{
				//set default parameter values
				var object = $$$$object;

				$$this.$$Socket._writeByteArray.writeObject(object);
			}

			return $$this.$$Socket.$$writeObject || ($$this.$$Socket.$$writeObject = writeObject);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeShort', {
		get:function ()
		{
			var $$this = this;

			function writeShort($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				$$this.$$Socket._writeByteArray.writeShort(value);
			}

			return $$this.$$Socket.$$writeShort || ($$this.$$Socket.$$writeShort = writeShort);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeUnsignedInt', {
		get:function ()
		{
			var $$this = this;

			function writeUnsignedInt($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, uint);

				$$this.$$Socket._writeByteArray.writeUnsignedInt(value);
			}

			return $$this.$$Socket.$$writeUnsignedInt || ($$this.$$Socket.$$writeUnsignedInt = writeUnsignedInt);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeUTF', {
		get:function ()
		{
			var $$this = this;

			function writeUTF($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);

				$$this.$$Socket._writeByteArray.writeUTF(value);
			}

			return $$this.$$Socket.$$writeUTF || ($$this.$$Socket.$$writeUTF = writeUTF);
		}});


		//public instance method
		Object.defineProperty(Socket.prototype, 'writeUTFBytes', {
		get:function ()
		{
			var $$this = this;

			function writeUTFBytes($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);

				$$this.$$Socket._writeByteArray.writeUTFBytes(value);
			}

			return $$this.$$Socket.$$writeUTFBytes || ($$this.$$Socket.$$writeUTFBytes = writeUTFBytes);
		}});

		Object.defineProperty(Socket.prototype, 'bytesAvailable', {get:function ()
		{
			var $$this = this;
			return $$this.$$Socket._readByteArray.bytesAvailable;
		}});
		Object.defineProperty(Socket.prototype, 'bytesPending', {get:function ()
		{
			var $$this = this;
			return $$this.$$Socket._writeByteArray.bytesAvailable;
		}});
		Object.defineProperty(Socket.prototype, 'connected', {get:function ()
		{
			var $$this = this;
			return $$this.$$Socket._connected;
		}});
		Object.defineProperty(Socket.prototype, 'endian', {get:function ()
		{
			var $$this = this;
			return $$this.$$Socket._endian;
		}, set:function ($$$$type)
		{
			//set default parameter values
			var type = $es4.$$coerce($$$$type, String);

			var $$this = this;
			if ($$this.$$Socket._socket)
			{
				$$this.$$Socket._writeByteArray.endian = type;
				$$this.$$Socket._readByteArray.endian = type;
			}
			$$this.$$Socket._endian = type;
		}});
		Object.defineProperty(Socket.prototype, 'objectEncoding', {get:function ()
		{
			var $$this = this;
			return ObjectEncoding.AMF3;
		}, set:function ($$$$version)
		{
			//set default parameter values
			var version = $es4.$$coerce($$$$version, uint);

			var $$this = this;
			if (version != ObjectEncoding.AMF3)
			{
				throw $es4.$$primitive(new Error('desired object encoding not supported at this time'));
			}
		}});
		Object.defineProperty(Socket.prototype, 'timeout', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Socket._timeout, uint);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$Socket._timeout = value;
		}});

		//properties
		Socket.prototype.$$v._socket = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._socket; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._socket = $es4.$$coerce(value, Object); }
		};

		Socket.prototype.$$v._writeByteArray = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._writeByteArray; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._writeByteArray = $es4.$$coerce(value, ByteArray); }
		};

		Socket.prototype.$$v._readByteArray = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._readByteArray; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._readByteArray = $es4.$$coerce(value, ByteArray); }
		};

		Socket.prototype.$$v._endian = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._endian; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._endian = $es4.$$coerce(value, String); }
		};

		Socket.prototype.$$v._connected = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._connected; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._connected = $es4.$$coerce(value, Boolean); }
		};

		Socket.prototype.$$v._connectStartTime = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._connectStartTime; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._connectStartTime = $es4.$$coerce(value, int); }
		};

		Socket.prototype.$$v._timeout = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._timeout; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._timeout = $es4.$$coerce(value, Number); }
		};

		Socket.prototype.$$v._intervalID = {
		get:function () { var $$this = this.$$this; return $$this.$$Socket.$$p._intervalID; },
		set:function (value) { var $$this = this.$$this; $$this.$$Socket.$$p._intervalID = $es4.$$coerce(value, uint); }
		};

	});

	//class initializer
	Socket.$$cinit = (function ()
	{
		Socket.$$cinit = undefined;
	});

	function Socket()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Socket) || $$this.$$Socket !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Socket) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Socket.$$construct($$this, $$args);
		}
	}

	//construct
	Socket.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Socket.$$cinit !== undefined) Socket.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Socket', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Socket, '_socket', Socket.prototype.$$v._socket);
		Object.defineProperty($$this.$$Socket, '_writeByteArray', Socket.prototype.$$v._writeByteArray);
		Object.defineProperty($$this.$$Socket, '_readByteArray', Socket.prototype.$$v._readByteArray);
		Object.defineProperty($$this.$$Socket, '_endian', Socket.prototype.$$v._endian);
		Object.defineProperty($$this.$$Socket, '_connected', Socket.prototype.$$v._connected);
		Object.defineProperty($$this.$$Socket, '_connectStartTime', Socket.prototype.$$v._connectStartTime);
		Object.defineProperty($$this.$$Socket, '_timeout', Socket.prototype.$$v._timeout);
		Object.defineProperty($$this.$$Socket, '_intervalID', Socket.prototype.$$v._intervalID);

		//private instance method
		Object.defineProperty($$this.$$Socket, 'updateProgress', Socket.prototype.$$v.updateProgress);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		Socket.$$iinit($$this);

		//call constructor
		if (args !== undefined) Socket.$$constructor.apply($$this, args);
	});

	//initializer
	Socket.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Socket.$$p._socket = $es4.$$coerce(undefined, Object);
		$$this.$$Socket.$$p._writeByteArray = $es4.$$coerce(undefined, ByteArray);
		$$this.$$Socket.$$p._readByteArray = $es4.$$coerce(undefined, ByteArray);
		$$this.$$Socket.$$p._endian = $es4.$$coerce(Endian.BIG_ENDIAN, String);
		$$this.$$Socket.$$p._connected = $es4.$$coerce(false, Boolean);
		$$this.$$Socket.$$p._connectStartTime = $es4.$$coerce(undefined, int);
		$$this.$$Socket.$$p._timeout = $es4.$$coerce(20000, Number);
		$$this.$$Socket.$$p._intervalID = $es4.$$coerce(undefined, uint);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	Socket.$$constructor = (function ($$$$host, $$$$port)
	{
		var $$this = this;
		//set default parameter values
		var host = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$host, String);
		var port = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$port, int);


		EventDispatcher.$$constructor.call($$this);

		if (host !== null)
		{
			$$this.connect(host, port);
		}
	});

	return $es4.$$class(Socket, {EXTENDS:'flash.events.EventDispatcher', IMPLEMENTS:['flash.utils.IDataInput', 'flash.utils.IDataOutput']}, 'flash.net::Socket');
})();
//flash.net.Socket


//flash.net.URLLoader
$es4.$$package('flash.net').URLLoader = (function ()
{
	//imports
	var Event;
	var EventDispatcher;
	var HTTPStatusEvent;
	var IOErrorEvent;
	var ProgressEvent;
	var ByteArray;
	var Browser;
	var URLRequest;

	//class pre initializer
	URLLoader.$$sinit = (function ()
	{
		URLLoader.$$sinit = undefined;

		//initialize imports
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		HTTPStatusEvent = $es4.$$['flash.events'].HTTPStatusEvent;
		IOErrorEvent = $es4.$$['flash.events'].IOErrorEvent;
		ProgressEvent = $es4.$$['flash.events'].ProgressEvent;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		Browser = $es4.$$['browser'].Browser;
		URLRequest = $es4.$$['flash.net'].URLRequest;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		URLLoader.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(URLLoader.prototype, "constructor", { value: URLLoader, enumerable: false });

		//hold private values
		Object.defineProperty(URLLoader.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(URLLoader.prototype, 'load', {
		get:function ()
		{
			var $$this = this;

			function load($$$$request)
			{
				//set default parameter values
				var request = $es4.$$coerce($$$$request, URLRequest);

				if (!request || !request.url)
				{
					throw $es4.$$primitive(new TypeError('request or request.url is null'));
				}
				var dataFormat = $es4.$$coerce($$this.dataFormat, String);
				var a = document.createElement('a');
				a.href = request.url;
				var parts = $es4.$$coerce(a.pathname.split('.'), Array);
				var suffix = $es4.$$coerce(parts.pop().toLowerCase(), String);
				if (suffix == 'js' && window.loaderInfoParams && (!window.loaderInfoParams['debug'] && !window.loaderInfoParams['trace']))
				{
					parts.push('min');
					parts.push('js');
					a.pathname = parts.join('.');
				}
				var src = null;
				var regex = /^(?:\/|[a-z]+:\/\/)/;
				if (regex.test(request.url))
				{
					src = $es4.$$coerce(a.href, String);
				}
				else
				{
					var location = window.location;
					parts = $es4.$$coerce(location.pathname.split('/'), Array);
					parts.pop();
					var slocation = parts.join('/');
					src = $es4.$$coerce((a.pathname.indexOf(slocation) == -1) ? (location.pathname + '/../' + a.pathname + a.search + a.hash) : a.href, String);
				}
				$$this.$$URLLoader._xmlHttpRequest = Browser.getNewXMLHttpRequest();
				$$this.$$URLLoader._xmlHttpRequest.onload = onLoad;
				$$this.$$URLLoader._xmlHttpRequest.onprogress = onProgress;
				$$this.$$URLLoader._xmlHttpRequest.onerror = onError;
				$$this.$$URLLoader._xmlHttpRequest.open(request.method, src, true);
				if (dataFormat == 'text')
				{
					$$this.$$URLLoader._xmlHttpRequest.overrideMimeType('text/plain');
				}
				else
				{
					$$this.$$URLLoader._xmlHttpRequest.responseType = 'arraybuffer';
				}
				var requestdata = request.data;
				if (requestdata && $es4.$$is(requestdata, ByteArray))
				{
					requestdata = $es4.$$primitive(new window.Uint8Array(($es4.$$as($$this.data, ByteArray)).$__getArrayBuffer()));
				}
				$$this.$$URLLoader._xmlHttpRequest.send(requestdata);

				function onLoad($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

					if (!$$this.$$URLLoader._xmlHttpRequest)
					{
						return;
					}
					$$this.dispatchEvent($es4.$$primitive(new HTTPStatusEvent(HTTPStatusEvent.HTTP_STATUS, false, false, $$this.$$URLLoader._xmlHttpRequest.status)));
					if (dataFormat == 'text')
					{
						$$this.data = $$this.$$URLLoader._xmlHttpRequest.responseText;
					}
					else
					{
						var byteArray = $es4.$$primitive(new ByteArray());
						byteArray.$__setArrayBuffer($$this.$$URLLoader._xmlHttpRequest.response);
						$$this.data = byteArray;
					}
					$$this.$$URLLoader._xmlHttpRequest.onprogress = null;
					$$this.$$URLLoader._xmlHttpRequest.onload = null;
					$$this.$$URLLoader._xmlHttpRequest.onerror = null;
					$$this.$$URLLoader._xmlHttpRequest = null;
					$$this.dispatchEvent($es4.$$primitive(new Event(Event.COMPLETE)));
				}
;

				function onProgress($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

					if (!$$this.$$URLLoader._xmlHttpRequest)
					{
						return;
					}
					if (!event.lengthComputable)
					{
						return;
					}
					$$this.bytesLoaded = event.loaded;
					$$this.bytesTotal = event.total;
					$$this.dispatchEvent($es4.$$primitive(new ProgressEvent(ProgressEvent.PROGRESS, false, false, $$this.bytesLoaded, $$this.bytesTotal)));
				}
;

				function onError($$$$event) 
				{
					//set default parameter values
					var event = $es4.$$coerce($$$$event, Object);

					if (!$$this.$$URLLoader._xmlHttpRequest)
					{
						return;
					}
					$$this.close();
					$$this.dispatchEvent($es4.$$primitive(new IOErrorEvent(IOErrorEvent.IO_ERROR, false, false, event.error)));
				}
;
			}

			return $$this.$$URLLoader.$$load || ($$this.$$URLLoader.$$load = load);
		}});


		//public instance method
		Object.defineProperty(URLLoader.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				$$this.bytesLoaded = 0;
				$$this.bytesTotal = 0;
				if (!$$this.$$URLLoader._xmlHttpRequest)
				{
					return;
				}
				$$this.$$URLLoader._xmlHttpRequest.onload = null;
				$$this.$$URLLoader._xmlHttpRequest.onprogress = null;
				$$this.$$URLLoader._xmlHttpRequest.onerror = null;
				$$this.$$URLLoader._xmlHttpRequest.abort();
				$$this.$$URLLoader._xmlHttpRequest = null;
			}

			return $$this.$$URLLoader.$$close || ($$this.$$URLLoader.$$close = close);
		}});

		//properties
		URLLoader.prototype.$$v._xmlHttpRequest = {
		get:function () { var $$this = this.$$this; return $$this.$$URLLoader.$$p._xmlHttpRequest; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLLoader.$$p._xmlHttpRequest = $es4.$$coerce(value, Object); }
		};

		Object.defineProperty(URLLoader.prototype, 'bytesLoaded', {
		get:function () { var $$this = this; return $$this.$$URLLoader.bytesLoaded; },
		set:function (value) { var $$this = this; $$this.$$URLLoader.bytesLoaded = $es4.$$coerce(value, uint); }
		});

		Object.defineProperty(URLLoader.prototype, 'bytesTotal', {
		get:function () { var $$this = this; return $$this.$$URLLoader.bytesTotal; },
		set:function (value) { var $$this = this; $$this.$$URLLoader.bytesTotal = $es4.$$coerce(value, uint); }
		});

		Object.defineProperty(URLLoader.prototype, 'data', {
		get:function () { var $$this = this; return $$this.$$URLLoader.data; },
		set:function (value) { var $$this = this; $$this.$$URLLoader.data = value }
		});

		Object.defineProperty(URLLoader.prototype, 'dataFormat', {
		get:function () { var $$this = this; return $$this.$$URLLoader.dataFormat; },
		set:function (value) { var $$this = this; $$this.$$URLLoader.dataFormat = $es4.$$coerce(value, String); }
		});

	});

	//class initializer
	URLLoader.$$cinit = (function ()
	{
		URLLoader.$$cinit = undefined;
	});

	function URLLoader()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof URLLoader) || $$this.$$URLLoader !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], URLLoader) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			URLLoader.$$construct($$this, $$args);
		}
	}

	//construct
	URLLoader.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (URLLoader.$$cinit !== undefined) URLLoader.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$URLLoader', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$URLLoader, '_xmlHttpRequest', URLLoader.prototype.$$v._xmlHttpRequest);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		URLLoader.$$iinit($$this);

		//call constructor
		if (args !== undefined) URLLoader.$$constructor.apply($$this, args);
	});

	//initializer
	URLLoader.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$URLLoader.$$p._xmlHttpRequest = $es4.$$coerce(undefined, Object);
		$$this.$$URLLoader.bytesLoaded = $es4.$$coerce(undefined, uint);
		$$this.$$URLLoader.bytesTotal = $es4.$$coerce(undefined, uint);
		$$this.$$URLLoader.data = undefined;
		$$this.$$URLLoader.dataFormat = $es4.$$coerce('text', String);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	URLLoader.$$constructor = (function ($$$$request)
	{
		var $$this = this;
		//set default parameter values
		var request = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$request, URLRequest);

		EventDispatcher.$$constructor.call($$this);
		if (request)
		{
			$$this.load(request);
		}
	});

	return $es4.$$class(URLLoader, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.net::URLLoader');
})();
//flash.net.URLLoader


//flash.net.URLLoaderDataFormat
$es4.$$package('flash.net').URLLoaderDataFormat = (function ()
{
	//properties
	var $$j = {};
	URLLoaderDataFormat.BINARY = "binary";
	URLLoaderDataFormat.TEXT = "text";
	URLLoaderDataFormat.VARIABLES = "variables";

	//class pre initializer
	URLLoaderDataFormat.$$sinit = (function ()
	{
		URLLoaderDataFormat.$$sinit = undefined;

		//set prototype and constructor
		URLLoaderDataFormat.prototype = Object.create(Object.prototype);
		Object.defineProperty(URLLoaderDataFormat.prototype, "constructor", { value: URLLoaderDataFormat, enumerable: false });

		//hold private values
		Object.defineProperty(URLLoaderDataFormat.prototype, '$$v', {value:{}});
	});

	//class initializer
	URLLoaderDataFormat.$$cinit = (function ()
	{
		URLLoaderDataFormat.$$cinit = undefined;
	});

	function URLLoaderDataFormat()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof URLLoaderDataFormat) || $$this.$$URLLoaderDataFormat !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], URLLoaderDataFormat) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			URLLoaderDataFormat.$$construct($$this, $$args);
		}
	}

	//construct
	URLLoaderDataFormat.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (URLLoaderDataFormat.$$cinit !== undefined) URLLoaderDataFormat.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$URLLoaderDataFormat', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		URLLoaderDataFormat.$$iinit($$this);

		//call constructor
		if (args !== undefined) URLLoaderDataFormat.$$constructor.apply($$this, args);
	});

	//initializer
	URLLoaderDataFormat.$$iinit = (function ($$this)
	{
	});

	//constructor
	URLLoaderDataFormat.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(URLLoaderDataFormat, null, 'flash.net::URLLoaderDataFormat');
})();
//flash.net.URLLoaderDataFormat


//flash.net.URLRequest
$es4.$$package('flash.net').URLRequest = (function ()
{
	//imports
	var URLRequestMethod;

	//class pre initializer
	URLRequest.$$sinit = (function ()
	{
		URLRequest.$$sinit = undefined;

		//initialize imports
		URLRequestMethod = $es4.$$['flash.net'].URLRequestMethod;

		//set prototype and constructor
		URLRequest.prototype = Object.create(Object.prototype);
		Object.defineProperty(URLRequest.prototype, "constructor", { value: URLRequest, enumerable: false });

		//hold private values
		Object.defineProperty(URLRequest.prototype, '$$v', {value:{}});

		Object.defineProperty(URLRequest.prototype, 'contentType', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._contentType;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$URLRequest._contentType = value;
		}});
		Object.defineProperty(URLRequest.prototype, 'data', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._data;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$URLRequest._data = value;
		}});
		Object.defineProperty(URLRequest.prototype, 'digest', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._digest;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$URLRequest._digest = value;
		}});
		Object.defineProperty(URLRequest.prototype, 'method', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._method;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$URLRequest._method = value;
		}});
		Object.defineProperty(URLRequest.prototype, 'requestHeaders', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._requestHeaders;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Array);

			var $$this = this;
			$$this.$$URLRequest._requestHeaders = value;
		}});
		Object.defineProperty(URLRequest.prototype, 'url', {get:function ()
		{
			var $$this = this;
			return $$this.$$URLRequest._url;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$URLRequest._url = value;
		}});

		//properties
		URLRequest.prototype.$$v._method = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._method; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._method = $es4.$$coerce(value, String); }
		};

		URLRequest.prototype.$$v._url = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._url; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._url = $es4.$$coerce(value, String); }
		};

		URLRequest.prototype.$$v._requestHeaders = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._requestHeaders; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._requestHeaders = $es4.$$coerce(value, Array); }
		};

		URLRequest.prototype.$$v._digest = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._digest; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._digest = $es4.$$coerce(value, String); }
		};

		URLRequest.prototype.$$v._data = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._data; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._data = $es4.$$coerce(value, Object); }
		};

		URLRequest.prototype.$$v._contentType = {
		get:function () { var $$this = this.$$this; return $$this.$$URLRequest.$$p._contentType; },
		set:function (value) { var $$this = this.$$this; $$this.$$URLRequest.$$p._contentType = $es4.$$coerce(value, String); }
		};

	});

	//class initializer
	URLRequest.$$cinit = (function ()
	{
		URLRequest.$$cinit = undefined;
	});

	function URLRequest()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof URLRequest) || $$this.$$URLRequest !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], URLRequest) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			URLRequest.$$construct($$this, $$args);
		}
	}

	//construct
	URLRequest.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (URLRequest.$$cinit !== undefined) URLRequest.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$URLRequest', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$URLRequest, '_method', URLRequest.prototype.$$v._method);
		Object.defineProperty($$this.$$URLRequest, '_url', URLRequest.prototype.$$v._url);
		Object.defineProperty($$this.$$URLRequest, '_requestHeaders', URLRequest.prototype.$$v._requestHeaders);
		Object.defineProperty($$this.$$URLRequest, '_digest', URLRequest.prototype.$$v._digest);
		Object.defineProperty($$this.$$URLRequest, '_data', URLRequest.prototype.$$v._data);
		Object.defineProperty($$this.$$URLRequest, '_contentType', URLRequest.prototype.$$v._contentType);

		//initialize properties
		URLRequest.$$iinit($$this);

		//call constructor
		if (args !== undefined) URLRequest.$$constructor.apply($$this, args);
	});

	//initializer
	URLRequest.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$URLRequest.$$p._method = $es4.$$coerce(undefined, String);
		$$this.$$URLRequest.$$p._url = $es4.$$coerce(undefined, String);
		$$this.$$URLRequest.$$p._requestHeaders = $es4.$$coerce(undefined, Array);
		$$this.$$URLRequest.$$p._digest = $es4.$$coerce(undefined, String);
		$$this.$$URLRequest.$$p._data = $es4.$$coerce(undefined, Object);
		$$this.$$URLRequest.$$p._contentType = $es4.$$coerce(undefined, String);
	
	});

	//constructor
	URLRequest.$$constructor = (function ($$$$url)
	{
		var $$this = this;
		//set default parameter values
		var url = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$url, String);

		$$this.$$URLRequest._method = URLRequestMethod.GET;
		$$this.$$URLRequest._url = url;
	});

	return $es4.$$class(URLRequest, null, 'flash.net::URLRequest');
})();
//flash.net.URLRequest


//flash.net.URLRequestHeader
$$package('flash.net').URLRequestHeader = function () { throw new Error('Use of unimplemented class: URLRequestHeader'); }
//flash.net.URLRequestHeader


//flash.net.URLRequestMethod
$es4.$$package('flash.net').URLRequestMethod = (function ()
{
	//properties
	var $$j = {};
	URLRequestMethod.DELETE = "DELETE";
	URLRequestMethod.GET = "GET";
	URLRequestMethod.HEAD = "HEAD";
	URLRequestMethod.OPTIONS = "OPTIONS";
	URLRequestMethod.POST = "POST";
	URLRequestMethod.PUT = "PUT";

	//class pre initializer
	URLRequestMethod.$$sinit = (function ()
	{
		URLRequestMethod.$$sinit = undefined;

		//set prototype and constructor
		URLRequestMethod.prototype = Object.create(Object.prototype);
		Object.defineProperty(URLRequestMethod.prototype, "constructor", { value: URLRequestMethod, enumerable: false });

		//hold private values
		Object.defineProperty(URLRequestMethod.prototype, '$$v', {value:{}});
	});

	//class initializer
	URLRequestMethod.$$cinit = (function ()
	{
		URLRequestMethod.$$cinit = undefined;
	});

	function URLRequestMethod()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof URLRequestMethod) || $$this.$$URLRequestMethod !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], URLRequestMethod) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			URLRequestMethod.$$construct($$this, $$args);
		}
	}

	//construct
	URLRequestMethod.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (URLRequestMethod.$$cinit !== undefined) URLRequestMethod.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$URLRequestMethod', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		URLRequestMethod.$$iinit($$this);

		//call constructor
		if (args !== undefined) URLRequestMethod.$$constructor.apply($$this, args);
	});

	//initializer
	URLRequestMethod.$$iinit = (function ($$this)
	{
	});

	//constructor
	URLRequestMethod.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(URLRequestMethod, null, 'flash.net::URLRequestMethod');
})();
//flash.net.URLRequestMethod


//flash.net.URLStream
$$package('flash.net').URLStream = function () { throw new Error('Use of unimplemented class: URLStream'); }
//flash.net.URLStream


//flash.net.URLVariables
$es4.$$package('flash.net').URLVariables = (function ()
{
	//class pre initializer
	URLVariables.$$sinit = (function ()
	{
		URLVariables.$$sinit = undefined;

		//set prototype and constructor
		URLVariables.prototype = Object.create(Object.prototype);
		Object.defineProperty(URLVariables.prototype, "constructor", { value: URLVariables, enumerable: false });

		//hold private values
		Object.defineProperty(URLVariables.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(URLVariables.prototype, 'decode', {
		get:function ()
		{
			var $$this = this;

			function decode($$$$source)
			{
				//set default parameter values
				var source = $es4.$$coerce($$$$source, String);

				throw $es4.$$primitive(new Error('URLVariables: attempted call to an unimplemented function "decode"'));
			}

			return $$this.$$URLVariables.$$decode || ($$this.$$URLVariables.$$decode = decode);
		}});


		//public instance method
		Object.defineProperty(URLVariables.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('URLVariables: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$URLVariables.$$toString || ($$this.$$URLVariables.$$toString = toString);
		}});
	});

	//class initializer
	URLVariables.$$cinit = (function ()
	{
		URLVariables.$$cinit = undefined;
	});

	function URLVariables()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof URLVariables) || $$this.$$URLVariables !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], URLVariables) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			URLVariables.$$construct($$this, $$args);
		}
	}

	//construct
	URLVariables.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (URLVariables.$$cinit !== undefined) URLVariables.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$URLVariables', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		URLVariables.$$iinit($$this);

		//call constructor
		if (args !== undefined) URLVariables.$$constructor.apply($$this, args);
	});

	//initializer
	URLVariables.$$iinit = (function ($$this)
	{
	});

	//constructor
	URLVariables.$$constructor = (function ($$$$source)
	{
		var $$this = this;
		//set default parameter values
		var source = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$source, String);

	});

	return $es4.$$class(URLVariables, null, 'flash.net::URLVariables');
})();
//flash.net.URLVariables


//flash.net.XMLSocket
$es4.$$package('flash.net').XMLSocket = (function ()
{
	//imports
	var DataEvent;
	var Event;
	var EventDispatcher;
	var IOErrorEvent;
	var ProgressEvent;
	var SecurityErrorEvent;
	var Socket;

	//class pre initializer
	XMLSocket.$$sinit = (function ()
	{
		XMLSocket.$$sinit = undefined;

		//initialize imports
		DataEvent = $es4.$$['flash.events'].DataEvent;
		Event = $es4.$$['flash.events'].Event;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		IOErrorEvent = $es4.$$['flash.events'].IOErrorEvent;
		ProgressEvent = $es4.$$['flash.events'].ProgressEvent;
		SecurityErrorEvent = $es4.$$['flash.events'].SecurityErrorEvent;
		Socket = $es4.$$['flash.net'].Socket;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		XMLSocket.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(XMLSocket.prototype, "constructor", { value: XMLSocket, enumerable: false });

		//hold private values
		Object.defineProperty(XMLSocket.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(XMLSocket.prototype, 'close', {
		get:function ()
		{
			var $$this = this;

			function close()
			{
				var timeout = $es4.$$coerce($$this.$$XMLSocket._socket.timeout, int);
				$$this.$$XMLSocket._socket.removeEventListener(ProgressEvent.SOCKET_DATA, $$this.$$XMLSocket.onSocketDataEvent);
				$$this.$$XMLSocket._socket.removeEventListener(SecurityErrorEvent.SECURITY_ERROR, $$this.$$XMLSocket.onSecurityErrorEvent);
				$$this.$$XMLSocket._socket.removeEventListener(IOErrorEvent.IO_ERROR, $$this.$$XMLSocket.onIOErrorEvent);
				$$this.$$XMLSocket._socket.removeEventListener(Event.CONNECT, $$this.$$XMLSocket.onConnectEvent);
				$$this.$$XMLSocket._socket.removeEventListener(Event.CLOSE, $$this.$$XMLSocket.onCloseEvent);
				$$this.$$XMLSocket._socket.close();
				$$this.$$XMLSocket._socket = $es4.$$primitive(new Socket());
				$$this.$$XMLSocket._socket.timeout = timeout;
			}

			return $$this.$$XMLSocket.$$close || ($$this.$$XMLSocket.$$close = close);
		}});


		//public instance method
		Object.defineProperty(XMLSocket.prototype, 'connect', {
		get:function ()
		{
			var $$this = this;

			function connect($$$$host, $$$$port)
			{
				//set default parameter values
				var host = $es4.$$coerce($$$$host, String);
				var port = $es4.$$coerce($$$$port, int);

				if ($$this.$$XMLSocket._socket.hasEventListener(Event.CONNECT))
				{
					throw $es4.$$primitive(new Error('socket connect already called'));
				}
				$$this.$$XMLSocket._socket.connect(host, port);
				$$this.$$XMLSocket._socket.addEventListener(ProgressEvent.SOCKET_DATA, $$this.$$XMLSocket.onSocketDataEvent);
				$$this.$$XMLSocket._socket.addEventListener(SecurityErrorEvent.SECURITY_ERROR, $$this.$$XMLSocket.onSecurityErrorEvent);
				$$this.$$XMLSocket._socket.addEventListener(IOErrorEvent.IO_ERROR, $$this.$$XMLSocket.onIOErrorEvent);
				$$this.$$XMLSocket._socket.addEventListener(Event.CONNECT, $$this.$$XMLSocket.onConnectEvent);
				$$this.$$XMLSocket._socket.addEventListener(Event.CLOSE, $$this.$$XMLSocket.onCloseEvent);
			}

			return $$this.$$XMLSocket.$$connect || ($$this.$$XMLSocket.$$connect = connect);
		}});


		//private instance method
		XMLSocket.prototype.$$v.onSocketDataEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function onSocketDataEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, ProgressEvent);

				var data = $$this.$$XMLSocket._socket.readUTFBytes($$this.$$XMLSocket._socket.bytesAvailable);
				$$this.$$XMLSocket._socket.readByte();
				$$this.dispatchEvent($es4.$$primitive(new DataEvent(DataEvent.DATA, false, false, data)));
			}

			return $$this.$$XMLSocket.$$p.$$onSocketDataEvent || ($$this.$$XMLSocket.$$p.$$onSocketDataEvent = onSocketDataEvent);
		}};


		//private instance method
		XMLSocket.prototype.$$v.onSecurityErrorEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function onSecurityErrorEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, SecurityErrorEvent);

				$$this.dispatchEvent($es4.$$primitive(new SecurityErrorEvent(SecurityErrorEvent.SECURITY_ERROR, false, false, "XMLSOCKET could not connect to server.")));
			}

			return $$this.$$XMLSocket.$$p.$$onSecurityErrorEvent || ($$this.$$XMLSocket.$$p.$$onSecurityErrorEvent = onSecurityErrorEvent);
		}};


		//private instance method
		XMLSocket.prototype.$$v.onIOErrorEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function onIOErrorEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, IOErrorEvent);

				$$this.dispatchEvent($es4.$$primitive(new IOErrorEvent(IOErrorEvent.IO_ERROR, false, false, "XMLSOCKET trouble sending and or receiving data.")));
			}

			return $$this.$$XMLSocket.$$p.$$onIOErrorEvent || ($$this.$$XMLSocket.$$p.$$onIOErrorEvent = onIOErrorEvent);
		}};


		//private instance method
		XMLSocket.prototype.$$v.onConnectEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function onConnectEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				$$this.dispatchEvent($es4.$$primitive(new Event(Event.CONNECT)));
			}

			return $$this.$$XMLSocket.$$p.$$onConnectEvent || ($$this.$$XMLSocket.$$p.$$onConnectEvent = onConnectEvent);
		}};


		//private instance method
		XMLSocket.prototype.$$v.onCloseEvent = {
		get:function ()
		{
			var $$this = this.$$this;

			function onCloseEvent($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Event);

				$$this.close();
				$$this.dispatchEvent($es4.$$primitive(new Event(Event.CLOSE)));
			}

			return $$this.$$XMLSocket.$$p.$$onCloseEvent || ($$this.$$XMLSocket.$$p.$$onCloseEvent = onCloseEvent);
		}};


		//public instance method
		Object.defineProperty(XMLSocket.prototype, 'send', {
		get:function ()
		{
			var $$this = this;

			function send($$$$object)
			{
				//set default parameter values
				var object = $$$$object;

				$$this.$$XMLSocket._socket.writeUTFBytes(object.toString());
				$$this.$$XMLSocket._socket.writeByte(0);
			}

			return $$this.$$XMLSocket.$$send || ($$this.$$XMLSocket.$$send = send);
		}});

		Object.defineProperty(XMLSocket.prototype, 'connected', {get:function ()
		{
			var $$this = this;
			return $$this.$$XMLSocket._socket.connected;
		}});
		Object.defineProperty(XMLSocket.prototype, 'timeout', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$XMLSocket._socket.timeout, int);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			$$this.$$XMLSocket._socket.timeout = value;
		}});

		//properties
		XMLSocket.prototype.$$v._socket = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLSocket.$$p._socket; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLSocket.$$p._socket = $es4.$$coerce(value, Socket); }
		};

	});

	//class initializer
	XMLSocket.$$cinit = (function ()
	{
		XMLSocket.$$cinit = undefined;
	});

	function XMLSocket()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XMLSocket) || $$this.$$XMLSocket !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XMLSocket) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XMLSocket.$$construct($$this, $$args);
		}
	}

	//construct
	XMLSocket.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XMLSocket.$$cinit !== undefined) XMLSocket.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XMLSocket', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$XMLSocket, '_socket', XMLSocket.prototype.$$v._socket);

		//private instance method
		Object.defineProperty($$this.$$XMLSocket, 'onSocketDataEvent', XMLSocket.prototype.$$v.onSocketDataEvent);

		//private instance method
		Object.defineProperty($$this.$$XMLSocket, 'onSecurityErrorEvent', XMLSocket.prototype.$$v.onSecurityErrorEvent);

		//private instance method
		Object.defineProperty($$this.$$XMLSocket, 'onIOErrorEvent', XMLSocket.prototype.$$v.onIOErrorEvent);

		//private instance method
		Object.defineProperty($$this.$$XMLSocket, 'onConnectEvent', XMLSocket.prototype.$$v.onConnectEvent);

		//private instance method
		Object.defineProperty($$this.$$XMLSocket, 'onCloseEvent', XMLSocket.prototype.$$v.onCloseEvent);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		XMLSocket.$$iinit($$this);

		//call constructor
		if (args !== undefined) XMLSocket.$$constructor.apply($$this, args);
	});

	//initializer
	XMLSocket.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$XMLSocket.$$p._socket = $es4.$$coerce(undefined, Socket);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	XMLSocket.$$constructor = (function ($$$$host, $$$$port)
	{
		var $$this = this;
		//set default parameter values
		var host = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$host, String);
		var port = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$port, int);


		EventDispatcher.$$constructor.call($$this);

		$$this.$$XMLSocket._socket = $es4.$$primitive(new Socket());
		if (host)
		{
			$$this.connect(host, port);
		}
	});

	return $es4.$$class(XMLSocket, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.net::XMLSocket');
})();
//flash.net.XMLSocket


//flash.printing.PrintJob
$es4.$$package('flash.printing').PrintJob = (function ()
{
	//imports
	var Sprite;
	var EventDispatcher;
	var Rectangle;
	var PrintJobOptions;

	//class pre initializer
	PrintJob.$$sinit = (function ()
	{
		PrintJob.$$sinit = undefined;

		//initialize imports
		Sprite = $es4.$$['flash.display'].Sprite;
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		PrintJobOptions = $es4.$$['flash.printing'].PrintJobOptions;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		PrintJob.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(PrintJob.prototype, "constructor", { value: PrintJob, enumerable: false });

		//hold private values
		Object.defineProperty(PrintJob.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(PrintJob.prototype, 'addPage', {
		get:function ()
		{
			var $$this = this;

			function addPage($$$$sprite, $$$$printArea, $$$$options, $$$$frameNum)
			{
				//set default parameter values
				var sprite = $es4.$$coerce($$$$sprite, Sprite);
				var printArea = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$printArea, Rectangle);
				var options = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$options, PrintJobOptions);
				var frameNum = (3 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$frameNum, int);

				$$this.$$PrintJob.$_pages.push({sprite:sprite, printArea:printArea, options:options, frameNum:frameNum});
			}

			return $$this.$$PrintJob.$$addPage || ($$this.$$PrintJob.$$addPage = addPage);
		}});


		//public instance method
		Object.defineProperty(PrintJob.prototype, 'send', {
		get:function ()
		{
			var $$this = this;

			function send()
			{
				for (var i = $es4.$$coerce($$this.$$PrintJob.$_pages.length, int); i--;)
				{
					$$this.$$PrintJob.$_pages[i].sprite.$__domView.classList.add('printable');
				}
				window.print();
			}

			return $$this.$$PrintJob.$$send || ($$this.$$PrintJob.$$send = send);
		}});


		//public instance method
		Object.defineProperty(PrintJob.prototype, 'start', {
		get:function ()
		{
			var $$this = this;

			function start()
			{
				var nodes = window.document.querySelectorAll('.printable');
				for (var i = $es4.$$coerce(nodes.length, Number); i--;)
				{
					nodes[i].classList.remove('printable');
				}
				return true;
			}

			return $$this.$$PrintJob.$$start || ($$this.$$PrintJob.$$start = start);
		}});

		Object.defineProperty(PrintJob.prototype, 'orientation', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('PrintJob: attempted call to an unimplemented function "orientation"'));
		}});
		Object.defineProperty(PrintJob.prototype, 'pageHeight', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('PrintJob: attempted call to an unimplemented function "pageHeight"'));
		}});
		Object.defineProperty(PrintJob.prototype, 'pageWidth', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('PrintJob: attempted call to an unimplemented function "pageWidth"'));
		}});
		Object.defineProperty(PrintJob.prototype, 'paperHeight', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('PrintJob: attempted call to an unimplemented function "paperHeight"'));
		}});
		Object.defineProperty(PrintJob.prototype, 'paperWidth', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('PrintJob: attempted call to an unimplemented function "paperWidth"'));
		}});

		//properties
		PrintJob.prototype.$$v.$_pages = {
		get:function () { var $$this = this.$$this; return $$this.$$PrintJob.$$p.$_pages; },
		set:function (value) { var $$this = this.$$this; $$this.$$PrintJob.$$p.$_pages = $es4.$$coerce(value, Array); }
		};

	});

	//class initializer
	PrintJob.$$cinit = (function ()
	{
		PrintJob.$$cinit = undefined;
	});

	Object.defineProperty(PrintJob, 'isSupported', {get:function ()
	{
		if (PrintJob.$$cinit !== undefined) PrintJob.$$cinit();

		return true;
	}});

	function PrintJob()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof PrintJob) || $$this.$$PrintJob !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], PrintJob) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			PrintJob.$$construct($$this, $$args);
		}
	}

	//construct
	PrintJob.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (PrintJob.$$cinit !== undefined) PrintJob.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$PrintJob', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$PrintJob, '$_pages', PrintJob.prototype.$$v.$_pages);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		PrintJob.$$iinit($$this);

		//call constructor
		if (args !== undefined) PrintJob.$$constructor.apply($$this, args);
	});

	//initializer
	PrintJob.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$PrintJob.$$p.$_pages = $es4.$$coerce([], Array);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	PrintJob.$$constructor = (function ()
	{
		var $$this = this;

		EventDispatcher.$$constructor.call($$this);
	});

	return $es4.$$class(PrintJob, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.printing::PrintJob');
})();
//flash.printing.PrintJob


//flash.printing.PrintJobOptions
$es4.$$package('flash.printing').PrintJobOptions = (function ()
{
	//class pre initializer
	PrintJobOptions.$$sinit = (function ()
	{
		PrintJobOptions.$$sinit = undefined;

		//set prototype and constructor
		PrintJobOptions.prototype = Object.create(Object.prototype);
		Object.defineProperty(PrintJobOptions.prototype, "constructor", { value: PrintJobOptions, enumerable: false });

		//hold private values
		Object.defineProperty(PrintJobOptions.prototype, '$$v', {value:{}});

		//properties
		Object.defineProperty(PrintJobOptions.prototype, 'printAsBitmap', {
		get:function () { var $$this = this; return $$this.$$PrintJobOptions.printAsBitmap; },
		set:function (value) { var $$this = this; $$this.$$PrintJobOptions.printAsBitmap = $es4.$$coerce(value, Boolean); }
		});

	});

	//class initializer
	PrintJobOptions.$$cinit = (function ()
	{
		PrintJobOptions.$$cinit = undefined;
	});

	function PrintJobOptions()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof PrintJobOptions) || $$this.$$PrintJobOptions !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], PrintJobOptions) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			PrintJobOptions.$$construct($$this, $$args);
		}
	}

	//construct
	PrintJobOptions.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (PrintJobOptions.$$cinit !== undefined) PrintJobOptions.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$PrintJobOptions', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		PrintJobOptions.$$iinit($$this);

		//call constructor
		if (args !== undefined) PrintJobOptions.$$constructor.apply($$this, args);
	});

	//initializer
	PrintJobOptions.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$PrintJobOptions.printAsBitmap = $es4.$$coerce(undefined, Boolean);
	
	});

	//constructor
	PrintJobOptions.$$constructor = (function ($$$$printAsBitmap)
	{
		var $$this = this;
		//set default parameter values
		var printAsBitmap = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$printAsBitmap, Boolean);

	});

	return $es4.$$class(PrintJobOptions, null, 'flash.printing::PrintJobOptions');
})();
//flash.printing.PrintJobOptions


//flash.printing.PrintJobOrientation
$es4.$$package('flash.printing').PrintJobOrientation = (function ()
{
	//properties
	var $$j = {};
	PrintJobOrientation.LANDSCAPE = "landscape";
	PrintJobOrientation.PORTRAIT = "portrait";

	//class pre initializer
	PrintJobOrientation.$$sinit = (function ()
	{
		PrintJobOrientation.$$sinit = undefined;

		//set prototype and constructor
		PrintJobOrientation.prototype = Object.create(Object.prototype);
		Object.defineProperty(PrintJobOrientation.prototype, "constructor", { value: PrintJobOrientation, enumerable: false });

		//hold private values
		Object.defineProperty(PrintJobOrientation.prototype, '$$v', {value:{}});
	});

	//class initializer
	PrintJobOrientation.$$cinit = (function ()
	{
		PrintJobOrientation.$$cinit = undefined;
	});

	function PrintJobOrientation()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof PrintJobOrientation) || $$this.$$PrintJobOrientation !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], PrintJobOrientation) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			PrintJobOrientation.$$construct($$this, $$args);
		}
	}

	//construct
	PrintJobOrientation.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (PrintJobOrientation.$$cinit !== undefined) PrintJobOrientation.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$PrintJobOrientation', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		PrintJobOrientation.$$iinit($$this);

		//call constructor
		if (args !== undefined) PrintJobOrientation.$$constructor.apply($$this, args);
	});

	//initializer
	PrintJobOrientation.$$iinit = (function ($$this)
	{
	});

	//constructor
	PrintJobOrientation.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(PrintJobOrientation, null, 'flash.printing::PrintJobOrientation');
})();
//flash.printing.PrintJobOrientation


//flash.sampler.Accelerometer
$$package('flash.sampler').Accelerometer = function () { throw new Error('Use of unimplemented class: Accelerometer'); }
//flash.sampler.Accelerometer


//flash.sampler.CertificateStatus
$$package('flash.sampler').CertificateStatus = function () { throw new Error('Use of unimplemented class: CertificateStatus'); }
//flash.sampler.CertificateStatus


//flash.sampler.DeleteObjectSample
$$package('flash.sampler').DeleteObjectSample = function () { throw new Error('Use of unimplemented class: DeleteObjectSample'); }
//flash.sampler.DeleteObjectSample


//flash.sampler.NewObjectSample
$$package('flash.sampler').NewObjectSample = function () { throw new Error('Use of unimplemented class: NewObjectSample'); }
//flash.sampler.NewObjectSample


//flash.sampler.Sample
$$package('flash.sampler').Sample = function () { throw new Error('Use of unimplemented class: Sample'); }
//flash.sampler.Sample


//flash.sampler.StackFrame
$$package('flash.sampler').StackFrame = function () { throw new Error('Use of unimplemented class: StackFrame'); }
//flash.sampler.StackFrame


//flash.security.CertificateStatus
$$package('flash.security').CertificateStatus = function () { throw new Error('Use of unimplemented class: CertificateStatus'); }
//flash.security.CertificateStatus


//flash.security.X509Certificate
$$package('flash.security').X509Certificate = function () { throw new Error('Use of unimplemented class: X509Certificate'); }
//flash.security.X509Certificate


//flash.sensors.Accelerometer
$$package('flash.sensors').Accelerometer = function () { throw new Error('Use of unimplemented class: Accelerometer'); }
//flash.sensors.Accelerometer


//flash.system.ApplicationDomain
$es4.$$package('flash.system').ApplicationDomain = (function ()
{
	//imports
	var Stage;
	var ByteArray;
	var getDefinitionByName;
	var ApplicationDomain;

	//class pre initializer
	ApplicationDomain.$$sinit = (function ()
	{
		ApplicationDomain.$$sinit = undefined;

		//initialize imports
		Stage = $es4.$$['flash.display'].Stage;
		ByteArray = $es4.$$['flash.utils'].ByteArray;
		getDefinitionByName = $es4.$$['flash.utils'].getDefinitionByName;

		//set prototype and constructor
		ApplicationDomain.prototype = Object.create(Object.prototype);
		Object.defineProperty(ApplicationDomain.prototype, "constructor", { value: ApplicationDomain, enumerable: false });

		//hold private values
		Object.defineProperty(ApplicationDomain.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(ApplicationDomain.prototype, 'getDefinition', {
		get:function ()
		{
			var $$this = this;

			function getDefinition($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				var definitions = $$this.$__definitions;
				if (definitions[name] !== undefined)
				{
					return definitions[name];
				}
				return $es4.$$['flash.utils'].getDefinitionByName(name);
			}

			return $$this.$$ApplicationDomain.$$getDefinition || ($$this.$$ApplicationDomain.$$getDefinition = getDefinition);
		}});


		//public instance method
		Object.defineProperty(ApplicationDomain.prototype, 'hasDefinition', {
		get:function ()
		{
			var $$this = this;

			function hasDefinition($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				throw $es4.$$primitive(new Error('ApplicationDomain: attempted call to an unimplemented function "hasDefinition"'));
			}

			return $$this.$$ApplicationDomain.$$hasDefinition || ($$this.$$ApplicationDomain.$$hasDefinition = hasDefinition);
		}});

		Object.defineProperty(ApplicationDomain.prototype, 'domainMemory', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('ApplicationDomain: attempted call to an unimplemented function "domainMemory"'));
		}, set:function ($$$$mem)
		{
			//set default parameter values
			var mem = $es4.$$coerce($$$$mem, ByteArray);

			var $$this = this;
			throw $es4.$$primitive(new Error('ApplicationDomain: attempted call to an unimplemented function "domainMemory"'));
		}});
		Object.defineProperty(ApplicationDomain.prototype, 'parentDomain', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('ApplicationDomain: attempted call to an unimplemented function "parentDomain"'));
		}});

		//properties
		Object.defineProperty(ApplicationDomain.prototype, '$__definitions', {
		get:function () { var $$this = this; return $$this.$$ApplicationDomain.$__definitions; },
		set:function (value) { var $$this = this; $$this.$$ApplicationDomain.$__definitions = $es4.$$coerce(value, Object); }
		});

	});

	//class initializer
	ApplicationDomain.$$cinit = (function ()
	{
		ApplicationDomain.$$cinit = undefined;
	});

	Object.defineProperty(ApplicationDomain, 'currentDomain', {get:function ()
	{
		if (ApplicationDomain.$$cinit !== undefined) ApplicationDomain.$$cinit();

		return Stage.$__stageReference.loaderInfo.applicationDomain;
	}});
	Object.defineProperty(ApplicationDomain, 'MIN_DOMAIN_MEMORY_LENGTH', {get:function ()
	{
		if (ApplicationDomain.$$cinit !== undefined) ApplicationDomain.$$cinit();

		throw $es4.$$primitive(new Error('ApplicationDomain: attempted call to an unimplemented function "MIN_DOMAIN_MEMORY_LENGTH"'));
	}});

	function ApplicationDomain()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ApplicationDomain) || $$this.$$ApplicationDomain !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ApplicationDomain) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ApplicationDomain.$$construct($$this, $$args);
		}
	}

	//construct
	ApplicationDomain.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ApplicationDomain.$$cinit !== undefined) ApplicationDomain.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ApplicationDomain', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		ApplicationDomain.$$iinit($$this);

		//call constructor
		if (args !== undefined) ApplicationDomain.$$constructor.apply($$this, args);
	});

	//initializer
	ApplicationDomain.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$ApplicationDomain.$__definitions = $es4.$$coerce({}, Object);
	
	});

	//constructor
	ApplicationDomain.$$constructor = (function ($$$$parentDomain)
	{
		var $$this = this;
		//set default parameter values
		var parentDomain = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$parentDomain, $es4.$$['flash.system'].ApplicationDomain);

	});

	return $es4.$$class(ApplicationDomain, null, 'flash.system::ApplicationDomain');
})();
//flash.system.ApplicationDomain


//flash.system.Capabilities
$es4.$$package('flash.system').Capabilities = (function ()
{
	//class pre initializer
	Capabilities.$$sinit = (function ()
	{
		Capabilities.$$sinit = undefined;

		//set prototype and constructor
		Capabilities.prototype = Object.create(Object.prototype);
		Object.defineProperty(Capabilities.prototype, "constructor", { value: Capabilities, enumerable: false });

		//hold private values
		Object.defineProperty(Capabilities.prototype, '$$v', {value:{}});
	});

	//class initializer
	Capabilities.$$cinit = (function ()
	{
		Capabilities.$$cinit = undefined;
	});

	//public static method
	Capabilities.hasMultiChannelAudio = (function ($$$$type)
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		//set default parameter values
		var type = $es4.$$coerce($$$$type, String);

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasMultiChannelAudio"'));
	});
	Object.defineProperty(Capabilities, 'avHardwareDisable', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "avHardwareDisable"'));
	}});
	Object.defineProperty(Capabilities, 'cpuArchitecture', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "cpuArchitecture"'));
	}});
	Object.defineProperty(Capabilities, 'hasAccessibility', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasAccessibility"'));
	}});
	Object.defineProperty(Capabilities, 'hasAudio', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasAudio"'));
	}});
	Object.defineProperty(Capabilities, 'hasAudioEncoder', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasAudioEncoder"'));
	}});
	Object.defineProperty(Capabilities, 'hasEmbeddedVideo', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasEmbeddedVideo"'));
	}});
	Object.defineProperty(Capabilities, 'hasIME', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasIME"'));
	}});
	Object.defineProperty(Capabilities, 'hasMP3', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasMP3"'));
	}});
	Object.defineProperty(Capabilities, 'hasPrinting', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasPrinting"'));
	}});
	Object.defineProperty(Capabilities, 'hasScreenBroadcast', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasScreenBroadcast"'));
	}});
	Object.defineProperty(Capabilities, 'hasScreenPlayback', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasScreenPlayback"'));
	}});
	Object.defineProperty(Capabilities, 'hasStreamingAudio', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasStreamingAudio"'));
	}});
	Object.defineProperty(Capabilities, 'hasStreamingVideo', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasStreamingVideo"'));
	}});
	Object.defineProperty(Capabilities, 'hasTLS', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasTLS"'));
	}});
	Object.defineProperty(Capabilities, 'hasVideoEncoder', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "hasVideoEncoder"'));
	}});
	Object.defineProperty(Capabilities, 'isDebugger', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "isDebugger"'));
	}});
	Object.defineProperty(Capabilities, 'isEmbeddedInAcrobat', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "isEmbeddedInAcrobat"'));
	}});
	Object.defineProperty(Capabilities, 'language', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "language"'));
	}});
	Object.defineProperty(Capabilities, 'localFileReadDisable', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "localFileReadDisable"'));
	}});
	Object.defineProperty(Capabilities, 'manufacturer', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "manufacturer"'));
	}});
	Object.defineProperty(Capabilities, 'maxLevelIDC', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "maxLevelIDC"'));
	}});
	Object.defineProperty(Capabilities, 'os', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "os"'));
	}});
	Object.defineProperty(Capabilities, 'pixelAspectRatio', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "pixelAspectRatio"'));
	}});
	Object.defineProperty(Capabilities, 'playerType', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		return 'JavaScript';
	}});
	Object.defineProperty(Capabilities, 'screenColor', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "screenColor"'));
	}});
	Object.defineProperty(Capabilities, 'screenDPI', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "screenDPI"'));
	}});
	Object.defineProperty(Capabilities, 'screenResolutionX', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "screenResolutionX"'));
	}});
	Object.defineProperty(Capabilities, 'screenResolutionY', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "screenResolutionY"'));
	}});
	Object.defineProperty(Capabilities, 'serverString', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "serverString"'));
	}});
	Object.defineProperty(Capabilities, 'supports32BitProcesses', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "supports32BitProcesses"'));
	}});
	Object.defineProperty(Capabilities, 'supports64BitProcesses', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "supports64BitProcesses"'));
	}});
	Object.defineProperty(Capabilities, 'touchscreenType', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "touchscreenType"'));
	}});
	Object.defineProperty(Capabilities, 'version', {get:function ()
	{
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented function "version"'));
	}});

	function Capabilities()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Capabilities) || $$this.$$Capabilities !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Capabilities) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Capabilities.$$construct($$this, $$args);
		}
	}

	//construct
	Capabilities.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Capabilities.$$cinit !== undefined) Capabilities.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Capabilities', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Capabilities.$$iinit($$this);

		//call constructor
		if (args !== undefined) Capabilities.$$constructor.apply($$this, args);
	});

	//initializer
	Capabilities.$$iinit = (function ($$this)
	{
	});

	//constructor
	Capabilities.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('Capabilities: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(Capabilities, null, 'flash.system::Capabilities');
})();
//flash.system.Capabilities


//flash.system.IME
$$package('flash.system').IME = function () { throw new Error('Use of unimplemented class: IME'); }
//flash.system.IME


//flash.system.IMEConversionMode
$$package('flash.system').IMEConversionMode = function () { throw new Error('Use of unimplemented class: IMEConversionMode'); }
//flash.system.IMEConversionMode


//flash.system.JPEGLoaderContext
$$package('flash.system').JPEGLoaderContext = function () { throw new Error('Use of unimplemented class: JPEGLoaderContext'); }
//flash.system.JPEGLoaderContext


//flash.system.LoaderContext
$es4.$$package('flash.system').LoaderContext = (function ()
{
	//imports
	var DisplayObjectContainer;
	var ApplicationDomain;
	var SecurityDomain;

	//class pre initializer
	LoaderContext.$$sinit = (function ()
	{
		LoaderContext.$$sinit = undefined;

		//initialize imports
		DisplayObjectContainer = $es4.$$['flash.display'].DisplayObjectContainer;
		ApplicationDomain = $es4.$$['flash.system'].ApplicationDomain;
		SecurityDomain = $es4.$$['flash.system'].SecurityDomain;

		//set prototype and constructor
		LoaderContext.prototype = Object.create(Object.prototype);
		Object.defineProperty(LoaderContext.prototype, "constructor", { value: LoaderContext, enumerable: false });

		//hold private values
		Object.defineProperty(LoaderContext.prototype, '$$v', {value:{}});

		Object.defineProperty(LoaderContext.prototype, 'allowLoadBytesCodeExecution', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderContext: attempted call to an unimplemented function "allowLoadBytesCodeExecution"'));
		}, set:function ($$$$allow)
		{
			//set default parameter values
			var allow = $es4.$$coerce($$$$allow, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('LoaderContext: attempted call to an unimplemented function "allowLoadBytesCodeExecution"'));
		}});

		//properties
		Object.defineProperty(LoaderContext.prototype, 'allowCodeImport', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.allowCodeImport; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.allowCodeImport = $es4.$$coerce(value, Boolean); }
		});

		Object.defineProperty(LoaderContext.prototype, 'applicationDomain', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.applicationDomain; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.applicationDomain = $es4.$$coerce(value, ApplicationDomain); }
		});

		Object.defineProperty(LoaderContext.prototype, 'checkPolicyFile', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.checkPolicyFile; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.checkPolicyFile = $es4.$$coerce(value, Boolean); }
		});

		Object.defineProperty(LoaderContext.prototype, 'imageDecodingPolicy', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.imageDecodingPolicy; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.imageDecodingPolicy = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(LoaderContext.prototype, 'parameters', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.parameters; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.parameters = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(LoaderContext.prototype, 'requestedContentParent', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.requestedContentParent; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.requestedContentParent = $es4.$$coerce(value, DisplayObjectContainer); }
		});

		Object.defineProperty(LoaderContext.prototype, 'securityDomain', {
		get:function () { var $$this = this; return $$this.$$LoaderContext.securityDomain; },
		set:function (value) { var $$this = this; $$this.$$LoaderContext.securityDomain = $es4.$$coerce(value, SecurityDomain); }
		});

	});

	//class initializer
	LoaderContext.$$cinit = (function ()
	{
		LoaderContext.$$cinit = undefined;
	});

	function LoaderContext()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof LoaderContext) || $$this.$$LoaderContext !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], LoaderContext) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			LoaderContext.$$construct($$this, $$args);
		}
	}

	//construct
	LoaderContext.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (LoaderContext.$$cinit !== undefined) LoaderContext.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$LoaderContext', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		LoaderContext.$$iinit($$this);

		//call constructor
		if (args !== undefined) LoaderContext.$$constructor.apply($$this, args);
	});

	//initializer
	LoaderContext.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$LoaderContext.allowCodeImport = $es4.$$coerce(undefined, Boolean);
		$$this.$$LoaderContext.applicationDomain = $es4.$$coerce(undefined, ApplicationDomain);
		$$this.$$LoaderContext.checkPolicyFile = $es4.$$coerce(undefined, Boolean);
		$$this.$$LoaderContext.imageDecodingPolicy = $es4.$$coerce(undefined, String);
		$$this.$$LoaderContext.parameters = $es4.$$coerce(undefined, Object);
		$$this.$$LoaderContext.requestedContentParent = $es4.$$coerce(undefined, DisplayObjectContainer);
		$$this.$$LoaderContext.securityDomain = $es4.$$coerce(undefined, SecurityDomain);
	
	});

	//constructor
	LoaderContext.$$constructor = (function ($$$$checkPolicyFile, $$$$applicationDomain, $$$$securityDomain)
	{
		var $$this = this;
		//set default parameter values
		var checkPolicyFile = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$checkPolicyFile, Boolean);
		var applicationDomain = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$applicationDomain, ApplicationDomain);
		var securityDomain = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$securityDomain, SecurityDomain);

		$$this.applicationDomain = applicationDomain || $es4.$$primitive(new ApplicationDomain());
	});

	return $es4.$$class(LoaderContext, null, 'flash.system::LoaderContext');
})();
//flash.system.LoaderContext


//flash.system.Security
$$package('flash.system').Security = function () { throw new Error('Use of unimplemented class: Security'); }
//flash.system.Security


//flash.system.SecurityDomain
$es4.$$package('flash.system').SecurityDomain = (function ()
{
	//imports
	var SecurityDomain;

	//class pre initializer
	SecurityDomain.$$sinit = (function ()
	{
		SecurityDomain.$$sinit = undefined;

		//initialize imports
		//set prototype and constructor
		SecurityDomain.prototype = Object.create(Object.prototype);
		Object.defineProperty(SecurityDomain.prototype, "constructor", { value: SecurityDomain, enumerable: false });

		//hold private values
		Object.defineProperty(SecurityDomain.prototype, '$$v', {value:{}});
	});

	//class initializer
	SecurityDomain.$$cinit = (function ()
	{
		SecurityDomain.$$cinit = undefined;
	});

	Object.defineProperty(SecurityDomain, 'currentDomain', {get:function ()
	{
		if (SecurityDomain.$$cinit !== undefined) SecurityDomain.$$cinit();

		return $es4.$$coerce($es4.$$primitive(new SecurityDomain()), $es4.$$['flash.system'].SecurityDomain);
	}});

	function SecurityDomain()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof SecurityDomain) || $$this.$$SecurityDomain !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], SecurityDomain) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			SecurityDomain.$$construct($$this, $$args);
		}
	}

	//construct
	SecurityDomain.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (SecurityDomain.$$cinit !== undefined) SecurityDomain.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$SecurityDomain', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		SecurityDomain.$$iinit($$this);

		//call constructor
		if (args !== undefined) SecurityDomain.$$constructor.apply($$this, args);
	});

	//initializer
	SecurityDomain.$$iinit = (function ($$this)
	{
	});

	//constructor
	SecurityDomain.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(SecurityDomain, null, 'flash.system::SecurityDomain');
})();
//flash.system.SecurityDomain


//flash.system.SecurityPanel
$$package('flash.system').SecurityPanel = function () { throw new Error('Use of unimplemented class: SecurityPanel'); }
//flash.system.SecurityPanel


//flash.system.System
$es4.$$package('flash.system').System = (function ()
{
	//imports
	var IME;

	//class pre initializer
	System.$$sinit = (function ()
	{
		System.$$sinit = undefined;

		//initialize imports
		IME = $es4.$$['flash.system'].IME;

		//set prototype and constructor
		System.prototype = Object.create(Object.prototype);
		Object.defineProperty(System.prototype, "constructor", { value: System, enumerable: false });

		//hold private values
		Object.defineProperty(System.prototype, '$$v', {value:{}});
	});

	//class initializer
	System.$$cinit = (function ()
	{
		System.$$cinit = undefined;
	});

	//public static method
	System.disposeXML = (function ($$$$node)
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		//set default parameter values
		var node = $es4.$$coerce($$$$node, XML);

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "disposeXML"'));
	});

	//public static method
	System.exit = (function ($$$$code)
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		//set default parameter values
		var code = $es4.$$coerce($$$$code, uint);

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "exit"'));
	});

	//public static method
	System.gc = (function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "gc"'));
	});

	//public static method
	System.pause = (function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "pause"'));
	});

	//public static method
	System.pauseForGCIfCollectionImminent = (function ($$$$imminence)
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		//set default parameter values
		var imminence = (0 > arguments.length - 1) ? 0.75 : $es4.$$coerce($$$$imminence, Number);

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "pauseForGCIfCollectionImminent"'));
	});

	//public static method
	System.resume = (function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "resume"'));
	});

	//public static method
	System.setClipboard = (function ($$$$string)
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		//set default parameter values
		var string = $es4.$$coerce($$$$string, String);

		if (window.mobile)
		{
			window.prompt('Press and hold over highlighted text, and then press copy.', string);
		}
		else
		{
			window.prompt('Press Ctrl+C or Cmd+C, and then click OK.', string);
		}
	});
	Object.defineProperty(System, 'freeMemory', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "freeMemory"'));
	}});
	Object.defineProperty(System, 'ime', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "ime"'));
	}});
	Object.defineProperty(System, 'privateMemory', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "privateMemory"'));
	}});
	Object.defineProperty(System, 'processCPUUsage', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "processCPUUsage"'));
	}});
	Object.defineProperty(System, 'totalMemory', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "totalMemory"'));
	}});
	Object.defineProperty(System, 'totalMemoryNumber', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "totalMemoryNumber"'));
	}});
	Object.defineProperty(System, 'useCodePage', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "useCodePage"'));
	}, set:function ($$$$value)
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "useCodePage"'));
	}});
	Object.defineProperty(System, 'vmVersion', {get:function ()
	{
		if (System.$$cinit !== undefined) System.$$cinit();

		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented function "vmVersion"'));
	}});

	function System()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof System) || $$this.$$System !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], System) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			System.$$construct($$this, $$args);
		}
	}

	//construct
	System.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (System.$$cinit !== undefined) System.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$System', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		System.$$iinit($$this);

		//call constructor
		if (args !== undefined) System.$$constructor.apply($$this, args);
	});

	//initializer
	System.$$iinit = (function ($$this)
	{
	});

	//constructor
	System.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('System: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(System, null, 'flash.system::System');
})();
//flash.system.System


//flash.system.SystemUpdater
$$package('flash.system').SystemUpdater = function () { throw new Error('Use of unimplemented class: SystemUpdater'); }
//flash.system.SystemUpdater


//flash.system.SystemUpdaterType
$$package('flash.system').SystemUpdaterType = function () { throw new Error('Use of unimplemented class: SystemUpdaterType'); }
//flash.system.SystemUpdaterType


//flash.system.TouchscreenType
$$package('flash.system').TouchscreenType = function () { throw new Error('Use of unimplemented class: TouchscreenType'); }
//flash.system.TouchscreenType


//flash.text.AntiAliasType
$es4.$$package('flash.text').AntiAliasType = (function ()
{
	//properties
	var $$j = {};
	AntiAliasType.ADVANCED = "advanced";
	AntiAliasType.NORMAL = "normal";

	//class pre initializer
	AntiAliasType.$$sinit = (function ()
	{
		AntiAliasType.$$sinit = undefined;

		//set prototype and constructor
		AntiAliasType.prototype = Object.create(Object.prototype);
		Object.defineProperty(AntiAliasType.prototype, "constructor", { value: AntiAliasType, enumerable: false });

		//hold private values
		Object.defineProperty(AntiAliasType.prototype, '$$v', {value:{}});
	});

	//class initializer
	AntiAliasType.$$cinit = (function ()
	{
		AntiAliasType.$$cinit = undefined;
	});

	function AntiAliasType()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof AntiAliasType) || $$this.$$AntiAliasType !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], AntiAliasType) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			AntiAliasType.$$construct($$this, $$args);
		}
	}

	//construct
	AntiAliasType.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (AntiAliasType.$$cinit !== undefined) AntiAliasType.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$AntiAliasType', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		AntiAliasType.$$iinit($$this);

		//call constructor
		if (args !== undefined) AntiAliasType.$$constructor.apply($$this, args);
	});

	//initializer
	AntiAliasType.$$iinit = (function ($$this)
	{
	});

	//constructor
	AntiAliasType.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(AntiAliasType, null, 'flash.text::AntiAliasType');
})();
//flash.text.AntiAliasType


//flash.text.CSMSettings
$$package('flash.text').CSMSettings = function () { throw new Error('Use of unimplemented class: CSMSettings'); }
//flash.text.CSMSettings


//flash.text.engine.BreakOpportunity
$$package('flash.text.engine').BreakOpportunity = function () { throw new Error('Use of unimplemented class: BreakOpportunity'); }
//flash.text.engine.BreakOpportunity


//flash.text.engine.CFFHinting
$$package('flash.text.engine').CFFHinting = function () { throw new Error('Use of unimplemented class: CFFHinting'); }
//flash.text.engine.CFFHinting


//flash.text.engine.ContentElement
$$package('flash.text.engine').ContentElement = function () { throw new Error('Use of unimplemented class: ContentElement'); }
//flash.text.engine.ContentElement


//flash.text.engine.DigitCase
$$package('flash.text.engine').DigitCase = function () { throw new Error('Use of unimplemented class: DigitCase'); }
//flash.text.engine.DigitCase


//flash.text.engine.DigitWidth
$$package('flash.text.engine').DigitWidth = function () { throw new Error('Use of unimplemented class: DigitWidth'); }
//flash.text.engine.DigitWidth


//flash.text.engine.EastAsianJustifier
$$package('flash.text.engine').EastAsianJustifier = function () { throw new Error('Use of unimplemented class: EastAsianJustifier'); }
//flash.text.engine.EastAsianJustifier


//flash.text.engine.ElementFormat
$$package('flash.text.engine').ElementFormat = function () { throw new Error('Use of unimplemented class: ElementFormat'); }
//flash.text.engine.ElementFormat


//flash.text.engine.FontDescription
$$package('flash.text.engine').FontDescription = function () { throw new Error('Use of unimplemented class: FontDescription'); }
//flash.text.engine.FontDescription


//flash.text.engine.FontLookup
$$package('flash.text.engine').FontLookup = function () { throw new Error('Use of unimplemented class: FontLookup'); }
//flash.text.engine.FontLookup


//flash.text.engine.FontMetrics
$$package('flash.text.engine').FontMetrics = function () { throw new Error('Use of unimplemented class: FontMetrics'); }
//flash.text.engine.FontMetrics


//flash.text.engine.FontPosture
$$package('flash.text.engine').FontPosture = function () { throw new Error('Use of unimplemented class: FontPosture'); }
//flash.text.engine.FontPosture


//flash.text.engine.FontWeight
$$package('flash.text.engine').FontWeight = function () { throw new Error('Use of unimplemented class: FontWeight'); }
//flash.text.engine.FontWeight


//flash.text.engine.GraphicElement
$$package('flash.text.engine').GraphicElement = function () { throw new Error('Use of unimplemented class: GraphicElement'); }
//flash.text.engine.GraphicElement


//flash.text.engine.GroupElement
$$package('flash.text.engine').GroupElement = function () { throw new Error('Use of unimplemented class: GroupElement'); }
//flash.text.engine.GroupElement


//flash.text.engine.JustificationStyle
$$package('flash.text.engine').JustificationStyle = function () { throw new Error('Use of unimplemented class: JustificationStyle'); }
//flash.text.engine.JustificationStyle


//flash.text.engine.Kerning
$$package('flash.text.engine').Kerning = function () { throw new Error('Use of unimplemented class: Kerning'); }
//flash.text.engine.Kerning


//flash.text.engine.LigatureLevel
$$package('flash.text.engine').LigatureLevel = function () { throw new Error('Use of unimplemented class: LigatureLevel'); }
//flash.text.engine.LigatureLevel


//flash.text.engine.LineJustification
$$package('flash.text.engine').LineJustification = function () { throw new Error('Use of unimplemented class: LineJustification'); }
//flash.text.engine.LineJustification


//flash.text.engine.RenderingMode
$$package('flash.text.engine').RenderingMode = function () { throw new Error('Use of unimplemented class: RenderingMode'); }
//flash.text.engine.RenderingMode


//flash.text.engine.SpaceJustifier
$$package('flash.text.engine').SpaceJustifier = function () { throw new Error('Use of unimplemented class: SpaceJustifier'); }
//flash.text.engine.SpaceJustifier


//flash.text.engine.TabAlignment
$$package('flash.text.engine').TabAlignment = function () { throw new Error('Use of unimplemented class: TabAlignment'); }
//flash.text.engine.TabAlignment


//flash.text.engine.TabStop
$$package('flash.text.engine').TabStop = function () { throw new Error('Use of unimplemented class: TabStop'); }
//flash.text.engine.TabStop


//flash.text.engine.TextBaseline
$$package('flash.text.engine').TextBaseline = function () { throw new Error('Use of unimplemented class: TextBaseline'); }
//flash.text.engine.TextBaseline


//flash.text.engine.TextBlock
$$package('flash.text.engine').TextBlock = function () { throw new Error('Use of unimplemented class: TextBlock'); }
//flash.text.engine.TextBlock


//flash.text.engine.TextElement
$$package('flash.text.engine').TextElement = function () { throw new Error('Use of unimplemented class: TextElement'); }
//flash.text.engine.TextElement


//flash.text.engine.TextJustifier
$$package('flash.text.engine').TextJustifier = function () { throw new Error('Use of unimplemented class: TextJustifier'); }
//flash.text.engine.TextJustifier


//flash.text.engine.TextLine
$$package('flash.text.engine').TextLine = function () { throw new Error('Use of unimplemented class: TextLine'); }
//flash.text.engine.TextLine


//flash.text.engine.TextLineCreationResult
$$package('flash.text.engine').TextLineCreationResult = function () { throw new Error('Use of unimplemented class: TextLineCreationResult'); }
//flash.text.engine.TextLineCreationResult


//flash.text.engine.TextLineMirrorRegion
$$package('flash.text.engine').TextLineMirrorRegion = function () { throw new Error('Use of unimplemented class: TextLineMirrorRegion'); }
//flash.text.engine.TextLineMirrorRegion


//flash.text.engine.TextLineValidity
$$package('flash.text.engine').TextLineValidity = function () { throw new Error('Use of unimplemented class: TextLineValidity'); }
//flash.text.engine.TextLineValidity


//flash.text.engine.TextRotation
$$package('flash.text.engine').TextRotation = function () { throw new Error('Use of unimplemented class: TextRotation'); }
//flash.text.engine.TextRotation


//flash.text.engine.TypographicCase
$$package('flash.text.engine').TypographicCase = function () { throw new Error('Use of unimplemented class: TypographicCase'); }
//flash.text.engine.TypographicCase


//flash.text.Font
$es4.$$package('flash.text').Font = (function ()
{
	//class pre initializer
	Font.$$sinit = (function ()
	{
		Font.$$sinit = undefined;

		//set prototype and constructor
		Font.prototype = Object.create(Object.prototype);
		Object.defineProperty(Font.prototype, "constructor", { value: Font, enumerable: false });

		//hold private values
		Object.defineProperty(Font.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Font.prototype, 'hasGlyphs', {
		get:function ()
		{
			var $$this = this;

			function hasGlyphs($$$$str)
			{
				//set default parameter values
				var str = $es4.$$coerce($$$$str, String);

				throw $es4.$$primitive(new Error('Font: attempted call to an unimplemented function "hasGlyphs"'));
			}

			return $$this.$$Font.$$hasGlyphs || ($$this.$$Font.$$hasGlyphs = hasGlyphs);
		}});

		Object.defineProperty(Font.prototype, 'fontName', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Font: attempted call to an unimplemented function "fontName"'));
		}});
		Object.defineProperty(Font.prototype, 'fontStyle', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Font: attempted call to an unimplemented function "fontStyle"'));
		}});
		Object.defineProperty(Font.prototype, 'fontType', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('Font: attempted call to an unimplemented function "fontType"'));
		}});
	});

	//class initializer
	Font.$$cinit = (function ()
	{
		Font.$$cinit = undefined;
	});

	//public static method
	Font.enumerateFonts = (function ($$$$enumerateDeviceFonts)
	{
		if (Font.$$cinit !== undefined) Font.$$cinit();

		//set default parameter values
		var enumerateDeviceFonts = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$enumerateDeviceFonts, Boolean);

		return [];
	});

	//public static method
	Font.registerFont = (function ($$$$font)
	{
		if (Font.$$cinit !== undefined) Font.$$cinit();

		//set default parameter values
		var font = $$$$font;

	});
	function Font()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Font) || $$this.$$Font !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Font) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Font.$$construct($$this, $$args);
		}
	}

	//construct
	Font.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Font.$$cinit !== undefined) Font.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Font', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Font.$$iinit($$this);

		//call constructor
		if (args !== undefined) Font.$$constructor.apply($$this, args);
	});

	//initializer
	Font.$$iinit = (function ($$this)
	{
	});

	//constructor
	Font.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('Font: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(Font, null, 'flash.text::Font');
})();
//flash.text.Font


//flash.text.FontStyle
$es4.$$package('flash.text').FontStyle = (function ()
{
	//properties
	var $$j = {};
	FontStyle.BOLD = "bold";
	FontStyle.BOLD_ITALIC = "boldItalic";
	FontStyle.ITALIC = "italic";
	FontStyle.REGULAR = "regular";

	//class pre initializer
	FontStyle.$$sinit = (function ()
	{
		FontStyle.$$sinit = undefined;

		//set prototype and constructor
		FontStyle.prototype = Object.create(Object.prototype);
		Object.defineProperty(FontStyle.prototype, "constructor", { value: FontStyle, enumerable: false });

		//hold private values
		Object.defineProperty(FontStyle.prototype, '$$v', {value:{}});
	});

	//class initializer
	FontStyle.$$cinit = (function ()
	{
		FontStyle.$$cinit = undefined;
	});

	function FontStyle()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof FontStyle) || $$this.$$FontStyle !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], FontStyle) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			FontStyle.$$construct($$this, $$args);
		}
	}

	//construct
	FontStyle.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (FontStyle.$$cinit !== undefined) FontStyle.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$FontStyle', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		FontStyle.$$iinit($$this);

		//call constructor
		if (args !== undefined) FontStyle.$$constructor.apply($$this, args);
	});

	//initializer
	FontStyle.$$iinit = (function ($$this)
	{
	});

	//constructor
	FontStyle.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(FontStyle, null, 'flash.text::FontStyle');
})();
//flash.text.FontStyle


//flash.text.FontType
$es4.$$package('flash.text').FontType = (function ()
{
	//properties
	var $$j = {};
	FontType.DEVICE = "device";
	FontType.EMBEDDED = "embedded";
	FontType.EMBEDDED_CFF = "embeddedCFF";

	//class pre initializer
	FontType.$$sinit = (function ()
	{
		FontType.$$sinit = undefined;

		//set prototype and constructor
		FontType.prototype = Object.create(Object.prototype);
		Object.defineProperty(FontType.prototype, "constructor", { value: FontType, enumerable: false });

		//hold private values
		Object.defineProperty(FontType.prototype, '$$v', {value:{}});
	});

	//class initializer
	FontType.$$cinit = (function ()
	{
		FontType.$$cinit = undefined;
	});

	function FontType()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof FontType) || $$this.$$FontType !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], FontType) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			FontType.$$construct($$this, $$args);
		}
	}

	//construct
	FontType.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (FontType.$$cinit !== undefined) FontType.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$FontType', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		FontType.$$iinit($$this);

		//call constructor
		if (args !== undefined) FontType.$$constructor.apply($$this, args);
	});

	//initializer
	FontType.$$iinit = (function ($$this)
	{
	});

	//constructor
	FontType.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(FontType, null, 'flash.text::FontType');
})();
//flash.text.FontType


//flash.text.GridFitType
$$package('flash.text').GridFitType = function () { throw new Error('Use of unimplemented class: GridFitType'); }
//flash.text.GridFitType


//flash.text.ime.CompositionAttributeRange
$$package('flash.text.ime').CompositionAttributeRange = function () { throw new Error('Use of unimplemented class: CompositionAttributeRange'); }
//flash.text.ime.CompositionAttributeRange


//flash.text.StaticText
$$package('flash.text').StaticText = function () { throw new Error('Use of unimplemented class: StaticText'); }
//flash.text.StaticText


//flash.text.StyleSheet
$es4.$$package('flash.text').StyleSheet = (function ()
{
	//imports
	var EventDispatcher;
	var TextFormat;

	//properties
	var $$j = {};
	Object.defineProperty(StyleSheet, '_ID', {
	get:function () { if (StyleSheet.$$cinit !== undefined) StyleSheet.$$cinit(); return $$j._ID; },
	set:function (value) { if (StyleSheet.$$cinit !== undefined) StyleSheet.$$cinit(); $$j._ID = $es4.$$coerce(value, int); }
	});


	//class pre initializer
	StyleSheet.$$sinit = (function ()
	{
		StyleSheet.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		TextFormat = $es4.$$['flash.text'].TextFormat;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		StyleSheet.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(StyleSheet.prototype, "constructor", { value: StyleSheet, enumerable: false });

		//hold private values
		Object.defineProperty(StyleSheet.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(StyleSheet.prototype, 'setStyle', {
		get:function ()
		{
			var $$this = this;

			function setStyle($$$$styleName, $$$$styleObject)
			{
				//set default parameter values
				var styleName = $es4.$$coerce($$$$styleName, String);
				var styleObject = $es4.$$coerce($$$$styleObject, Object);

				throw $es4.$$primitive(new Error('StyleSheet: attempted call to an unimplemented function "setStyle"'));
			}

			return $$this.$$StyleSheet.$$setStyle || ($$this.$$StyleSheet.$$setStyle = setStyle);
		}});


		//public instance method
		Object.defineProperty(StyleSheet.prototype, 'clear', {
		get:function ()
		{
			var $$this = this;

			function clear()
			{
				$$this.$$StyleSheet._styleNode.innerHTML = '';
			}

			return $$this.$$StyleSheet.$$clear || ($$this.$$StyleSheet.$$clear = clear);
		}});


		//public instance method
		Object.defineProperty(StyleSheet.prototype, 'getStyle', {
		get:function ()
		{
			var $$this = this;

			function getStyle($$$$styleName)
			{
				//set default parameter values
				var styleName = $es4.$$coerce($$$$styleName, String);

				return JSON.parse(JSON.stringify($$this.$$StyleSheet._styles[styleName]));
			}

			return $$this.$$StyleSheet.$$getStyle || ($$this.$$StyleSheet.$$getStyle = getStyle);
		}});


		//public instance method
		Object.defineProperty(StyleSheet.prototype, 'parseCSS', {
		get:function ()
		{
			var $$this = this;

			function parseCSS($$$$text)
			{
				//set default parameter values
				var text = $$$$text;

				text = (text || '').trim();
				if (!text.length)
				{
					return;
				}
				var parts = text.split('}');
				var id = $$this.$__id;
				for (var i = parts.length; i--;)
				{
					if (!parts[i].length)
					{
						continue;
					}
					parts[i] = ' .' + id + ' ' + parts[i];
				}
				$$this.$$StyleSheet._styleNode.innerHTML = parts.join('}');
			}

			return $$this.$$StyleSheet.$$parseCSS || ($$this.$$StyleSheet.$$parseCSS = parseCSS);
		}});


		//public instance method
		Object.defineProperty(StyleSheet.prototype, 'transform', {
		get:function ()
		{
			var $$this = this;

			function transform($$$$formatObject)
			{
				//set default parameter values
				var formatObject = $es4.$$coerce($$$$formatObject, Object);

				throw $es4.$$primitive(new Error('StyleSheet: attempted call to an unimplemented function "transform"'));
			}

			return $$this.$$StyleSheet.$$transform || ($$this.$$StyleSheet.$$transform = transform);
		}});

		Object.defineProperty(StyleSheet.prototype, 'styleNames', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('StyleSheet: attempted call to an unimplemented function "styleNames"'));
		}});

		//properties
		Object.defineProperty(StyleSheet.prototype, '$__id', {
		get:function () { var $$this = this; return $$this.$$StyleSheet.$__id; },
		set:function (value) { var $$this = this; $$this.$$StyleSheet.$__id = value }
		});

		StyleSheet.prototype.$$v._styleNode = {
		get:function () { var $$this = this.$$this; return $$this.$$StyleSheet.$$p._styleNode; },
		set:function (value) { var $$this = this.$$this; $$this.$$StyleSheet.$$p._styleNode = value }
		};

		StyleSheet.prototype.$$v._styles = {
		get:function () { var $$this = this.$$this; return $$this.$$StyleSheet.$$p._styles; },
		set:function (value) { var $$this = this.$$this; $$this.$$StyleSheet.$$p._styles = $es4.$$coerce(value, Object); }
		};

	});

	//class initializer
	StyleSheet.$$cinit = (function ()
	{
		StyleSheet.$$cinit = undefined;

		//initialize properties
		$$j._ID = $es4.$$coerce(0, int);
	
	});

	function StyleSheet()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof StyleSheet) || $$this.$$StyleSheet !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], StyleSheet) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			StyleSheet.$$construct($$this, $$args);
		}
	}

	//construct
	StyleSheet.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (StyleSheet.$$cinit !== undefined) StyleSheet.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$StyleSheet', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$StyleSheet, '_styleNode', StyleSheet.prototype.$$v._styleNode);
		Object.defineProperty($$this.$$StyleSheet, '_styles', StyleSheet.prototype.$$v._styles);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		StyleSheet.$$iinit($$this);

		//call constructor
		if (args !== undefined) StyleSheet.$$constructor.apply($$this, args);
	});

	//initializer
	StyleSheet.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$StyleSheet.$__id = "__style__" + StyleSheet._ID++;
		$$this.$$StyleSheet.$$p._styleNode = undefined;
		$$this.$$StyleSheet.$$p._styles = $es4.$$coerce({}, Object);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	StyleSheet.$$constructor = (function ()
	{
		var $$this = this;

		EventDispatcher.$$constructor.call($$this);

		var doc = document;
		var styleNode = doc.createElement('style');
		styleNode.type = 'text/css';
		doc.getElementsByTagName('head')[0].appendChild(styleNode);
		$$this.$$StyleSheet._styleNode = styleNode;
	});

	return $es4.$$class(StyleSheet, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.text::StyleSheet');
})();
//flash.text.StyleSheet


//flash.text.TextColorType
$$package('flash.text').TextColorType = function () { throw new Error('Use of unimplemented class: TextColorType'); }
//flash.text.TextColorType


//flash.text.TextDisplayMode
$$package('flash.text').TextDisplayMode = function () { throw new Error('Use of unimplemented class: TextDisplayMode'); }
//flash.text.TextDisplayMode


//flash.text.TextField
$es4.$$package('flash.text').TextField = (function ()
{
	//imports
	var DisplayObject;
	var InteractiveObject;
	var Event;
	var Rectangle;
	var StyleSheet;
	var TextFieldType;
	var TextFormat;
	var TextLineMetrics;
	var TextField;
	var TextFieldAutoSize;

	//class pre initializer
	TextField.$$sinit = (function ()
	{
		TextField.$$sinit = undefined;

		//initialize imports
		DisplayObject = $es4.$$['flash.display'].DisplayObject;
		InteractiveObject = $es4.$$['flash.display'].InteractiveObject;
		Event = $es4.$$['flash.events'].Event;
		Rectangle = $es4.$$['flash.geom'].Rectangle;
		StyleSheet = $es4.$$['flash.text'].StyleSheet;
		TextFieldType = $es4.$$['flash.text'].TextFieldType;
		TextFormat = $es4.$$['flash.text'].TextFormat;
		TextLineMetrics = $es4.$$['flash.text'].TextLineMetrics;
		TextFieldAutoSize = $es4.$$['flash.text'].TextFieldAutoSize;

		//ensure $$sinit is called on super class
		if (InteractiveObject.$$sinit !== undefined) InteractiveObject.$$sinit();

		//set prototype and constructor
		TextField.prototype = Object.create(InteractiveObject.prototype);
		Object.defineProperty(TextField.prototype, "constructor", { value: TextField, enumerable: false });

		//hold private values
		Object.defineProperty(TextField.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(TextField.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$TextField.$_properties === undefined)
				{
					object = $es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', '$__properties', 'func', undefined)(object);
					object.TextFieldScope = {pscope:$es4.$$getOwnScope($$this, TextField)};
					object.TLScope = $$this;
					return $$this.$$TextField.$_properties = object;
				}
				return $$this.$$TextField.$_properties;
			}

			return $$this.$$TextField.$$$__properties || ($$this.$$TextField.$$$__properties = $__properties);
		}});


		//private instance method
		TextField.prototype.$$v.onKeyDown = {
		get:function ()
		{
			var $$this = this.$$this;

			function onKeyDown($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				if ($$this.$$TextField.$_text.length >= $$this.$$TextField.$_maxChars)
				{
					if (event.keyCode != 46 && event.keyCode != 8)
					{
						event.preventDefault();
					}
					return;
				}
				switch (event.keyCode)
				{
					case 27:
					case 8:
					case 9:
					case 20:
					case 16:
					case 17:
					case 91:
					case 92:
					case 18:
						return;
				}
				var char = $es4.$$coerce((event.shiftKey) ? TextField.mapShiftKeyPressToActualCharacter(event.keyCode) : String.fromCharCode(event.keyCode), String);
				char = $es4.$$coerce(TextField.restrictTextHandler(char, $$this.$$TextField.$_restrict), String);
				if (char == '' || (event.keyCode == 13 && !$$this.$$TextField.$_multiline))
				{
					event.preventDefault();
					return;
				}
				if (event.keyCode == 13 && !window.ie)
				{
					document.execCommand('formatBlock', false, 'p');
				}
			}

			return $$this.$$TextField.$$p.$$onKeyDown || ($$this.$$TextField.$$p.$$onKeyDown = onKeyDown);
		}};


		//private instance method
		TextField.prototype.$$v.onKeyUp = {
		get:function ()
		{
			var $$this = this.$$this;

			function onKeyUp($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				var elements = $$this.$$TextField.$_domTextView.childNodes;
				for (var i = $es4.$$coerce(elements.length, int); i--;)
				{
					if (elements[i].nodeName == 'P' && !window.ie)
					{
						elements[i].setAttribute('contenteditable', true);
					}
				}
			}

			return $$this.$$TextField.$$p.$$onKeyUp || ($$this.$$TextField.$$p.$$onKeyUp = onKeyUp);
		}};


		//private instance method
		TextField.prototype.$$v.setAutoDimensions = {
		get:function ()
		{
			var $$this = this.$$this;

			function setAutoDimensions()
			{
				if ($$this.$$TextField.$_skipSetAutoDimensions)
				{
					return;
				}
				var body = document.body;
				if (!$$this.$$TextField.$_domTextView.parentNode && !body.contains($$this.$$TextField.$_domTextView))
				{
					body.appendChild($$this.$$TextField.$_domTextView);
					$$this.$$TextField.$_properties.DisplayObjectScope.$_setExplicitBounds($$this.$$TextField.$_domTextView.scrollWidth, $$this.$$TextField.$_domTextView.scrollHeight);
					body.removeChild($$this.$$TextField.$_domTextView);
				}
				else
				{
					$$this.$$TextField.$_properties.DisplayObjectScope.$_setExplicitBounds($$this.$$TextField.$_domTextView.scrollWidth, $$this.$$TextField.$_domTextView.scrollHeight);
				}
			}

			return $$this.$$TextField.$$p.$$setAutoDimensions || ($$this.$$TextField.$$p.$$setAutoDimensions = setAutoDimensions);
		}};


		//private instance method
		TextField.prototype.$$v.onInput = {
		get:function ()
		{
			var $$this = this.$$this;

			function onInput($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				$$this.$$TextField.$_text = $$this.$$TextField.$_domTextView.textContent;
				$$this.$$TextField.setAutoDimensions();
				$$this.dispatchEvent($es4.$$primitive(new Event(Event.CHANGE, false, false)));
			}

			return $$this.$$TextField.$$p.$$onInput || ($$this.$$TextField.$$p.$$onInput = onInput);
		}};


		//private instance method
		TextField.prototype.$$v.onBlur = {
		get:function ()
		{
			var $$this = this.$$this;

			function onBlur($$$$event)
			{
				//set default parameter values
				var event = $es4.$$coerce($$$$event, Object);

				var sel = window.getSelection();
				sel.removeAllRanges();
			}

			return $$this.$$TextField.$$p.$$onBlur || ($$this.$$TextField.$$p.$$onBlur = onBlur);
		}};


		//public instance method
		Object.defineProperty(TextField.prototype, 'setTextFormat', {
		get:function ()
		{
			var $$this = this;

			function setTextFormat($$$$format, $$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var format = $es4.$$coerce($$$$format, TextFormat);
				var beginIndex = (1 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$beginIndex, int);
				var endIndex = (2 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$endIndex, int);

				var text = $$this.$$TextField.$_text || $$this.$$TextField.$_htmlText;
				var textLength = text.length;
				if (beginIndex >= textLength || endIndex >= textLength)
				{
					throw $es4.$$primitive(new Error('The supplied index is out of bounds.'));
				}
				if (!textLength)
				{
					return;
				}
				if (beginIndex == -1)
				{
					beginIndex = 0;
				}
				if (endIndex == -1)
				{
					endIndex = textLength - 1;
				}
				if (!$$this.$$TextField.$_characterTextFormats)
				{
					$$this.$$TextField.$_characterTextFormats = [];
				}
				var characterTextFormats = $$this.$$TextField.$_characterTextFormats;
				for (var i = beginIndex; i < endIndex; i++)
				{
					characterTextFormats[i] = format;
				}
				$$this.$$TextField.$_domTextView.innerHTML = $$this.$$TextField.$_generateHTMLText();
				$$this.$$TextField.setAutoDimensions();
			}

			return $$this.$$TextField.$$setTextFormat || ($$this.$$TextField.$$setTextFormat = setTextFormat);
		}});


		//private instance method
		TextField.prototype.$$v.$_applyTextFormattingToNode = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_applyTextFormattingToNode($$$$node)
			{
				//set default parameter values
				var node = $es4.$$coerce($$$$node, Object);

				var characterTextFormats = $$this.$$TextField.$_characterTextFormats;
				var defaultTextFormat = $$this.$$TextField.$_defaultTextFormat;
				var previousTextFormat = defaultTextFormat;
				var textFormat = defaultTextFormat;
				if (characterTextFormats && characterTextFormats.length && characterTextFormats[0])
				{
					textFormat = $es4.$$coerce(characterTextFormats[0], TextFormat);
				}
				var color = (textFormat.color === null) ? '000000' : textFormat.color.toString(16);
				while (color.length < 6)
				{
					color = '0' + color;
				}
				var textFormatProperties = {url:textFormat.url, align:(textFormat.align) ? textFormat.align : 'left', blockIndent:textFormat.blockIndent, bold:(textFormat.bold) ? 'bold' : '500', bullet:textFormat.bullet, color:color, display:textFormat.display, indent:textFormat.indent, font:(textFormat.font) ? textFormat.font : 'Times New Roman', italic:textFormat.italic, leading:textFormat.leading, kerning:Number(textFormat.kerning), leftMargin:textFormat.leftMargin || 0, letterSpacing:textFormat.letterSpacing, rightMargin:textFormat.rightMargin || 0, size:(textFormat.size) ? Number(textFormat.size) : 12, tabStops:textFormat.tabStops, target:textFormat.target, underline:textFormat.underline};
				node.style.display = (textFormatProperties.align == 'left' ? 'inline-block' : 'block');
				node.style.textAlign = textFormatProperties.align;
				node.style.fontFamily = textFormatProperties.font;
				node.style.fontWeight = textFormatProperties.bold;
				node.style.fontSize = textFormatProperties.size + 'px';
				node.style.color = '#' + textFormatProperties.color;
				if (textFormatProperties.leftMargin !== null)
				{
					node.style.marginLeft = textFormatProperties.leftMargin + 'px';
				}
				if (textFormatProperties.rightMargin !== null)
				{
					node.style.marginRight = textFormatProperties.rightMargin + 'px';
				}
				if (textFormatProperties.leading !== null)
				{
					node.style.lineHeight = textFormatProperties.leading + 'px';
				}
				if (textFormatProperties.letterSpacing !== null)
				{
					node.style.letterSpacing = textFormatProperties.letterSpacing + 'px';
				}
			}

			return $$this.$$TextField.$$p.$$$_applyTextFormattingToNode || ($$this.$$TextField.$$p.$$$_applyTextFormattingToNode = $_applyTextFormattingToNode);
		}};


		//private instance method
		TextField.prototype.$$v.$_applyTextFormatting = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_applyTextFormatting($$$$text)
			{
				//set default parameter values
				var text = $es4.$$coerce($$$$text, String);

				var characterTextFormats = $$this.$$TextField.$_characterTextFormats;
				var textFormat = $$this.$$TextField.$_defaultTextFormat;
				var textLength = text.length;
				var collected = '';
				var htmlText = '';
				if (characterTextFormats)
				{
					textFormat = $es4.$$coerce(characterTextFormats[0] || textFormat, TextFormat);
					for (var j = 0; j < textLength; j++)
					{
						if (characterTextFormats[j] !== undefined && characterTextFormats[j] !== textFormat)
						{
							htmlText += formatText(collected, textFormat);
							textFormat = $es4.$$coerce(characterTextFormats[j], TextFormat);
							collected = '';
						}
						collected += text.charAt(j);
					}
				}
				else
				{
					collected = text;
				}
				if (collected)
				{
					htmlText += formatText(collected, textFormat);
				}
				return htmlText;

				function formatText($$$$text, $$$$textFormat) 
				{
					//set default parameter values
					var text = $es4.$$coerce($$$$text, String);
					var textFormat = $es4.$$coerce($$$$textFormat, TextFormat);

					var htmlText = '';
					var color = (textFormat.color === null) ? '000000' : textFormat.color.toString(16);
					while (color.length < 6)
					{
						color = '0' + color;
					}
					var textFormatProperties = {url:textFormat.url, align:(textFormat.align) ? textFormat.align : 'left', blockIndent:textFormat.blockIndent, bold:(textFormat.bold) ? 'bold' : '500', bullet:textFormat.bullet, color:color, display:textFormat.display, indent:textFormat.indent, font:(textFormat.font) ? textFormat.font : 'Times New Roman', italic:textFormat.italic, leading:textFormat.leading, kerning:Number(textFormat.kerning), leftMargin:textFormat.leftMargin || 0, letterSpacing:textFormat.letterSpacing, rightMargin:textFormat.rightMargin || 0, size:(textFormat.size) ? Number(textFormat.size) : 12, tabStops:textFormat.tabStops, target:textFormat.target, underline:textFormat.underline};
					var letterSpacing = $es4.$$coerce(textFormatProperties.letterSpacing || 0, Number);
					if (letterSpacing >= 1)
					{
						var win = window;
						if (win.ie)
						{
							letterSpacing -= .5;
						}
						else if (!win.chrome)
						{
							letterSpacing -= 1;
						}
					}
					htmlText = '<span class="text' + ($$this.$$TextField.$_styleSheet !== null ? (' ' + $$this.$$TextField.$_styleSheet.$__id) : '') + '" tabindex="-1" ' + ($$this.$$TextField.$_type == TextFieldType.DYNAMIC ? 'role="presentation" aria-hidden="true" ' : 'contentEditable="true" ') + 'style="display:' + ((textFormatProperties.align === 'left' && $$this.$$TextField.$_styleSheet === null) ? 'inline-block' : 'block') + ';text-align:' + textFormatProperties.align + ';font-family:' + textFormatProperties.font + ';font-weight:' + textFormatProperties.bold + ';font-size:' + textFormatProperties.size + 'px' + ';color:#' + textFormatProperties.color + (textFormatProperties.leftMargin === null ? '' : ';margin-left:' + textFormatProperties.leftMargin + 'px') + (textFormatProperties.rightMargin === null ? '' : ';margin-right:' + textFormatProperties.rightMargin + 'px') + (textFormatProperties.leading === null ? '' : ';line-height:' + textFormatProperties.leading + 'px') + (textFormatProperties.letterSpacing === null ? '' : ';letter-spacing:' + letterSpacing + 'px') + ($$this.$$TextField.$_wordWrap ? '' : ';white-space:nowrap') + ';">';
					if (!$$this.$$TextField.$_multiline)
					{
						text = text.split('<br/>').join('');
					}
					if (text.indexOf("&#10;") !== -1)
					{
						text = text.split("&#10;").join('<br/>');
					}
					if (text.indexOf("\\n") !== -1)
					{
						text = text.split("\\n").join('<br/>');
					}
					if (!$$this.$$TextField.$_condenseWhite)
					{
						text = $es4.$$coerce(($es4.$$as(text, Object)).trim(), String);
						var found = 0;
						var count = 0;
						for (var i = 0; i < text.length; i++)
						{
							var char = text.charAt(i);
							if (found)
							{
								if (char == ' ')
								{
									count++;
								}
								else
								{
									var begin = text.substring(0, found);
									var end = text.substring(i);
									var insert = ' ';
									found = 0;
									while (count > 1)
									{
										if (count == 2)
										{
											insert += '&nbsp;&nbsp;';
										}
										else
										{
											insert += '&nbsp;';
										}
										count--;
									}
									count = 0;
									text = begin + insert + end;
									i = $es4.$$coerce(begin.length + insert.length, uint);
								}
							}
							else if (char == ' ')
							{
								found = $es4.$$coerce(i, int);
								count = 1;
							}
						}
						text = text.split('\t').join('&nbsp;&nbsp;&nbsp;&nbsp;');
						text = text.split('\n').join('<br/>');
					}
					htmlText += text;
					htmlText += '</span>';
					return htmlText;
				}
;
			}

			return $$this.$$TextField.$$p.$$$_applyTextFormatting || ($$this.$$TextField.$$p.$$$_applyTextFormatting = $_applyTextFormatting);
		}};


		//private instance method
		TextField.prototype.$$v.$_generateHTMLText = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_generateHTMLText()
			{
				return $$this.$$TextField.$_applyTextFormatting($$this.$$TextField.$_text || $$this.$$TextField.$_htmlText);
			}

			return $$this.$$TextField.$$p.$$$_generateHTMLText || ($$this.$$TextField.$$p.$$$_generateHTMLText = $_generateHTMLText);
		}};


		//private instance method
		TextField.prototype.$$v.toColor = {
		get:function ()
		{
			var $$this = this.$$this;

			function toColor($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, uint);

				var color = (!value) ? '000000' : value.toString(16);
				while (color.length < 6)
				{
					color = '0' + color;
				}
				return '#' + color;
			}

			return $$this.$$TextField.$$p.$$toColor || ($$this.$$TextField.$$p.$$toColor = toColor);
		}};


		//public instance method
		Object.defineProperty(TextField.prototype, 'appendText', {
		get:function ()
		{
			var $$this = this;

			function appendText($$$$newText)
			{
				//set default parameter values
				var newText = $es4.$$coerce($$$$newText, String);

				$$this.htmlText += newText;
			}

			return $$this.$$TextField.$$appendText || ($$this.$$TextField.$$appendText = appendText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'copyRichText', {
		get:function ()
		{
			var $$this = this;

			function copyRichText()
			{
				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "copyRichText"'));
			}

			return $$this.$$TextField.$$copyRichText || ($$this.$$TextField.$$copyRichText = copyRichText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getCharBoundaries', {
		get:function ()
		{
			var $$this = this;

			function getCharBoundaries($$$$charIndex)
			{
				//set default parameter values
				var charIndex = $es4.$$coerce($$$$charIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getCharBoundaries"'));
			}

			return $$this.$$TextField.$$getCharBoundaries || ($$this.$$TextField.$$getCharBoundaries = getCharBoundaries);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getCharIndexAtPoint', {
		get:function ()
		{
			var $$this = this;

			function getCharIndexAtPoint($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getCharIndexAtPoint"'));
			}

			return $$this.$$TextField.$$getCharIndexAtPoint || ($$this.$$TextField.$$getCharIndexAtPoint = getCharIndexAtPoint);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getFirstCharInParagraph', {
		get:function ()
		{
			var $$this = this;

			function getFirstCharInParagraph($$$$charIndex)
			{
				//set default parameter values
				var charIndex = $es4.$$coerce($$$$charIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getFirstCharInParagraph"'));
			}

			return $$this.$$TextField.$$getFirstCharInParagraph || ($$this.$$TextField.$$getFirstCharInParagraph = getFirstCharInParagraph);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getImageReference', {
		get:function ()
		{
			var $$this = this;

			function getImageReference($$$$id)
			{
				//set default parameter values
				var id = $es4.$$coerce($$$$id, String);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getImageReference"'));
			}

			return $$this.$$TextField.$$getImageReference || ($$this.$$TextField.$$getImageReference = getImageReference);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineIndexAtPoint', {
		get:function ()
		{
			var $$this = this;

			function getLineIndexAtPoint($$$$x, $$$$y)
			{
				//set default parameter values
				var x = $es4.$$coerce($$$$x, Number);
				var y = $es4.$$coerce($$$$y, Number);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineIndexAtPoint"'));
			}

			return $$this.$$TextField.$$getLineIndexAtPoint || ($$this.$$TextField.$$getLineIndexAtPoint = getLineIndexAtPoint);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineIndexOfChar', {
		get:function ()
		{
			var $$this = this;

			function getLineIndexOfChar($$$$charIndex)
			{
				//set default parameter values
				var charIndex = $es4.$$coerce($$$$charIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineIndexOfChar"'));
			}

			return $$this.$$TextField.$$getLineIndexOfChar || ($$this.$$TextField.$$getLineIndexOfChar = getLineIndexOfChar);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineLength', {
		get:function ()
		{
			var $$this = this;

			function getLineLength($$$$lineIndex)
			{
				//set default parameter values
				var lineIndex = $es4.$$coerce($$$$lineIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineLength"'));
			}

			return $$this.$$TextField.$$getLineLength || ($$this.$$TextField.$$getLineLength = getLineLength);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineMetrics', {
		get:function ()
		{
			var $$this = this;

			function getLineMetrics($$$$lineIndex)
			{
				//set default parameter values
				var lineIndex = $es4.$$coerce($$$$lineIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineMetrics"'));
			}

			return $$this.$$TextField.$$getLineMetrics || ($$this.$$TextField.$$getLineMetrics = getLineMetrics);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineOffset', {
		get:function ()
		{
			var $$this = this;

			function getLineOffset($$$$lineIndex)
			{
				//set default parameter values
				var lineIndex = $es4.$$coerce($$$$lineIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineOffset"'));
			}

			return $$this.$$TextField.$$getLineOffset || ($$this.$$TextField.$$getLineOffset = getLineOffset);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getLineText', {
		get:function ()
		{
			var $$this = this;

			function getLineText($$$$lineIndex)
			{
				//set default parameter values
				var lineIndex = $es4.$$coerce($$$$lineIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getLineText"'));
			}

			return $$this.$$TextField.$$getLineText || ($$this.$$TextField.$$getLineText = getLineText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getParagraphLength', {
		get:function ()
		{
			var $$this = this;

			function getParagraphLength($$$$charIndex)
			{
				//set default parameter values
				var charIndex = $es4.$$coerce($$$$charIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getParagraphLength"'));
			}

			return $$this.$$TextField.$$getParagraphLength || ($$this.$$TextField.$$getParagraphLength = getParagraphLength);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getRawText', {
		get:function ()
		{
			var $$this = this;

			function getRawText()
			{
				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getRawText"'));
			}

			return $$this.$$TextField.$$getRawText || ($$this.$$TextField.$$getRawText = getRawText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getTextFormat', {
		get:function ()
		{
			var $$this = this;

			function getTextFormat($$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var beginIndex = (0 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$beginIndex, int);
				var endIndex = (1 > arguments.length - 1) ? -1 : $es4.$$coerce($$$$endIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getTextFormat"'));
			}

			return $$this.$$TextField.$$getTextFormat || ($$this.$$TextField.$$getTextFormat = getTextFormat);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getTextRuns', {
		get:function ()
		{
			var $$this = this;

			function getTextRuns($$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var beginIndex = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$beginIndex, int);
				var endIndex = (1 > arguments.length - 1) ? 2147483647 : $es4.$$coerce($$$$endIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getTextRuns"'));
			}

			return $$this.$$TextField.$$getTextRuns || ($$this.$$TextField.$$getTextRuns = getTextRuns);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'getXMLText', {
		get:function ()
		{
			var $$this = this;

			function getXMLText($$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var beginIndex = (0 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$beginIndex, int);
				var endIndex = (1 > arguments.length - 1) ? 2147483647 : $es4.$$coerce($$$$endIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "getXMLText"'));
			}

			return $$this.$$TextField.$$getXMLText || ($$this.$$TextField.$$getXMLText = getXMLText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'insertXMLText', {
		get:function ()
		{
			var $$this = this;

			function insertXMLText($$$$beginIndex, $$$$endIndex, $$$$richText, $$$$pasting)
			{
				//set default parameter values
				var beginIndex = $es4.$$coerce($$$$beginIndex, int);
				var endIndex = $es4.$$coerce($$$$endIndex, int);
				var richText = $es4.$$coerce($$$$richText, String);
				var pasting = (3 > arguments.length - 1) ? false : $es4.$$coerce($$$$pasting, Boolean);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "insertXMLText"'));
			}

			return $$this.$$TextField.$$insertXMLText || ($$this.$$TextField.$$insertXMLText = insertXMLText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'pasteRichText', {
		get:function ()
		{
			var $$this = this;

			function pasteRichText($$$$richText)
			{
				//set default parameter values
				var richText = $es4.$$coerce($$$$richText, String);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "pasteRichText"'));
			}

			return $$this.$$TextField.$$pasteRichText || ($$this.$$TextField.$$pasteRichText = pasteRichText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'replaceSelectedText', {
		get:function ()
		{
			var $$this = this;

			function replaceSelectedText($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "replaceSelectedText"'));
			}

			return $$this.$$TextField.$$replaceSelectedText || ($$this.$$TextField.$$replaceSelectedText = replaceSelectedText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'replaceText', {
		get:function ()
		{
			var $$this = this;

			function replaceText($$$$beginIndex, $$$$endIndex, $$$$newText)
			{
				//set default parameter values
				var beginIndex = $es4.$$coerce($$$$beginIndex, int);
				var endIndex = $es4.$$coerce($$$$endIndex, int);
				var newText = $es4.$$coerce($$$$newText, String);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "replaceText"'));
			}

			return $$this.$$TextField.$$replaceText || ($$this.$$TextField.$$replaceText = replaceText);
		}});


		//public instance method
		Object.defineProperty(TextField.prototype, 'setSelection', {
		get:function ()
		{
			var $$this = this;

			function setSelection($$$$beginIndex, $$$$endIndex)
			{
				//set default parameter values
				var beginIndex = $es4.$$coerce($$$$beginIndex, int);
				var endIndex = $es4.$$coerce($$$$endIndex, int);

				throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "setSelection"'));
			}

			return $$this.$$TextField.$$setSelection || ($$this.$$TextField.$$setSelection = setSelection);
		}});

		Object.defineProperty(TextField.prototype, 'width', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'width', 'get');
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$TextField.$_domTextView.style.width = (value - ($$this.$$TextField.$_border ? 6 : 4)) + 'px';
			$$this.$$TextField.$_properties.DisplayObjectScope.$_setExplicitBounds(value, $$this.$$TextField.$_properties.DisplayObjectScope.$_height);
		}});
		Object.defineProperty(TextField.prototype, 'height', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'height', 'get');
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$TextField.$_domTextView.style.height = (value - ($$this.$$TextField.$_border ? 6 : 4)) + 'px';
			$$this.$$TextField.$_properties.DisplayObjectScope.$_setExplicitBounds($$this.$$TextField.$_properties.DisplayObjectScope.$_width, value);
		}});
		Object.defineProperty(TextField.prototype, 'scrollRect', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'scrollRect', 'get');
		}, set:function ($$$$rectangle)
		{
			//set default parameter values
			var rectangle = $es4.$$coerce($$$$rectangle, Rectangle);

			var $$this = this;
			if (!rectangle)
			{
				$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'scrollRect', 'set', rectangle);
				$$this.$$TextField.$_domTextView.style.width = ($$this.$$TextField.$_properties.DisplayObjectScope.$_width - ($$this.$$TextField.$_border ? 6 : 4)) + 'px';
				$$this.$$TextField.$_domTextView.style.height = ($$this.$$TextField.$_properties.DisplayObjectScope.$_height - ($$this.$$TextField.$_border ? 6 : 4)) + 'px';
				return;
			}
			$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'scrollRect', 'set', rectangle);
		}});
		Object.defineProperty(TextField.prototype, 'type', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_type;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			if (value == $$this.$$TextField.$_type)
			{
				return;
			}
			if ($$this.$$TextField.$_domTextView)
			{
				while ($$this.$$TextField.$_domTextView.hasChildNodes())
				{
					$$this.$$TextField.$_domTextView.removeChild($$this.$$TextField.$_domTextView.lastChild);
				}
			}
			$$this.$$TextField.$_domTextView = $$this.$$TextField.$_properties.DisplayObjectScope.$_domView;
			$$this.$$TextField.$_domTextView.removeEventListener('input', $$this.$$TextField.onInput);
			$$this.$$TextField.$_domTextView.removeEventListener('keydown', $$this.$$TextField.onKeyDown);
			$$this.$$TextField.$_domTextView.removeEventListener('keyup', $$this.$$TextField.onKeyUp);
			$$this.$$TextField.$_domTextView.removeEventListener('blur', $$this.$$TextField.onBlur);
			if (value == TextFieldType.DYNAMIC)
			{
				$$this.$$TextField.$_properties.DisplayObjectScope.$_domView.setAttribute('aria-hidden', true);
				$$this.$$TextField.$_domTextView.contentEditable = 'false';
				$$this.$$TextField.$_domTextView.style.backgroundColor = 'inherit';
				$$this.$$TextField.$_domTextView.style.outline = 'inherit';
				$$this.$$TextField.$_domTextView.style.resize = 'inherit';
			}
			else if (value == TextFieldType.INPUT)
			{
				$$this.$$TextField.$_properties.DisplayObjectScope.$_domView.setAttribute('aria-hidden', false);
				$$this.$$TextField.$_domTextView.contentEditable = 'true';
				$$this.$$TextField.$_domTextView.style.backgroundColor = 'transparent';
				$$this.$$TextField.$_domTextView.style.outline = 'none';
				$$this.$$TextField.$_domTextView.style.resize = 'none';
				$$this.$$TextField.$_domTextView.addEventListener('input', $$this.$$TextField.onInput);
				$$this.$$TextField.$_domTextView.addEventListener('keydown', $$this.$$TextField.onKeyDown);
				$$this.$$TextField.$_domTextView.addEventListener('keyup', $$this.$$TextField.onKeyUp);
				$$this.$$TextField.$_domTextView.addEventListener('blur', $$this.$$TextField.onBlur);
			}
			else
			{
				throw $es4.$$primitive(new ArgumentError('Parameter type must be one of the accepted values.', 2008));
			}
			$$this.$$TextField.$_type = value;
			$$this.$$TextField.$_domTextView.style.width = ($$this.$$TextField.$_properties.DisplayObjectScope.$_width - 4) + 'px';
			$$this.$$TextField.$_domTextView.style.height = ($$this.$$TextField.$_properties.DisplayObjectScope.$_height - 4) + 'px';
			$$this.$$TextField.$_domTextView.style.textRendering = 'optimizeSpeed';
			$$this.$$TextField.$_domTextView.style.paddingLeft = '2px';
			$$this.$$TextField.$_domTextView.style.paddingTop = '2px';
			$$this.$$TextField.$_domTextView.style.paddingRight = '2px';
			$$this.$$TextField.$_domTextView.style.paddingBottom = '2px';
			$$this.$$TextField.$_applyTextFormattingToNode($$this.$$TextField.$_domTextView);
			$$this.$$TextField.$_skipSetAutoDimensions = true;
			var pscope = $$this.$$TextField.$_properties.TextFieldScope.pscope;
			$es4.$$getDescriptor(pscope, 'selectable').set.call($$this, $$this.$$TextField.$_selectable);
			$es4.$$getDescriptor(pscope, 'autoSize').set.call($$this, $$this.$$TextField.$_autoSize);
			$es4.$$getDescriptor(pscope, 'multiline').set.call($$this, $$this.$$TextField.$_multiline);
			$es4.$$getDescriptor(pscope, 'border').set.call($$this, $$this.$$TextField.$_border);
			$es4.$$getDescriptor(pscope, 'background').set.call($$this, $$this.$$TextField.$_background);
			if ($$this.$$TextField.$_htmlText)
			{
				$es4.$$getDescriptor($$this.$$TextField.$_properties.TextFieldScope.pscope, 'htmlText').set.call($$this, $$this.$$TextField.$_htmlText);
			}
			else if ($$this.$$TextField.$_text)
			{
				$es4.$$getDescriptor($$this.$$TextField.$_properties.TextFieldScope.pscope, 'text').set.call($$this, $$this.$$TextField.$_text);
			}
			$$this.$$TextField.$_skipSetAutoDimensions = false;
			$$this.$$TextField.setAutoDimensions();
		}});
		Object.defineProperty(TextField.prototype, 'text', {get:function ()
		{
			var $$this = this;
			if ($$this.$$TextField.$_type == TextFieldType.INPUT)
			{
				return $es4.$$coerce($$this.$$TextField.$_domTextView.textContent, String);
			}
			return $$this.$$TextField.$_text;
		}, set:function ($$$$text)
		{
			//set default parameter values
			var text = $es4.$$coerce($$$$text, String);

			var $$this = this;
			if (text == null)
			{
				text = '';
			}
			$$this.$$TextField.$_characterTextFormats = null;
			text = $es4.$$coerce(TextField.restrictTextHandler(text, $$this.$$TextField.$_restrict), String);
			$$this.$$TextField.$_text = text;
			$$this.$$TextField.$_domTextView.innerHTML = ($$this.$$TextField.$_type == TextFieldType.DYNAMIC) ? $$this.$$TextField.$_applyTextFormatting(text) : text.split('&').join('&amp;').split('<').join('&lt;');
			if ($$this.$$TextField.$_type == TextFieldType.INPUT && document.activeElement == $$this.$$TextField.$_domTextView)
			{
				var node = $$this.$$TextField.$_domTextView;
				var textNode = node.firstChild || node;
				var range = document.createRange();
				range.setStart(textNode, 0);
				range.setEnd(textNode, 0);
				var sel = window.getSelection();
				sel.removeAllRanges();
				sel.addRange(range);
			}
			$$this.$$TextField.setAutoDimensions();
		}});
		Object.defineProperty(TextField.prototype, 'htmlText', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_generateHTMLText();
		}, set:function ($$$$text)
		{
			//set default parameter values
			var text = $es4.$$coerce($$$$text, String);

			var $$this = this;
			if (text == null)
			{
				text = '';
			}
			$$this.$$TextField.$_characterTextFormats = null;
			text = $es4.$$coerce(TextField.restrictTextHandler(text, $$this.$$TextField.$_restrict), String);
			var win = window;
			$$this.$$TextField.$_htmlText = text;
			if (text.indexOf('<') !== -1)
			{
				if ($$this.$$TextField.$_type == TextFieldType.INPUT)
				{
					win.$$getDescriptor($$this.$$TextField.$_properties.TextFieldScope.pscope, 'text').set.call($$this, win.HTMLtoText('<root>' + text + '</root>'));
					return;
				}
				text = $es4.$$coerce(win.HTMLtoXML('<root>' + text + '</root>'), String);
				text = text.substring(6, text.length - 7);
			}
			else if ($$this.$$TextField.$_type == TextFieldType.INPUT)
			{
				win.$$getDescriptor($$this.$$TextField.$_properties.TextFieldScope.pscope, 'text').set.call($$this, text);
				return;
			}
			$$this.$$TextField.$_domTextView.innerHTML = $$this.$$TextField.$_applyTextFormatting(text);
			$$this.$$TextField.setAutoDimensions();
		}});
		Object.defineProperty(TextField.prototype, 'multiline', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_multiline;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$TextField.$_multiline = value;
			if ($$this.$$TextField.$_type == TextFieldType.INPUT)
			{
				if (!value)
				{
					$$this.$$TextField.$_domTextView.style.whiteSpace = 'nowrap';
				}
				else
				{
					$$this.$$TextField.$_domTextView.style.whiteSpace = 'pre-wrap';
				}
				$$this.$$TextField.setAutoDimensions();
			}
		}});
		Object.defineProperty(TextField.prototype, 'wordWrap', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_wordWrap;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			if (value == $$this.$$TextField.$_wordWrap)
			{
				return;
			}
			$$this.$$TextField.$_wordWrap = value;
			if ($$this.$$TextField.$_type == TextFieldType.INPUT)
			{
				if (!value)
				{
					$$this.$$TextField.$_domTextView.style.wordWrap = 'normal';
				}
				else
				{
					$$this.$$TextField.$_domTextView.style.wordWrap = 'break-word';
				}
				$$this.$$TextField.setAutoDimensions();
			}
		}});
		Object.defineProperty(TextField.prototype, 'textColor', {get:function ()
		{
			var $$this = this;
			var color = $es4.$$coerce($$this.$$TextField.$_domTextView.style.color, String);
			return $es4.$$coerce(parseInt(color.split('#').pop(), 16), uint);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			var color = '#' + value.toString(16);
			if (color == '#0')
			{
				color = '#000000';
			}
			$$this.$$TextField.$_domTextView.style.fill = color;
		}});
		Object.defineProperty(TextField.prototype, 'defaultTextFormat', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_defaultTextFormat;
		}, set:function ($$$$format)
		{
			//set default parameter values
			var format = $es4.$$coerce($$$$format, TextFormat);

			var $$this = this;
			if (!format)
			{
				format = $es4.$$primitive(new TextFormat());
			}
			$$this.$$TextField.$_defaultTextFormat = format;
			$$this.$$TextField.$_applyTextFormattingToNode($$this.$$TextField.$_domTextView);
			$$this.$$TextField.setAutoDimensions();
		}});
		Object.defineProperty(TextField.prototype, 'autoSize', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_autoSize;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			if (value != TextFieldAutoSize.NONE)
			{
				$$this.$$TextField.$_domTextView.style.removeProperty('height');
			}
			if (value == TextFieldAutoSize.CENTER)
			{
				if ($$this.$$TextField.$_autoSize != TextFieldAutoSize.CENTER)
				{
					$$this.width = $$this.width;
				}
				$$this.$$TextField.$_domTextView.style.overflow = 'inherit';
				$$this.$$TextField.$_domTextView.style.textAlign = 'center';
			}
			else if (value == TextFieldAutoSize.LEFT)
			{
				if (!$$this.$$TextField.$_multiline)
				{
					$$this.$$TextField.$_domTextView.style.removeProperty('width');
				}
				else
				{
					$$this.$$TextField.$_domTextView.style.width = $$this.$$TextField.$_properties.DisplayObjectScope.$_width + 'px';
				}
				$$this.$$TextField.$_domTextView.style.overflow = 'inherit';
				$$this.$$TextField.$_domTextView.style.removeProperty('text-align');
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.removeProperty('text-align');
				if ($$this.$$TextField.$_autoSize != TextFieldAutoSize.NONE)
				{
					$$this.width = $$this.width;
				}
				$$this.$$TextField.$_domTextView.style.overflow = 'hidden';
			}
			$$this.$$TextField.$_autoSize = value;
			$$this.$$TextField.setAutoDimensions();
		}});
		Object.defineProperty(TextField.prototype, 'length', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_text.length;
		}});
		Object.defineProperty(TextField.prototype, 'alwaysShowSelection', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "alwaysShowSelection"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "alwaysShowSelection"'));
		}});
		Object.defineProperty(TextField.prototype, 'antiAliasType', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "antiAliasType"'));
		}, set:function ($$$$antiAliasType)
		{
			//set default parameter values
			var antiAliasType = $es4.$$coerce($$$$antiAliasType, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "antiAliasType"'));
		}});
		Object.defineProperty(TextField.prototype, 'background', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_background;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$TextField.$_background = value;
			if (!value)
			{
				$$this.$$TextField.$_domTextView.style.backgroundColor = 'transparent';
				return;
			}
			if ($$this.$$TextField.$_backgroundColor != 0xFFFFFF)
			{
				$$this.$$TextField.$_domTextView.style.backgroundColor = $$this.$$TextField.toColor($$this.$$TextField.$_backgroundColor);
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.backgroundColor = 'white';
			}
		}});
		Object.defineProperty(TextField.prototype, 'backgroundColor', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_backgroundColor;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			if (value == $$this.$$TextField.$_backgroundColor)
			{
				return;
			}
			$$this.$$TextField.$_backgroundColor = value;
			if ($$this.$$TextField.$_background)
			{
				if (value != 0xFFFFFF)
				{
					$$this.$$TextField.$_domTextView.style.backgroundColor = $$this.$$TextField.toColor(value);
				}
				else
				{
					$$this.$$TextField.$_domTextView.style.backgroundColor = 'white';
				}
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.backgroundColor = 'transparent';
			}
		}});
		Object.defineProperty(TextField.prototype, 'border', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_border;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			if (value == $$this.$$TextField.$_border)
			{
				return;
			}
			$$this.$$TextField.$_border = value;
			if (!value)
			{
				$$this.$$TextField.$_domTextView.style.borderColor = 'transparent';
				$$this.$$TextField.$_domTextView.style.borderStyle = 'none';
				$$this.$$TextField.$_domTextView.style.borderWidth = '0px';
				if ($$this.$$TextField.$_domTextView.style.width !== undefined)
				{
					$$this.$$TextField.$_domTextView.style.width = ($$this.$$TextField.$_properties.DisplayObjectScope.$_width - 4) + 'px';
				}
				if ($$this.$$TextField.$_domTextView.style.height !== undefined)
				{
					$$this.$$TextField.$_domTextView.style.height = ($$this.$$TextField.$_properties.DisplayObjectScope.$_height - 4) + 'px';
				}
				return;
			}
			if ($$this.$$TextField.$_borderColor)
			{
				$$this.$$TextField.$_domTextView.style.borderColor = $$this.$$TextField.toColor($$this.$$TextField.$_borderColor);
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.borderColor = 'black';
			}
			$$this.$$TextField.$_domTextView.style.borderStyle = 'solid';
			$$this.$$TextField.$_domTextView.style.borderWidth = '1px';
			if ($$this.$$TextField.$_domTextView.style.width !== undefined)
			{
				$$this.$$TextField.$_domTextView.style.width = ($$this.$$TextField.$_properties.DisplayObjectScope.$_width - 6) + 'px';
			}
			if ($$this.$$TextField.$_domTextView.style.height !== undefined)
			{
				$$this.$$TextField.$_domTextView.style.height = ($$this.$$TextField.$_properties.DisplayObjectScope.$_height - 6) + 'px';
			}
		}});
		Object.defineProperty(TextField.prototype, 'borderColor', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_borderColor;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			$$this.$$TextField.$_borderColor = value;
			if ($$this.$$TextField.$_border)
			{
				if (value)
				{
					$$this.$$TextField.$_domTextView.style.borderColor = $$this.$$TextField.toColor(value);
				}
				else
				{
					$$this.$$TextField.$_domTextView.style.borderColor = 'black';
				}
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.borderColor = 'transparent';
			}
		}});
		Object.defineProperty(TextField.prototype, 'bottomScrollV', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "bottomScrollV"'));
		}});
		Object.defineProperty(TextField.prototype, 'caretIndex', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "caretIndex"'));
		}});
		Object.defineProperty(TextField.prototype, 'condenseWhite', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_condenseWhite;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$TextField.$_condenseWhite = value;
		}});
		Object.defineProperty(TextField.prototype, 'displayAsPassword', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "displayAsPassword"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "displayAsPassword"'));
		}});
		Object.defineProperty(TextField.prototype, 'embedFonts', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "embedFonts"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
		}});
		Object.defineProperty(TextField.prototype, 'gridFitType', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "gridFitType"'));
		}, set:function ($$$$gridFitType)
		{
			//set default parameter values
			var gridFitType = $es4.$$coerce($$$$gridFitType, String);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "gridFitType"'));
		}});
		Object.defineProperty(TextField.prototype, 'maxChars', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_maxChars;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			$$this.$$TextField.$_maxChars = value;
		}});
		Object.defineProperty(TextField.prototype, 'maxScrollH', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: maxScrollH is not supported.'));
		}});
		Object.defineProperty(TextField.prototype, 'maxScrollV', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: maxScrollV is not supported.'));
		}});
		Object.defineProperty(TextField.prototype, 'mouseWheelEnabled', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "mouseWheelEnabled"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "mouseWheelEnabled"'));
		}});
		Object.defineProperty(TextField.prototype, 'numLines', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "numLines"'));
		}});
		Object.defineProperty(TextField.prototype, 'restrict', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_restrict;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextField.$_restrict = value;
		}});
		Object.defineProperty(TextField.prototype, 'scrollH', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: scrollH is not supported.'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: scrollH is not supported.'));
		}});
		Object.defineProperty(TextField.prototype, 'scrollV', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: scrollV is not supported.'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: scrollV is not supported.'));
		}});
		Object.defineProperty(TextField.prototype, 'selectable', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_selectable;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			$$this.$$TextField.$_selectable = value;
			if (value && $$this.mouseEnabled)
			{
				$$this.$$TextField.$_domTextView.style.webkitTouchCallout = $$this.$$TextField.$_domTextView.style.webkitUserSelect = $$this.$$TextField.$_domTextView.style.khtmlUserSelect = $$this.$$TextField.$_domTextView.style.mozUserSelect = $$this.$$TextField.$_domTextView.style.msUserSelect = $$this.$$TextField.$_domTextView.style.userSelect = $$this.$$TextField.$_domTextView.style.cursor = null;
				$$this.$$TextField.$_domTextView.style.cursor = 'text';
				$$this.$$TextField.$_domTextView.style.pointerEvents = 'auto';
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.webkitTouchCallout = $$this.$$TextField.$_domTextView.style.webkitUserSelect = $$this.$$TextField.$_domTextView.style.khtmlUserSelect = $$this.$$TextField.$_domTextView.style.mozUserSelect = $$this.$$TextField.$_domTextView.style.msUserSelect = $$this.$$TextField.$_domTextView.style.userSelect = 'none';
				$$this.$$TextField.$_domTextView.style.cursor = 'default';
				$$this.$$TextField.$_domTextView.style.pointerEvents = 'none';
			}
		}});
		Object.defineProperty(TextField.prototype, 'mouseEnabled', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'mouseEnabled', 'get');
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			if (enabled && $$this.$$TextField.$_selectable)
			{
				$$this.$$TextField.$_domTextView.style.webkitTouchCallout = $$this.$$TextField.$_domTextView.style.webkitUserSelect = $$this.$$TextField.$_domTextView.style.khtmlUserSelect = $$this.$$TextField.$_domTextView.style.mozUserSelect = $$this.$$TextField.$_domTextView.style.msUserSelect = $$this.$$TextField.$_domTextView.style.userSelect = $$this.$$TextField.$_domTextView.style.cursor = null;
				$$this.$$TextField.$_domTextView.style.cursor = 'text';
				$$this.$$TextField.$_domTextView.style.pointerEvents = 'auto';
			}
			else
			{
				$$this.$$TextField.$_domTextView.style.webkitTouchCallout = $$this.$$TextField.$_domTextView.style.webkitUserSelect = $$this.$$TextField.$_domTextView.style.khtmlUserSelect = $$this.$$TextField.$_domTextView.style.mozUserSelect = $$this.$$TextField.$_domTextView.style.msUserSelect = $$this.$$TextField.$_domTextView.style.userSelect = 'none';
				$$this.$$TextField.$_domTextView.style.cursor = 'default';
				$$this.$$TextField.$_domTextView.style.pointerEvents = 'none';
			}
			$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'mouseEnabled', 'set', enabled);
		}});
		Object.defineProperty(TextField.prototype, 'selectedText', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "selectedText"'));
		}});
		Object.defineProperty(TextField.prototype, 'selectionBeginIndex', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "selectionBeginIndex"'));
		}});
		Object.defineProperty(TextField.prototype, 'selectionEndIndex', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "selectionEndIndex"'));
		}});
		Object.defineProperty(TextField.prototype, 'sharpness', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "sharpness"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "sharpness"'));
		}});
		Object.defineProperty(TextField.prototype, 'styleSheet', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextField.$_styleSheet;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, StyleSheet);

			var $$this = this;
			$$this.$$TextField.$_styleSheet = value;
		}});
		Object.defineProperty(TextField.prototype, 'textHeight', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "textHeight"'));
		}});
		Object.defineProperty(TextField.prototype, 'textInteractionMode', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "textInteractionMode"'));
		}});
		Object.defineProperty(TextField.prototype, 'textWidth', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "textWidth"'));
		}});
		Object.defineProperty(TextField.prototype, 'thickness', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "thickness"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "thickness"'));
		}});
		Object.defineProperty(TextField.prototype, 'useRichTextClipboard', {get:function ()
		{
			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "useRichTextClipboard"'));
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Boolean);

			var $$this = this;
			throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "useRichTextClipboard"'));
		}});
		Object.defineProperty(TextField.prototype, 'tabEnabled', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'tabEnabled', 'get');
		}, set:function ($$$$enabled)
		{
			//set default parameter values
			var enabled = $es4.$$coerce($$$$enabled, Boolean);

			var $$this = this;
			$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'tabEnabled', 'set', enabled);
			if (!enabled && $$this.$$TextField.$_properties.InteractiveObjectScope.$_tabIndex == -1)
			{
				$$this.$$TextField.$_domTextView.setAttribute('aria-hidden', true);
			}
			else
			{
				$$this.$$TextField.$_domTextView.removeAttribute('aria-hidden');
			}
		}});
		Object.defineProperty(TextField.prototype, 'tabIndex', {get:function ()
		{
			var $$this = this; return $es4.$$super2($$this, InteractiveObject, '$$TextField', 'tabIndex', 'get');
		}, set:function ($$$$index)
		{
			//set default parameter values
			var index = $es4.$$coerce($$$$index, int);

			var $$this = this;
			$es4.$$super2($$this, InteractiveObject, '$$InteractiveObject', 'tabIndex', 'set', index);
			if (!$$this.$$TextField.$_properties.InteractiveObjectScope.$_tabEnabled && index == -1)
			{
				$$this.$$TextField.$_domTextView.setAttribute('aria-hidden', true);
			}
			else
			{
				$$this.$$TextField.$_domTextView.removeAttribute('aria-hidden');
			}
		}});

		//properties
		TextField.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_properties = value }
		};

		TextField.prototype.$$v.$_domTextView = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_domTextView; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_domTextView = $es4.$$coerce(value, Object); }
		};

		TextField.prototype.$$v.$_type = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_type; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_type = $es4.$$coerce(value, String); }
		};

		TextField.prototype.$$v.$_text = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_text; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_text = $es4.$$coerce(value, String); }
		};

		TextField.prototype.$$v.$_htmlText = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_htmlText; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_htmlText = $es4.$$coerce(value, String); }
		};

		TextField.prototype.$$v.$_multiline = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_multiline; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_multiline = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_wordWrap = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_wordWrap; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_wordWrap = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_autoSize = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_autoSize; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_autoSize = $es4.$$coerce(value, String); }
		};

		TextField.prototype.$$v.$_selectable = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_selectable; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_selectable = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_condenseWhite = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_condenseWhite; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_condenseWhite = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_restrict = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_restrict; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_restrict = $es4.$$coerce(value, String); }
		};

		TextField.prototype.$$v.$_maxChars = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_maxChars; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_maxChars = $es4.$$coerce(value, int); }
		};

		TextField.prototype.$$v.$_background = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_background; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_background = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_backgroundColor = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_backgroundColor; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_backgroundColor = $es4.$$coerce(value, uint); }
		};

		TextField.prototype.$$v.$_border = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_border; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_border = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_borderColor = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_borderColor; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_borderColor = $es4.$$coerce(value, uint); }
		};

		TextField.prototype.$$v.$_skipSetAutoDimensions = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_skipSetAutoDimensions; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_skipSetAutoDimensions = $es4.$$coerce(value, Boolean); }
		};

		TextField.prototype.$$v.$_characterTextFormats = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_characterTextFormats; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_characterTextFormats = $es4.$$coerce(value, Array); }
		};

		TextField.prototype.$$v.$_defaultTextFormat = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_defaultTextFormat; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_defaultTextFormat = $es4.$$coerce(value, TextFormat); }
		};

		TextField.prototype.$$v.$_styleSheet = {
		get:function () { var $$this = this.$$this; return $$this.$$TextField.$$p.$_styleSheet; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextField.$$p.$_styleSheet = $es4.$$coerce(value, StyleSheet); }
		};

	});

	//class initializer
	TextField.$$cinit = (function ()
	{
		TextField.$$cinit = undefined;
	});

	//private static method
	TextField.mapShiftKeyPressToActualCharacter = (function ($$$$characterCode)
	{
		if (TextField.$$cinit !== undefined) TextField.$$cinit();

		//set default parameter values
		var characterCode = $$$$characterCode;

		switch (characterCode)
		{
			case 27:
			case 8:
			case 9:
			case 20:
			case 16:
			case 17:
			case 91:
			case 92:
			case 18:
				return '';
		}
		var characterMap = [];
		characterMap[192] = '~';
		characterMap[49] = '!';
		characterMap[50] = '@';
		characterMap[51] = '#';
		characterMap[52] = '$';
		characterMap[53] = '%';
		characterMap[54] = '^';
		characterMap[55] = '&';
		characterMap[56] = '*';
		characterMap[57] = '(';
		characterMap[48] = ')';
		characterMap[109] = '_';
		characterMap[107] = '+';
		characterMap[219] = '{';
		characterMap[221] = '}';
		characterMap[220] = '|';
		characterMap[59] = ':';
		characterMap[222] = '\'';
		characterMap[188] = '<';
		characterMap[190] = '>';
		characterMap[191] = '?';
		characterMap[32] = ' ';
		var character = '';
		if (characterCode >= 65 && characterCode <= 90)
		{
			character = String.fromCharCode(characterCode);
		}
		else
		{
			character = characterMap[characterCode];
		}
		return character;
	});

	//private static method
	TextField.restrictTextHandler = (function ($$$$text, $$$$restrict)
	{
		if (TextField.$$cinit !== undefined) TextField.$$cinit();

		//set default parameter values
		var text = $$$$text;
		var restrict = $$$$restrict;

		if (restrict !== null)
		{
			if (restrict == '')
			{
				text = '';
			}
			else
			{
				text = text.replace($es4.$$primitive(new RegExp('[^' + restrict + ']')), '');
			}
		}
		return text;
	});

	//public static method
	TextField.isFontCompatible = (function ($$$$fontName, $$$$fontStyle)
	{
		if (TextField.$$cinit !== undefined) TextField.$$cinit();

		//set default parameter values
		var fontName = $es4.$$coerce($$$$fontName, String);
		var fontStyle = $es4.$$coerce($$$$fontStyle, String);

		throw $es4.$$primitive(new Error('TextField: attempted call to an unimplemented function "isFontCompatible"'));
	});
	function TextField()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextField) || $$this.$$TextField !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextField) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextField.$$construct($$this, $$args);
		}
	}

	//construct
	TextField.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextField.$$cinit !== undefined) TextField.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextField', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$TextField, '$_properties', TextField.prototype.$$v.$_properties);
		Object.defineProperty($$this.$$TextField, '$_domTextView', TextField.prototype.$$v.$_domTextView);
		Object.defineProperty($$this.$$TextField, '$_type', TextField.prototype.$$v.$_type);
		Object.defineProperty($$this.$$TextField, '$_text', TextField.prototype.$$v.$_text);
		Object.defineProperty($$this.$$TextField, '$_htmlText', TextField.prototype.$$v.$_htmlText);
		Object.defineProperty($$this.$$TextField, '$_multiline', TextField.prototype.$$v.$_multiline);
		Object.defineProperty($$this.$$TextField, '$_wordWrap', TextField.prototype.$$v.$_wordWrap);
		Object.defineProperty($$this.$$TextField, '$_autoSize', TextField.prototype.$$v.$_autoSize);
		Object.defineProperty($$this.$$TextField, '$_selectable', TextField.prototype.$$v.$_selectable);
		Object.defineProperty($$this.$$TextField, '$_condenseWhite', TextField.prototype.$$v.$_condenseWhite);
		Object.defineProperty($$this.$$TextField, '$_restrict', TextField.prototype.$$v.$_restrict);
		Object.defineProperty($$this.$$TextField, '$_maxChars', TextField.prototype.$$v.$_maxChars);
		Object.defineProperty($$this.$$TextField, '$_background', TextField.prototype.$$v.$_background);
		Object.defineProperty($$this.$$TextField, '$_backgroundColor', TextField.prototype.$$v.$_backgroundColor);
		Object.defineProperty($$this.$$TextField, '$_border', TextField.prototype.$$v.$_border);
		Object.defineProperty($$this.$$TextField, '$_borderColor', TextField.prototype.$$v.$_borderColor);
		Object.defineProperty($$this.$$TextField, '$_skipSetAutoDimensions', TextField.prototype.$$v.$_skipSetAutoDimensions);
		Object.defineProperty($$this.$$TextField, '$_characterTextFormats', TextField.prototype.$$v.$_characterTextFormats);
		Object.defineProperty($$this.$$TextField, '$_defaultTextFormat', TextField.prototype.$$v.$_defaultTextFormat);
		Object.defineProperty($$this.$$TextField, '$_styleSheet', TextField.prototype.$$v.$_styleSheet);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'onKeyDown', TextField.prototype.$$v.onKeyDown);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'onKeyUp', TextField.prototype.$$v.onKeyUp);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'setAutoDimensions', TextField.prototype.$$v.setAutoDimensions);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'onInput', TextField.prototype.$$v.onInput);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'onBlur', TextField.prototype.$$v.onBlur);

		//private instance method
		Object.defineProperty($$this.$$TextField, '$_applyTextFormattingToNode', TextField.prototype.$$v.$_applyTextFormattingToNode);

		//private instance method
		Object.defineProperty($$this.$$TextField, '$_applyTextFormatting', TextField.prototype.$$v.$_applyTextFormatting);

		//private instance method
		Object.defineProperty($$this.$$TextField, '$_generateHTMLText', TextField.prototype.$$v.$_generateHTMLText);

		//private instance method
		Object.defineProperty($$this.$$TextField, 'toColor', TextField.prototype.$$v.toColor);

		//call construct on super
		InteractiveObject.$$construct($$this);

		//initialize properties
		TextField.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextField.$$constructor.apply($$this, args);
	});

	//initializer
	TextField.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$TextField.$$p.$_properties = undefined;
		$$this.$$TextField.$$p.$_domTextView = $es4.$$coerce(undefined, Object);
		$$this.$$TextField.$$p.$_type = $es4.$$coerce(undefined, String);
		$$this.$$TextField.$$p.$_text = $es4.$$coerce('', String);
		$$this.$$TextField.$$p.$_htmlText = $es4.$$coerce('', String);
		$$this.$$TextField.$$p.$_multiline = $es4.$$coerce(undefined, Boolean);
		$$this.$$TextField.$$p.$_wordWrap = $es4.$$coerce(undefined, Boolean);
		$$this.$$TextField.$$p.$_autoSize = $es4.$$coerce(TextFieldAutoSize.NONE, String);
		$$this.$$TextField.$$p.$_selectable = $es4.$$coerce(true, Boolean);
		$$this.$$TextField.$$p.$_condenseWhite = $es4.$$coerce(undefined, Boolean);
		$$this.$$TextField.$$p.$_restrict = $es4.$$coerce(undefined, String);
		$$this.$$TextField.$$p.$_maxChars = $es4.$$coerce(int.MAX_VALUE, int);
		$$this.$$TextField.$$p.$_background = $es4.$$coerce(undefined, Boolean);
		$$this.$$TextField.$$p.$_backgroundColor = $es4.$$coerce(0xFFFFFF, uint);
		$$this.$$TextField.$$p.$_border = $es4.$$coerce(false, Boolean);
		$$this.$$TextField.$$p.$_borderColor = $es4.$$coerce(undefined, uint);
		$$this.$$TextField.$$p.$_skipSetAutoDimensions = $es4.$$coerce(undefined, Boolean);
		$$this.$$TextField.$$p.$_characterTextFormats = $es4.$$coerce(undefined, Array);
		$$this.$$TextField.$$p.$_defaultTextFormat = $es4.$$coerce($es4.$$primitive(new TextFormat()), TextFormat);
		$$this.$$TextField.$$p.$_styleSheet = $es4.$$coerce(undefined, StyleSheet);
	
		//call iinit on super
		InteractiveObject.$$iinit($$this);
	});

	//constructor
	TextField.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$TextField.$_properties === undefined)
		{
			$$this.$__properties({});
		}
		InteractiveObject.$$constructor.call($$this);
		$$this.$$TextField.$_properties.DisplayObjectScope.$_setExplicitBounds(100, 100);
		$es4.$$getDescriptor($$this.$$TextField.$_properties.TextFieldScope.pscope, 'type').set.call($$this, TextFieldType.DYNAMIC);
	});

	return $es4.$$class(TextField, {EXTENDS:'flash.display.InteractiveObject'}, 'flash.text::TextField');
})();
//flash.text.TextField


//flash.text.TextFieldAutoSize
$es4.$$package('flash.text').TextFieldAutoSize = (function ()
{
	//properties
	var $$j = {};
	TextFieldAutoSize.CENTER = "center";
	TextFieldAutoSize.LEFT = "left";
	TextFieldAutoSize.NONE = "none";
	TextFieldAutoSize.RIGHT = "right";

	//class pre initializer
	TextFieldAutoSize.$$sinit = (function ()
	{
		TextFieldAutoSize.$$sinit = undefined;

		//set prototype and constructor
		TextFieldAutoSize.prototype = Object.create(Object.prototype);
		Object.defineProperty(TextFieldAutoSize.prototype, "constructor", { value: TextFieldAutoSize, enumerable: false });

		//hold private values
		Object.defineProperty(TextFieldAutoSize.prototype, '$$v', {value:{}});
	});

	//class initializer
	TextFieldAutoSize.$$cinit = (function ()
	{
		TextFieldAutoSize.$$cinit = undefined;
	});

	function TextFieldAutoSize()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextFieldAutoSize) || $$this.$$TextFieldAutoSize !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextFieldAutoSize) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextFieldAutoSize.$$construct($$this, $$args);
		}
	}

	//construct
	TextFieldAutoSize.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextFieldAutoSize.$$cinit !== undefined) TextFieldAutoSize.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextFieldAutoSize', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		TextFieldAutoSize.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextFieldAutoSize.$$constructor.apply($$this, args);
	});

	//initializer
	TextFieldAutoSize.$$iinit = (function ($$this)
	{
	});

	//constructor
	TextFieldAutoSize.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(TextFieldAutoSize, null, 'flash.text::TextFieldAutoSize');
})();
//flash.text.TextFieldAutoSize


//flash.text.TextFieldType
$es4.$$package('flash.text').TextFieldType = (function ()
{
	//properties
	var $$j = {};
	TextFieldType.DYNAMIC = "dynamic";
	TextFieldType.INPUT = "input";

	//class pre initializer
	TextFieldType.$$sinit = (function ()
	{
		TextFieldType.$$sinit = undefined;

		//set prototype and constructor
		TextFieldType.prototype = Object.create(Object.prototype);
		Object.defineProperty(TextFieldType.prototype, "constructor", { value: TextFieldType, enumerable: false });

		//hold private values
		Object.defineProperty(TextFieldType.prototype, '$$v', {value:{}});
	});

	//class initializer
	TextFieldType.$$cinit = (function ()
	{
		TextFieldType.$$cinit = undefined;
	});

	function TextFieldType()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextFieldType) || $$this.$$TextFieldType !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextFieldType) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextFieldType.$$construct($$this, $$args);
		}
	}

	//construct
	TextFieldType.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextFieldType.$$cinit !== undefined) TextFieldType.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextFieldType', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		TextFieldType.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextFieldType.$$constructor.apply($$this, args);
	});

	//initializer
	TextFieldType.$$iinit = (function ($$this)
	{
	});

	//constructor
	TextFieldType.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(TextFieldType, null, 'flash.text::TextFieldType');
})();
//flash.text.TextFieldType


//flash.text.TextFormat
$es4.$$package('flash.text').TextFormat = (function ()
{
	//imports
	var TextFormatAlign;

	//class pre initializer
	TextFormat.$$sinit = (function ()
	{
		TextFormat.$$sinit = undefined;

		//initialize imports
		TextFormatAlign = $es4.$$['flash.text'].TextFormatAlign;

		//set prototype and constructor
		TextFormat.prototype = Object.create(Object.prototype);
		Object.defineProperty(TextFormat.prototype, "constructor", { value: TextFormat, enumerable: false });

		//hold private values
		Object.defineProperty(TextFormat.prototype, '$$v', {value:{}});

		Object.defineProperty(TextFormat.prototype, 'align', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._align;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextFormat._align = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'blockIndent', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._blockIndent;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._blockIndent = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'bold', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._bold;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._bold = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'bullet', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._bullet;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._bullet = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'color', {get:function ()
		{
			var $$this = this;
			return ($$this.$$TextFormat._color == null) ? null : Number($$this.$$TextFormat._color);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._color = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'display', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._display;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextFormat._display = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'font', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._font;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextFormat._font = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'indent', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._indent;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._indent = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'italic', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._italic;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._italic = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'kerning', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._kerning;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._kerning = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'leading', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._leading;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._leading = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'leftMargin', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._leftMargin;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._leftMargin = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'letterSpacing', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._letterSpacing;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._letterSpacing = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'rightMargin', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._rightMargin;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._rightMargin = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'size', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._size;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._size = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'tabStops', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._tabStops;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Array);

			var $$this = this;
			$$this.$$TextFormat._tabStops = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'target', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._target;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$TextFormat._target = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'underline', {get:function ()
		{
			var $$this = this;
			return $$this.$$TextFormat._underline;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$TextFormat._underline = value;
		}});
		Object.defineProperty(TextFormat.prototype, 'url', {get:function ()
		{
			var $$this = this;
			return $$this._url;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this._url = value;
		}});

		//properties
		Object.defineProperty(TextFormat.prototype, '_url', {
		get:function () { var $$this = this; return $$this.$$TextFormat._url; },
		set:function (value) { var $$this = this; $$this.$$TextFormat._url = $es4.$$coerce(value, String); }
		});

		TextFormat.prototype.$$v._align = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._align; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._align = $es4.$$coerce(value, String); }
		};

		TextFormat.prototype.$$v._blockIndent = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._blockIndent; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._blockIndent = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._bold = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._bold; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._bold = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._bullet = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._bullet; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._bullet = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._color = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._color; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._color = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._display = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._display; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._display = $es4.$$coerce(value, String); }
		};

		TextFormat.prototype.$$v._indent = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._indent; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._indent = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._font = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._font; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._font = $es4.$$coerce(value, String); }
		};

		TextFormat.prototype.$$v._italic = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._italic; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._italic = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._leading = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._leading; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._leading = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._kerning = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._kerning; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._kerning = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._leftMargin = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._leftMargin; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._leftMargin = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._letterSpacing = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._letterSpacing; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._letterSpacing = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._rightMargin = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._rightMargin; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._rightMargin = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._size = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._size; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._size = $es4.$$coerce(value, Object); }
		};

		TextFormat.prototype.$$v._tabStops = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._tabStops; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._tabStops = $es4.$$coerce(value, Array); }
		};

		TextFormat.prototype.$$v._target = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._target; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._target = $es4.$$coerce(value, String); }
		};

		TextFormat.prototype.$$v._underline = {
		get:function () { var $$this = this.$$this; return $$this.$$TextFormat.$$p._underline; },
		set:function (value) { var $$this = this.$$this; $$this.$$TextFormat.$$p._underline = $es4.$$coerce(value, Object); }
		};

	});

	//class initializer
	TextFormat.$$cinit = (function ()
	{
		TextFormat.$$cinit = undefined;
	});

	function TextFormat()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextFormat) || $$this.$$TextFormat !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextFormat) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextFormat.$$construct($$this, $$args);
		}
	}

	//construct
	TextFormat.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextFormat.$$cinit !== undefined) TextFormat.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextFormat', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$TextFormat, '_align', TextFormat.prototype.$$v._align);
		Object.defineProperty($$this.$$TextFormat, '_blockIndent', TextFormat.prototype.$$v._blockIndent);
		Object.defineProperty($$this.$$TextFormat, '_bold', TextFormat.prototype.$$v._bold);
		Object.defineProperty($$this.$$TextFormat, '_bullet', TextFormat.prototype.$$v._bullet);
		Object.defineProperty($$this.$$TextFormat, '_color', TextFormat.prototype.$$v._color);
		Object.defineProperty($$this.$$TextFormat, '_display', TextFormat.prototype.$$v._display);
		Object.defineProperty($$this.$$TextFormat, '_indent', TextFormat.prototype.$$v._indent);
		Object.defineProperty($$this.$$TextFormat, '_font', TextFormat.prototype.$$v._font);
		Object.defineProperty($$this.$$TextFormat, '_italic', TextFormat.prototype.$$v._italic);
		Object.defineProperty($$this.$$TextFormat, '_leading', TextFormat.prototype.$$v._leading);
		Object.defineProperty($$this.$$TextFormat, '_kerning', TextFormat.prototype.$$v._kerning);
		Object.defineProperty($$this.$$TextFormat, '_leftMargin', TextFormat.prototype.$$v._leftMargin);
		Object.defineProperty($$this.$$TextFormat, '_letterSpacing', TextFormat.prototype.$$v._letterSpacing);
		Object.defineProperty($$this.$$TextFormat, '_rightMargin', TextFormat.prototype.$$v._rightMargin);
		Object.defineProperty($$this.$$TextFormat, '_size', TextFormat.prototype.$$v._size);
		Object.defineProperty($$this.$$TextFormat, '_tabStops', TextFormat.prototype.$$v._tabStops);
		Object.defineProperty($$this.$$TextFormat, '_target', TextFormat.prototype.$$v._target);
		Object.defineProperty($$this.$$TextFormat, '_underline', TextFormat.prototype.$$v._underline);

		//initialize properties
		TextFormat.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextFormat.$$constructor.apply($$this, args);
	});

	//initializer
	TextFormat.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$TextFormat._url = $es4.$$coerce(undefined, String);
		$$this.$$TextFormat.$$p._align = $es4.$$coerce(TextFormatAlign.LEFT, String);
		$$this.$$TextFormat.$$p._blockIndent = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._bold = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._bullet = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._color = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._display = $es4.$$coerce(undefined, String);
		$$this.$$TextFormat.$$p._indent = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._font = $es4.$$coerce(undefined, String);
		$$this.$$TextFormat.$$p._italic = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._leading = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._kerning = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._leftMargin = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._letterSpacing = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._rightMargin = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._size = $es4.$$coerce(undefined, Object);
		$$this.$$TextFormat.$$p._tabStops = $es4.$$coerce(undefined, Array);
		$$this.$$TextFormat.$$p._target = $es4.$$coerce(undefined, String);
		$$this.$$TextFormat.$$p._underline = $es4.$$coerce(undefined, Object);
	
	});

	//constructor
	TextFormat.$$constructor = (function ($$$$font, $$$$size, $$$$color, $$$$bold, $$$$italic, $$$$underline, $$$$url, $$$$target, $$$$align, $$$$leftMargin, $$$$rightMargin, $$$$indent, $$$$leading)
	{
		var $$this = this;
		//set default parameter values
		var font = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$font, String);
		var size = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$size, Object);
		var color = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$color, Object);
		var bold = (3 > arguments.length - 1) ? null : $es4.$$coerce($$$$bold, Object);
		var italic = (4 > arguments.length - 1) ? null : $es4.$$coerce($$$$italic, Object);
		var underline = (5 > arguments.length - 1) ? null : $es4.$$coerce($$$$underline, Object);
		var url = (6 > arguments.length - 1) ? null : $es4.$$coerce($$$$url, String);
		var target = (7 > arguments.length - 1) ? null : $es4.$$coerce($$$$target, String);
		var align = (8 > arguments.length - 1) ? null : $es4.$$coerce($$$$align, String);
		var leftMargin = (9 > arguments.length - 1) ? null : $es4.$$coerce($$$$leftMargin, Object);
		var rightMargin = (10 > arguments.length - 1) ? null : $es4.$$coerce($$$$rightMargin, Object);
		var indent = (11 > arguments.length - 1) ? null : $es4.$$coerce($$$$indent, Object);
		var leading = (12 > arguments.length - 1) ? null : $es4.$$coerce($$$$leading, Object);

		$$this.$$TextFormat._font = font;
		$$this.$$TextFormat._size = size;
		$$this.$$TextFormat._color = color;
		$$this.$$TextFormat._bold = bold;
		$$this.$$TextFormat._italic = italic;
		$$this.$$TextFormat._underline = underline;
		$$this._url = url;
		$$this.$$TextFormat._target = target;
		$$this.$$TextFormat._align = align;
		$$this.$$TextFormat._leftMargin = leftMargin;
		$$this.$$TextFormat._rightMargin = rightMargin;
		$$this.$$TextFormat._indent = indent;
		$$this.$$TextFormat._leading = leading;
	});

	return $es4.$$class(TextFormat, null, 'flash.text::TextFormat');
})();
//flash.text.TextFormat


//flash.text.TextFormatAlign
$es4.$$package('flash.text').TextFormatAlign = (function ()
{
	//properties
	var $$j = {};
	TextFormatAlign.CENTER = "center";
	TextFormatAlign.END = "end";
	TextFormatAlign.JUSTIFY = "justify";
	TextFormatAlign.LEFT = "left";
	TextFormatAlign.RIGHT = "right";
	TextFormatAlign.START = "start";

	//class pre initializer
	TextFormatAlign.$$sinit = (function ()
	{
		TextFormatAlign.$$sinit = undefined;

		//set prototype and constructor
		TextFormatAlign.prototype = Object.create(Object.prototype);
		Object.defineProperty(TextFormatAlign.prototype, "constructor", { value: TextFormatAlign, enumerable: false });

		//hold private values
		Object.defineProperty(TextFormatAlign.prototype, '$$v', {value:{}});
	});

	//class initializer
	TextFormatAlign.$$cinit = (function ()
	{
		TextFormatAlign.$$cinit = undefined;
	});

	function TextFormatAlign()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof TextFormatAlign) || $$this.$$TextFormatAlign !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], TextFormatAlign) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			TextFormatAlign.$$construct($$this, $$args);
		}
	}

	//construct
	TextFormatAlign.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (TextFormatAlign.$$cinit !== undefined) TextFormatAlign.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$TextFormatAlign', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		TextFormatAlign.$$iinit($$this);

		//call constructor
		if (args !== undefined) TextFormatAlign.$$constructor.apply($$this, args);
	});

	//initializer
	TextFormatAlign.$$iinit = (function ($$this)
	{
	});

	//constructor
	TextFormatAlign.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(TextFormatAlign, null, 'flash.text::TextFormatAlign');
})();
//flash.text.TextFormatAlign


//flash.text.TextLineMetrics
$$package('flash.text').TextLineMetrics = function () { throw new Error('Use of unimplemented class: TextLineMetrics'); }
//flash.text.TextLineMetrics


//flash.text.TextRenderer
$$package('flash.text').TextRenderer = function () { throw new Error('Use of unimplemented class: TextRenderer'); }
//flash.text.TextRenderer


//flash.text.TextSnapshot
$$package('flash.text').TextSnapshot = function () { throw new Error('Use of unimplemented class: TextSnapshot'); }
//flash.text.TextSnapshot


//flash.ui.ContextMenu
$$package('flash.ui').ContextMenu = function () { throw new Error('Use of unimplemented class: ContextMenu'); }
//flash.ui.ContextMenu


//flash.ui.ContextMenuBuiltInItems
$$package('flash.ui').ContextMenuBuiltInItems = function () { throw new Error('Use of unimplemented class: ContextMenuBuiltInItems'); }
//flash.ui.ContextMenuBuiltInItems


//flash.ui.ContextMenuClipboardItems
$$package('flash.ui').ContextMenuClipboardItems = function () { throw new Error('Use of unimplemented class: ContextMenuClipboardItems'); }
//flash.ui.ContextMenuClipboardItems


//flash.ui.ContextMenuItem
$$package('flash.ui').ContextMenuItem = function () { throw new Error('Use of unimplemented class: ContextMenuItem'); }
//flash.ui.ContextMenuItem


//flash.ui.Keyboard
$es4.$$package('flash.ui').Keyboard = (function ()
{
	//properties
	var $$j = {};
	Keyboard.A = 65;
	Keyboard.ALTERNATE = 18;
	Keyboard.AUDIO = 0x01000017;
	Keyboard.B = 66;
	Keyboard.BACK = 0x01000016;
	Keyboard.BACKQUOTE = 192;
	Keyboard.BACKSLASH = 220;
	Keyboard.BACKSPACE = 8;
	Keyboard.BLUE = 0x01000003;
	Keyboard.C = 67;
	Keyboard.CAPS_LOCK = 20;
	Keyboard.CHANNEL_DOWN = 0x01000005;
	Keyboard.CHANNEL_UP = 0x01000004;
	Object.defineProperty(Keyboard, 'CharCodeStrings', {
	get:function () { if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit(); return $$j.CharCodeStrings; },
	set:function (value) { if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit(); $$j.CharCodeStrings = $es4.$$coerce(value, Array); }
	});

	Keyboard.COMMA = 188;
	Keyboard.COMMAND = 15;
	Keyboard.CONTROL = 17;
	Keyboard.D = 68;
	Keyboard.DELETE = 46;
	Keyboard.DOWN = 40;
	Keyboard.DVR = 0x01000019;
	Keyboard.E = 69;
	Keyboard.END = 35;
	Keyboard.ENTER = 13;
	Keyboard.EQUAL = 187;
	Keyboard.ESCAPE = 27;
	Keyboard.EXIT = 0x01000015;
	Keyboard.F = 70;
	Keyboard.F1 = 112;
	Keyboard.F10 = 121;
	Keyboard.F11 = 122;
	Keyboard.F12 = 123;
	Keyboard.F13 = 124;
	Keyboard.F14 = 125;
	Keyboard.F15 = 126;
	Keyboard.F2 = 113;
	Keyboard.F3 = 114;
	Keyboard.F4 = 115;
	Keyboard.F5 = 116;
	Keyboard.F6 = 117;
	Keyboard.F7 = 118;
	Keyboard.F8 = 119;
	Keyboard.F9 = 120;
	Keyboard.FAST_FORWARD = 0x0100000A;
	Keyboard.G = 71;
	Keyboard.GREEN = 0x01000001;
	Keyboard.GUIDE = 0x01000014;
	Keyboard.H = 72;
	Keyboard.HELP = 0x0100001D;
	Keyboard.HOME = 36;
	Keyboard.I = 73;
	Keyboard.INFO = 0x01000013;
	Keyboard.INPUT = 0x0100001B;
	Keyboard.INSERT = 45;
	Keyboard.J = 74;
	Keyboard.K = 75;
	Keyboard.KEYNAME_BEGIN = "Begin";
	Keyboard.KEYNAME_BREAK = "Break";
	Keyboard.KEYNAME_CLEARDISPLAY = "ClrDsp";
	Keyboard.KEYNAME_CLEARLINE = "ClrLn";
	Keyboard.KEYNAME_DELETE = "Delete";
	Keyboard.KEYNAME_DELETECHAR = "DelChr";
	Keyboard.KEYNAME_DELETELINE = "DelLn";
	Keyboard.KEYNAME_DOWNARROW = "Down";
	Keyboard.KEYNAME_END = "End";
	Keyboard.KEYNAME_EXECUTE = "Exec";
	Keyboard.KEYNAME_F1 = "F1";
	Keyboard.KEYNAME_F10 = "F10";
	Keyboard.KEYNAME_F11 = "F11";
	Keyboard.KEYNAME_F12 = "F12";
	Keyboard.KEYNAME_F13 = "F13";
	Keyboard.KEYNAME_F14 = "F14";
	Keyboard.KEYNAME_F15 = "F15";
	Keyboard.KEYNAME_F16 = "F16";
	Keyboard.KEYNAME_F17 = "F17";
	Keyboard.KEYNAME_F18 = "F18";
	Keyboard.KEYNAME_F19 = "F19";
	Keyboard.KEYNAME_F2 = "F2";
	Keyboard.KEYNAME_F20 = "F20";
	Keyboard.KEYNAME_F21 = "F21";
	Keyboard.KEYNAME_F22 = "F22";
	Keyboard.KEYNAME_F23 = "F23";
	Keyboard.KEYNAME_F24 = "F24";
	Keyboard.KEYNAME_F25 = "F25";
	Keyboard.KEYNAME_F26 = "F26";
	Keyboard.KEYNAME_F27 = "F27";
	Keyboard.KEYNAME_F28 = "F28";
	Keyboard.KEYNAME_F29 = "F29";
	Keyboard.KEYNAME_F3 = "F3";
	Keyboard.KEYNAME_F30 = "F30";
	Keyboard.KEYNAME_F31 = "F31";
	Keyboard.KEYNAME_F32 = "F32";
	Keyboard.KEYNAME_F33 = "F33";
	Keyboard.KEYNAME_F34 = "F34";
	Keyboard.KEYNAME_F35 = "F35";
	Keyboard.KEYNAME_F4 = "F4";
	Keyboard.KEYNAME_F5 = "F5";
	Keyboard.KEYNAME_F6 = "F6";
	Keyboard.KEYNAME_F7 = "F7";
	Keyboard.KEYNAME_F8 = "F8";
	Keyboard.KEYNAME_F9 = "F9";
	Keyboard.KEYNAME_FIND = "Find";
	Keyboard.KEYNAME_HELP = "Help";
	Keyboard.KEYNAME_HOME = "Home";
	Keyboard.KEYNAME_INSERT = "Insert";
	Keyboard.KEYNAME_INSERTCHAR = "InsChr";
	Keyboard.KEYNAME_INSERTLINE = "InsLn";
	Keyboard.KEYNAME_LEFTARROW = "Left";
	Keyboard.KEYNAME_MENU = "Menu";
	Keyboard.KEYNAME_MODESWITCH = "ModeSw";
	Keyboard.KEYNAME_NEXT = "Next";
	Keyboard.KEYNAME_PAGEDOWN = "PgDn";
	Keyboard.KEYNAME_PAGEUP = "PgUp";
	Keyboard.KEYNAME_PAUSE = "Pause";
	Keyboard.KEYNAME_PREV = "Prev";
	Keyboard.KEYNAME_PRINT = "Print";
	Keyboard.KEYNAME_PRINTSCREEN = "PrntScrn";
	Keyboard.KEYNAME_REDO = "Redo";
	Keyboard.KEYNAME_RESET = "Reset";
	Keyboard.KEYNAME_RIGHTARROW = "Right";
	Keyboard.KEYNAME_SCROLLLOCK = "ScrlLck";
	Keyboard.KEYNAME_SELECT = "Select";
	Keyboard.KEYNAME_STOP = "Stop";
	Keyboard.KEYNAME_SYSREQ = "SysReq";
	Keyboard.KEYNAME_SYSTEM = "Sys";
	Keyboard.KEYNAME_UNDO = "Undo";
	Keyboard.KEYNAME_UPARROW = "Up";
	Keyboard.KEYNAME_USER = "User";
	Keyboard.L = 76;
	Keyboard.LAST = 0x01000011;
	Keyboard.LEFT = 37;
	Keyboard.LEFTBRACKET = 219;
	Keyboard.LIVE = 0x01000010;
	Keyboard.M = 77;
	Keyboard.MASTER_SHELL = 0x0100001E;
	Keyboard.MENU = 0x01000012;
	Keyboard.MINUS = 189;
	Keyboard.N = 78;
	Keyboard.NEXT = 0x0100000E;
	Keyboard.NUMBER_0 = 48;
	Keyboard.NUMBER_1 = 49;
	Keyboard.NUMBER_2 = 50;
	Keyboard.NUMBER_3 = 51;
	Keyboard.NUMBER_4 = 52;
	Keyboard.NUMBER_5 = 53;
	Keyboard.NUMBER_6 = 54;
	Keyboard.NUMBER_7 = 55;
	Keyboard.NUMBER_8 = 56;
	Keyboard.NUMBER_9 = 57;
	Keyboard.NUMPAD = 21;
	Keyboard.NUMPAD_0 = 96;
	Keyboard.NUMPAD_1 = 97;
	Keyboard.NUMPAD_2 = 98;
	Keyboard.NUMPAD_3 = 99;
	Keyboard.NUMPAD_4 = 100;
	Keyboard.NUMPAD_5 = 101;
	Keyboard.NUMPAD_6 = 102;
	Keyboard.NUMPAD_7 = 103;
	Keyboard.NUMPAD_8 = 104;
	Keyboard.NUMPAD_9 = 105;
	Keyboard.NUMPAD_ADD = 107;
	Keyboard.NUMPAD_DECIMAL = 110;
	Keyboard.NUMPAD_DIVIDE = 111;
	Keyboard.NUMPAD_ENTER = 108;
	Keyboard.NUMPAD_MULTIPLY = 106;
	Keyboard.NUMPAD_SUBTRACT = 109;
	Keyboard.O = 79;
	Keyboard.P = 80;
	Keyboard.PAGE_DOWN = 34;
	Keyboard.PAGE_UP = 33;
	Keyboard.PAUSE = 0x01000008;
	Keyboard.PERIOD = 190;
	Keyboard.PLAY = 0x01000007;
	Keyboard.PREVIOUS = 0x0100000F;
	Keyboard.Q = 81;
	Keyboard.QUOTE = 222;
	Keyboard.R = 82;
	Keyboard.RECORD = 0x01000006;
	Keyboard.RED = 0x01000000;
	Keyboard.REWIND = 0x0100000B;
	Keyboard.RIGHT = 39;
	Keyboard.RIGHTBRACKET = 221;
	Keyboard.S = 83;
	Keyboard.SEARCH = 0x0100001F;
	Keyboard.SEMICOLON = 186;
	Keyboard.SETUP = 0x0100001C;
	Keyboard.SHIFT = 16;
	Keyboard.SKIP_BACKWARD = 0x0100000D;
	Keyboard.SKIP_FORWARD = 0x0100000C;
	Keyboard.SLASH = 191;
	Keyboard.SPACE = 32;
	Keyboard.STOP = 0x01000009;
	Keyboard.STRING_BEGIN = "";
	Keyboard.STRING_BREAK = "";
	Keyboard.STRING_CLEARDISPLAY = "";
	Keyboard.STRING_CLEARLINE = "";
	Keyboard.STRING_DELETE = "";
	Keyboard.STRING_DELETECHAR = "";
	Keyboard.STRING_DELETELINE = "";
	Keyboard.STRING_DOWNARROW = "";
	Keyboard.STRING_END = "";
	Keyboard.STRING_EXECUTE = "";
	Keyboard.STRING_F1 = "";
	Keyboard.STRING_F10 = "";
	Keyboard.STRING_F11 = "";
	Keyboard.STRING_F12 = "";
	Keyboard.STRING_F13 = "";
	Keyboard.STRING_F14 = "";
	Keyboard.STRING_F15 = "";
	Keyboard.STRING_F16 = "";
	Keyboard.STRING_F17 = "";
	Keyboard.STRING_F18 = "";
	Keyboard.STRING_F19 = "";
	Keyboard.STRING_F2 = "";
	Keyboard.STRING_F20 = "";
	Keyboard.STRING_F21 = "";
	Keyboard.STRING_F22 = "";
	Keyboard.STRING_F23 = "";
	Keyboard.STRING_F24 = "";
	Keyboard.STRING_F25 = "";
	Keyboard.STRING_F26 = "";
	Keyboard.STRING_F27 = "";
	Keyboard.STRING_F28 = "";
	Keyboard.STRING_F29 = "";
	Keyboard.STRING_F3 = "";
	Keyboard.STRING_F30 = "";
	Keyboard.STRING_F31 = "";
	Keyboard.STRING_F32 = "";
	Keyboard.STRING_F33 = "";
	Keyboard.STRING_F34 = "";
	Keyboard.STRING_F35 = "";
	Keyboard.STRING_F4 = "";
	Keyboard.STRING_F5 = "";
	Keyboard.STRING_F6 = "";
	Keyboard.STRING_F7 = "";
	Keyboard.STRING_F8 = "";
	Keyboard.STRING_F9 = "";
	Keyboard.STRING_FIND = "";
	Keyboard.STRING_HELP = "";
	Keyboard.STRING_HOME = "";
	Keyboard.STRING_INSERT = "";
	Keyboard.STRING_INSERTCHAR = "";
	Keyboard.STRING_INSERTLINE = "";
	Keyboard.STRING_LEFTARROW = "";
	Keyboard.STRING_MENU = "";
	Keyboard.STRING_MODESWITCH = "";
	Keyboard.STRING_NEXT = "";
	Keyboard.STRING_PAGEDOWN = "";
	Keyboard.STRING_PAGEUP = "";
	Keyboard.STRING_PAUSE = "";
	Keyboard.STRING_PREV = "";
	Keyboard.STRING_PRINT = "";
	Keyboard.STRING_PRINTSCREEN = "";
	Keyboard.STRING_REDO = "";
	Keyboard.STRING_RESET = "";
	Keyboard.STRING_RIGHTARROW = "";
	Keyboard.STRING_SCROLLLOCK = "";
	Keyboard.STRING_SELECT = "";
	Keyboard.STRING_STOP = "";
	Keyboard.STRING_SYSREQ = "";
	Keyboard.STRING_SYSTEM = "";
	Keyboard.STRING_UNDO = "";
	Keyboard.STRING_UPARROW = "";
	Keyboard.STRING_USER = "";
	Keyboard.SUBTITLE = 0x01000018;
	Keyboard.T = 84;
	Keyboard.TAB = 9;
	Keyboard.U = 85;
	Keyboard.UP = 38;
	Keyboard.V = 86;
	Keyboard.VOD = 0x0100001A;
	Keyboard.W = 87;
	Keyboard.X = 88;
	Keyboard.Y = 89;
	Keyboard.YELLOW = 0x01000002;
	Keyboard.Z = 90;

	//class pre initializer
	Keyboard.$$sinit = (function ()
	{
		Keyboard.$$sinit = undefined;

		//set prototype and constructor
		Keyboard.prototype = Object.create(Object.prototype);
		Object.defineProperty(Keyboard.prototype, "constructor", { value: Keyboard, enumerable: false });

		//hold private values
		Object.defineProperty(Keyboard.prototype, '$$v', {value:{}});
	});

	//class initializer
	Keyboard.$$cinit = (function ()
	{
		Keyboard.$$cinit = undefined;

		//initialize properties
		$$j.CharCodeStrings = $es4.$$coerce(undefined, Array);
	
	});

	//public static method
	Keyboard.isAccessible = (function ()
	{
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented function "isAccessible"'));
	});
	Object.defineProperty(Keyboard, 'capsLock', {get:function ()
	{
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented function "capsLock"'));
	}});
	Object.defineProperty(Keyboard, 'hasVirtualKeyboard', {get:function ()
	{
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented function "hasVirtualKeyboard"'));
	}});
	Object.defineProperty(Keyboard, 'numLock', {get:function ()
	{
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented function "numLock"'));
	}});
	Object.defineProperty(Keyboard, 'physicalKeyboardType', {get:function ()
	{
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented function "physicalKeyboardType"'));
	}});

	function Keyboard()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Keyboard) || $$this.$$Keyboard !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Keyboard) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Keyboard.$$construct($$this, $$args);
		}
	}

	//construct
	Keyboard.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Keyboard.$$cinit !== undefined) Keyboard.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Keyboard', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Keyboard.$$iinit($$this);

		//call constructor
		if (args !== undefined) Keyboard.$$constructor.apply($$this, args);
	});

	//initializer
	Keyboard.$$iinit = (function ($$this)
	{
	});

	//constructor
	Keyboard.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('Keyboard: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(Keyboard, null, 'flash.ui::Keyboard');
})();
//flash.ui.Keyboard


//flash.ui.KeyboardType
$$package('flash.ui').KeyboardType = function () { throw new Error('Use of unimplemented class: KeyboardType'); }
//flash.ui.KeyboardType


//flash.ui.KeyLocation
$$package('flash.ui').KeyLocation = function () { throw new Error('Use of unimplemented class: KeyLocation'); }
//flash.ui.KeyLocation


//flash.ui.Mouse
$es4.$$package('flash.ui').Mouse = (function ()
{
	//imports
	var MouseCursorData;
	var MouseCursor;

	//properties
	var $$j = {};
	Object.defineProperty(Mouse, '_cursor', {
	get:function () { if (Mouse.$$cinit !== undefined) Mouse.$$cinit(); return $$j._cursor; },
	set:function (value) { if (Mouse.$$cinit !== undefined) Mouse.$$cinit(); $$j._cursor = $es4.$$coerce(value, String); }
	});


	//class pre initializer
	Mouse.$$sinit = (function ()
	{
		Mouse.$$sinit = undefined;

		//initialize imports
		MouseCursorData = $es4.$$['flash.ui'].MouseCursorData;
		MouseCursor = $es4.$$['flash.ui'].MouseCursor;

		//set prototype and constructor
		Mouse.prototype = Object.create(Object.prototype);
		Object.defineProperty(Mouse.prototype, "constructor", { value: Mouse, enumerable: false });

		//hold private values
		Object.defineProperty(Mouse.prototype, '$$v', {value:{}});
	});

	//class initializer
	Mouse.$$cinit = (function ()
	{
		Mouse.$$cinit = undefined;

		//initialize properties
		$$j._cursor = $es4.$$coerce(MouseCursor.AUTO, String);
	
	});

	//public static method
	Mouse.hide = (function ()
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "hide"'));
	});

	//public static method
	Mouse.registerCursor = (function ($$$$name, $$$$cursor)
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);
		var cursor = $es4.$$coerce($$$$cursor, MouseCursorData);

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "registerCursor"'));
	});

	//public static method
	Mouse.show = (function ()
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "show"'));
	});

	//public static method
	Mouse.unregisterCursor = (function ($$$$name)
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "unregisterCursor"'));
	});
	Object.defineProperty(Mouse, 'cursor', {get:function ()
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		return Mouse._cursor;
	}, set:function ($$$$value)
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, String);

		if (Mouse._cursor !== MouseCursor.AUTO)
		{
			document.body.classList.remove(Mouse._cursor);
		}
		Mouse._cursor = value;
		if (value === MouseCursor.AUTO)
		{
			return;
		}
		document.body.classList.add(value);
	}});
	Object.defineProperty(Mouse, 'supportsCursor', {get:function ()
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "supportsCursor"'));
	}});
	Object.defineProperty(Mouse, 'supportsNativeCursor', {get:function ()
	{
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented function "supportsNativeCursor"'));
	}});

	function Mouse()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Mouse) || $$this.$$Mouse !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Mouse) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Mouse.$$construct($$this, $$args);
		}
	}

	//construct
	Mouse.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Mouse.$$cinit !== undefined) Mouse.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Mouse', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Mouse.$$iinit($$this);

		//call constructor
		if (args !== undefined) Mouse.$$constructor.apply($$this, args);
	});

	//initializer
	Mouse.$$iinit = (function ($$this)
	{
	});

	//constructor
	Mouse.$$constructor = (function ()
	{
		var $$this = this;
		throw $es4.$$primitive(new Error('Mouse: attempted call to an unimplemented constructor'));
	});

	return $es4.$$class(Mouse, null, 'flash.ui::Mouse');
})();
//flash.ui.Mouse


//flash.ui.MouseCursor
$es4.$$package('flash.ui').MouseCursor = (function ()
{
	//properties
	var $$j = {};
	MouseCursor.ARROW = "arrow";
	MouseCursor.AUTO = "auto";
	MouseCursor.BUTTON = "button";
	MouseCursor.HAND = "hand";
	MouseCursor.IBEAM = "ibeam";

	//class pre initializer
	MouseCursor.$$sinit = (function ()
	{
		MouseCursor.$$sinit = undefined;

		//set prototype and constructor
		MouseCursor.prototype = Object.create(Object.prototype);
		Object.defineProperty(MouseCursor.prototype, "constructor", { value: MouseCursor, enumerable: false });

		//hold private values
		Object.defineProperty(MouseCursor.prototype, '$$v', {value:{}});
	});

	//class initializer
	MouseCursor.$$cinit = (function ()
	{
		MouseCursor.$$cinit = undefined;
	});

	function MouseCursor()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof MouseCursor) || $$this.$$MouseCursor !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], MouseCursor) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			MouseCursor.$$construct($$this, $$args);
		}
	}

	//construct
	MouseCursor.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (MouseCursor.$$cinit !== undefined) MouseCursor.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$MouseCursor', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		MouseCursor.$$iinit($$this);

		//call constructor
		if (args !== undefined) MouseCursor.$$constructor.apply($$this, args);
	});

	//initializer
	MouseCursor.$$iinit = (function ($$this)
	{
	});

	//constructor
	MouseCursor.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(MouseCursor, null, 'flash.ui::MouseCursor');
})();
//flash.ui.MouseCursor


//flash.ui.MouseCursorData
$$package('flash.ui').MouseCursorData = function () { throw new Error('Use of unimplemented class: MouseCursorData'); }
//flash.ui.MouseCursorData


//flash.ui.Multitouch
$$package('flash.ui').Multitouch = function () { throw new Error('Use of unimplemented class: Multitouch'); }
//flash.ui.Multitouch


//flash.ui.MultitouchInputMode
$$package('flash.ui').MultitouchInputMode = function () { throw new Error('Use of unimplemented class: MultitouchInputMode'); }
//flash.ui.MultitouchInputMode


//flash.utils.ByteArray
$es4.$$package('flash.utils').ByteArray = (function ()
{
	//imports
	var ObjectEncoding;
	var ByteArray;
	var Endian;
	var IDataInput;
	var IDataOutput;

	//properties
	var $$j = {};
	ByteArray.BYTES_GROW_SIZE = 1024;

	//class pre initializer
	ByteArray.$$sinit = (function ()
	{
		ByteArray.$$sinit = undefined;

		//initialize imports
		ObjectEncoding = $es4.$$['flash.net'].ObjectEncoding;
		Endian = $es4.$$['flash.utils'].Endian;
		IDataInput = $es4.$$['flash.utils'].IDataInput;
		IDataOutput = $es4.$$['flash.utils'].IDataOutput;

		//set prototype and constructor
		ByteArray.prototype = Object.create(Object.prototype);
		Object.defineProperty(ByteArray.prototype, "constructor", { value: ByteArray, enumerable: false });

		//hold private values
		Object.defineProperty(ByteArray.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(ByteArray.prototype, '$__properties', {
		get:function ()
		{
			var $$this = this;

			function $__properties($$$$object)
			{
				//set default parameter values
				var object = (0 > arguments.length - 1) ? null : $$$$object;

				if ($$this.$$ByteArray.$_properties === undefined)
				{
					var arrayBuffer = $es4.$$primitive(new window.ArrayBuffer());
					var dataView = $es4.$$primitive(new window.DataView(arrayBuffer));
					object.ByteArrayScope = {$_arrayBuffer:arrayBuffer, $_dataView:dataView, $_bytePosition:0, $_byteLength:0, $_endian:Endian.BIG_ENDIAN, $_growSize:ByteArray.BYTES_GROW_SIZE};
					object.TLScope = $$this;
					return $$this.$$ByteArray.$_properties = object;
				}
				return $$this.$$ByteArray.$_properties;
			}

			return $$this.$$ByteArray.$$$__properties || ($$this.$$ByteArray.$$$__properties = $__properties);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, '$__getArrayBuffer', {
		get:function ()
		{
			var $$this = this;

			function $__getArrayBuffer()
			{
				return $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.slice(0, $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength);
			}

			return $$this.$$ByteArray.$$$__getArrayBuffer || ($$this.$$ByteArray.$$$__getArrayBuffer = $__getArrayBuffer);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, '$__setArrayBuffer', {
		get:function ()
		{
			var $$this = this;

			function $__setArrayBuffer($$$$arrayBuffer)
			{
				//set default parameter values
				var arrayBuffer = $$$$arrayBuffer;

				$$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer = arrayBuffer;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView = $es4.$$primitive(new window.DataView(arrayBuffer));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = arrayBuffer.byteLength;
			}

			return $$this.$$ByteArray.$$$__setArrayBuffer || ($$this.$$ByteArray.$$$__setArrayBuffer = $__setArrayBuffer);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'clear', {
		get:function ()
		{
			var $$this = this;

			function clear()
			{
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer = null;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView = null;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition = 0;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = 0;
			}

			return $$this.$$ByteArray.$$clear || ($$this.$$ByteArray.$$clear = clear);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readBoolean', {
		get:function ()
		{
			var $$this = this;

			function readBoolean()
			{
				return $es4.$$coerce($$this.readByte() !== 0, Boolean);
			}

			return $$this.$$ByteArray.$$readBoolean || ($$this.$$ByteArray.$$readBoolean = readBoolean);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readByte', {
		get:function ()
		{
			var $$this = this;

			function readByte()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getInt8($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 1;
				return $es4.$$coerce(value, int);
			}

			return $$this.$$ByteArray.$$readByte || ($$this.$$ByteArray.$$readByte = readByte);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readBytes', {
		get:function ()
		{
			var $$this = this;

			function readBytes($$$$writeTo, $$$$offset, $$$$length)
			{
				//set default parameter values
				var writeTo = $es4.$$coerce($$$$writeTo, $es4.$$['flash.utils'].ByteArray);
				var offset = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$offset, uint);
				var length = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$length, uint);

				var position = writeTo.position;
				var bytesAvailable = $es4.$$coerce($$this.bytesAvailable, uint);
				writeTo.writeBytes($$this, $$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, length);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += bytesAvailable;
				writeTo.position = position;
			}

			return $$this.$$ByteArray.$$readBytes || ($$this.$$ByteArray.$$readBytes = readBytes);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readDouble', {
		get:function ()
		{
			var $$this = this;

			function readDouble()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getFloat64($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 8;
				return $es4.$$coerce(value, Number);
			}

			return $$this.$$ByteArray.$$readDouble || ($$this.$$ByteArray.$$readDouble = readDouble);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readFloat', {
		get:function ()
		{
			var $$this = this;

			function readFloat()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getFloat32($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
				return $es4.$$coerce(value, Number);
			}

			return $$this.$$ByteArray.$$readFloat || ($$this.$$ByteArray.$$readFloat = readFloat);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readInt', {
		get:function ()
		{
			var $$this = this;

			function readInt()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getInt32($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
				return $es4.$$coerce(value, int);
			}

			return $$this.$$ByteArray.$$readInt || ($$this.$$ByteArray.$$readInt = readInt);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readMultiByte', {
		get:function ()
		{
			var $$this = this;

			function readMultiByte($$$$length, $$$$charSet)
			{
				//set default parameter values
				var length = $es4.$$coerce($$$$length, uint);
				var charSet = $es4.$$coerce($$$$charSet, String);

				if (charSet !== 'iso-8859-1' && charSet != 'utf-8')
				{
					throw $es4.$$primitive(new Error('ByteArray: your selected charSet is not supported at this time, use: "iso-8859-1" or "utf-8"'));
				}
				if (charSet === 'utf-8')
				{
					return $$this.readUTFBytes(length);
				}
				var value = String.fromCharCode.apply(null, $es4.$$primitive(new window.Uint8Array($$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer, $$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, length)));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += length;
				return $es4.$$coerce(value, String);
			}

			return $$this.$$ByteArray.$$readMultiByte || ($$this.$$ByteArray.$$readMultiByte = readMultiByte);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readShort', {
		get:function ()
		{
			var $$this = this;

			function readShort()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getInt16($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 2;
				return $es4.$$coerce(value, int);
			}

			return $$this.$$ByteArray.$$readShort || ($$this.$$ByteArray.$$readShort = readShort);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readUnsignedByte', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedByte()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getUint8($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 1;
				return $es4.$$coerce(value, uint);
			}

			return $$this.$$ByteArray.$$readUnsignedByte || ($$this.$$ByteArray.$$readUnsignedByte = readUnsignedByte);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readUnsignedInt', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedInt()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getUint32($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
				return $es4.$$coerce(value, uint);
			}

			return $$this.$$ByteArray.$$readUnsignedInt || ($$this.$$ByteArray.$$readUnsignedInt = readUnsignedInt);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readUnsignedShort', {
		get:function ()
		{
			var $$this = this;

			function readUnsignedShort()
			{
				var value = $$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.getUint16($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 2;
				return $es4.$$coerce(value, uint);
			}

			return $$this.$$ByteArray.$$readUnsignedShort || ($$this.$$ByteArray.$$readUnsignedShort = readUnsignedShort);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readUTF', {
		get:function ()
		{
			var $$this = this;

			function readUTF()
			{
				var length = $$this.readUnsignedShort();
				return $$this.readUTFBytes(length);
			}

			return $$this.$$ByteArray.$$readUTF || ($$this.$$ByteArray.$$readUTF = readUTF);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readUTFBytes', {
		get:function ()
		{
			var $$this = this;

			function readUTFBytes($$$$length)
			{
				//set default parameter values
				var length = $es4.$$coerce($$$$length, uint);

				if (length == 0)
				{
					return '';
				}
				var string = '';
				var index = 0;
				var bytes = $es4.$$primitive(new window.Uint8Array($$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer, $$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, length));
				if (bytes.length >= 3 && bytes[0] === 0xEF && bytes[1] === 0xBB && bytes[2] === 0xBF)
				{
					index = 3;
				}
				var byte1 = 0;
				var byte2 = 0;
				var byte3 = 0;
				var byte4 = 0;
				while (index < bytes.length)
				{
					byte1 = $es4.$$coerce(bytes[index], int);
					if (byte1 < 0x80)
					{
						string += String.fromCharCode(byte1);
						index++;
						continue;
					}
					if (byte1 > 0xBF && byte1 < 0xE0)
					{
						if (index + 1 >= bytes.length)
						{
							throw "UTF-8 Decode failed. Two byte character was truncated.";
						}
						byte2 = $es4.$$coerce(bytes[index + 1], int);
						string += String.fromCharCode(((byte1 & 31) << 6) | (byte2 & 63));
						index += 2;
						continue;
					}
					if (byte1 > 0xDF && byte1 < 0xF0)
					{
						if (index + 2 >= bytes.length)
						{
							throw "UTF-8 Decode failed. Multi byte character was truncated.";
						}
						byte2 = $es4.$$coerce(bytes[index + 1], int);
						byte3 = $es4.$$coerce(bytes[index + 2], int);
						string += String.fromCharCode(((byte1 & 15) << 12) | ((byte2 & 63) << 6) | (byte3 & 63));
						index += 3;
						continue;
					}
					var charCode = ((byte1 & 0x07) << 18 | (bytes[index + 1] & 0x3F) << 12 | (bytes[index + 2] & 0x3F) << 6 | bytes[index + 3] & 0x3F) - 0x010000;
					string += String.fromCharCode(charCode >> 10 | 0xD800, charCode & 0x03FF | 0xDC00);
					index += 4;
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += length;
				return string;
			}

			return $$this.$$ByteArray.$$readUTFBytes || ($$this.$$ByteArray.$$readUTFBytes = readUTFBytes);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeBoolean', {
		get:function ()
		{
			var $$this = this;

			function writeBoolean($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Boolean);

				$$this.writeByte(int(value));
			}

			return $$this.$$ByteArray.$$writeBoolean || ($$this.$$ByteArray.$$writeBoolean = writeBoolean);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeByte', {
		get:function ()
		{
			var $$this = this;

			function writeByte($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 1, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setInt8(bytePosition, value);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 1;
			}

			return $$this.$$ByteArray.$$writeByte || ($$this.$$ByteArray.$$writeByte = writeByte);
		}});


		//private instance method
		ByteArray.prototype.$$v.writeUnsignedByte = {
		get:function ()
		{
			var $$this = this.$$this;

			function writeUnsignedByte($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 1, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setUint8(bytePosition, value);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 1;
			}

			return $$this.$$ByteArray.$$p.$$writeUnsignedByte || ($$this.$$ByteArray.$$p.$$writeUnsignedByte = writeUnsignedByte);
		}};


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeBytes', {
		get:function ()
		{
			var $$this = this;

			function writeBytes($$$$readFrom, $$$$offset, $$$$length)
			{
				//set default parameter values
				var readFrom = $es4.$$coerce($$$$readFrom, $es4.$$['flash.utils'].ByteArray);
				var offset = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$offset, uint);
				var length = (2 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$length, uint);

				if (length == 0)
				{
					length = readFrom.length - offset;
				}
				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = bytePosition + length;
				var arrayBuffer = $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer;
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						var oldArrayBuffer = arrayBuffer;
						arrayBuffer = $es4.$$primitive(new window.ArrayBuffer(newBytePosition + ($$this.$$ByteArray.$_properties.ByteArrayScope.$_growSize = ($$this.$$ByteArray.$_properties.ByteArrayScope.$_growSize * 2))));
						$es4.$$primitive(new window.Uint8Array(arrayBuffer).set($es4.$$primitive(new window.Uint8Array(oldArrayBuffer))));
					}
					$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
				}
				$es4.$$primitive(new window.Uint8Array(arrayBuffer).set($es4.$$primitive(new window.Uint8Array(readFrom.$__properties().ByteArrayScope.$_arrayBuffer.slice(offset, offset + length))), bytePosition));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView = $es4.$$primitive(new window.DataView(arrayBuffer));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer = arrayBuffer;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition = newBytePosition;
			}

			return $$this.$$ByteArray.$$writeBytes || ($$this.$$ByteArray.$$writeBytes = writeBytes);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeDouble', {
		get:function ()
		{
			var $$this = this;

			function writeDouble($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Number);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 8, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setFloat64(bytePosition, value, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 8;
			}

			return $$this.$$ByteArray.$$writeDouble || ($$this.$$ByteArray.$$writeDouble = writeDouble);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeFloat', {
		get:function ()
		{
			var $$this = this;

			function writeFloat($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Number);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 4, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setFloat32(bytePosition, value, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
			}

			return $$this.$$ByteArray.$$writeFloat || ($$this.$$ByteArray.$$writeFloat = writeFloat);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeInt', {
		get:function ()
		{
			var $$this = this;

			function writeInt($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 4, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setInt32(bytePosition, value, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
			}

			return $$this.$$ByteArray.$$writeInt || ($$this.$$ByteArray.$$writeInt = writeInt);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeMultiByte', {
		get:function ()
		{
			var $$this = this;

			function writeMultiByte($$$$string, $$$$charSet)
			{
				//set default parameter values
				var string = $es4.$$coerce($$$$string, String);
				var charSet = $es4.$$coerce($$$$charSet, String);

				if (charSet !== 'iso-8859-1' && charSet !== 'utf-8')
				{
					throw $es4.$$primitive(new Error('ByteArray: your selected charSet is not supported at this time, use: "iso-8859-1" or "utf-8"'));
				}
				if (charSet == 'utf-8')
				{
					$$this.$$ByteArray.internalWriteUTFBytes(string);
					return;
				}
				var index = 0;
				while (index < string.length)
				{
					var charCode = $es4.$$coerce(string.charCodeAt(index++), uint);
					$$this.$$ByteArray.writeUnsignedByte(charCode);
				}
			}

			return $$this.$$ByteArray.$$writeMultiByte || ($$this.$$ByteArray.$$writeMultiByte = writeMultiByte);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeShort', {
		get:function ()
		{
			var $$this = this;

			function writeShort($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 2, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setInt16(bytePosition, value, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 2;
			}

			return $$this.$$ByteArray.$$writeShort || ($$this.$$ByteArray.$$writeShort = writeShort);
		}});


		//private instance method
		ByteArray.prototype.$$v.writeUnsignedShort = {
		get:function ()
		{
			var $$this = this.$$this;

			function writeUnsignedShort($$$$value, $$$$endian)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, int);
				var endian = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$endian, String);

				if (!endian)
				{
					endian = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_endian, String);
				}
				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 2, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setUint16(bytePosition, value, endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 2;
			}

			return $$this.$$ByteArray.$$p.$$writeUnsignedShort || ($$this.$$ByteArray.$$p.$$writeUnsignedShort = writeUnsignedShort);
		}};


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeUnsignedInt', {
		get:function ()
		{
			var $$this = this;

			function writeUnsignedInt($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, uint);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 4, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setUint32(bytePosition, value, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 4;
			}

			return $$this.$$ByteArray.$$writeUnsignedInt || ($$this.$$ByteArray.$$writeUnsignedInt = writeUnsignedInt);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeUTF', {
		get:function ()
		{
			var $$this = this;

			function writeUTF($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);

				var bytePosition = $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
				var newBytePosition = $es4.$$coerce(bytePosition + 2, uint);
				if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
				{
					if (newBytePosition > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
					{
						$$this.length = newBytePosition;
					}
					else
					{
						$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = newBytePosition;
					}
				}
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition += 2;
				var length = $$this.$$ByteArray.internalWriteUTFBytes(value);
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView.setUint16(bytePosition, length, $$this.$$ByteArray.$_properties.ByteArrayScope.$_endian != Endian.BIG_ENDIAN);
			}

			return $$this.$$ByteArray.$$writeUTF || ($$this.$$ByteArray.$$writeUTF = writeUTF);
		}});


		//private instance method
		ByteArray.prototype.$$v.internalWriteUTFBytes = {
		get:function ()
		{
			var $$this = this.$$this;

			function internalWriteUTFBytes($$$$string)
			{
				//set default parameter values
				var string = $es4.$$coerce($$$$string, String);

				var utf8 = [];
				for (var i = 0; i < string.length; i++)
				{
					var charcode = string.charCodeAt(i);
					if (charcode < 0x80)
					{
						utf8.push(charcode);
					}
					else if (charcode < 0x800)
					{
						utf8.push(0xc0 | (charcode >> 6), 0x80 | (charcode & 0x3f));
					}
					else if (charcode < 0xd800 || charcode >= 0xe000)
					{
						utf8.push(0xe0 | (charcode >> 12), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
					}
					else
					{
						i++;
						charcode = 0x10000 + (((charcode & 0x3ff) << 10) | (string.charCodeAt(i) & 0x3ff));
						utf8.push(0xf0 | (charcode >> 18), 0x80 | ((charcode >> 12) & 0x3f), 0x80 | ((charcode >> 6) & 0x3f), 0x80 | (charcode & 0x3f));
					}
				}
				var index = 0;
				var bytesLength = utf8.length;
				while (index < bytesLength)
				{
					$$this.$$ByteArray.writeUnsignedByte(utf8[index]);
					index++;
				}
				return bytesLength;
			}

			return $$this.$$ByteArray.$$p.$$internalWriteUTFBytes || ($$this.$$ByteArray.$$p.$$internalWriteUTFBytes = internalWriteUTFBytes);
		}};


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeUTFBytes', {
		get:function ()
		{
			var $$this = this;

			function writeUTFBytes($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, String);

				$$this.$$ByteArray.internalWriteUTFBytes(value);
			}

			return $$this.$$ByteArray.$$writeUTFBytes || ($$this.$$ByteArray.$$writeUTFBytes = writeUTFBytes);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'writeObject', {
		get:function ()
		{
			var $$this = this;

			function writeObject($$$$object)
			{
				//set default parameter values
				var object = $$$$object;

				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "writeObject"'));
			}

			return $$this.$$ByteArray.$$writeObject || ($$this.$$ByteArray.$$writeObject = writeObject);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'readObject', {
		get:function ()
		{
			var $$this = this;

			function readObject()
			{
				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "readObject"'));
			}

			return $$this.$$ByteArray.$$readObject || ($$this.$$ByteArray.$$readObject = readObject);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "toString"'));
			}

			return $$this.$$ByteArray.$$toString || ($$this.$$ByteArray.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'compress', {
		get:function ()
		{
			var $$this = this;

			function compress($$$$algorithm)
			{
				//set default parameter values
				var algorithm = (0 > arguments.length - 1) ? "zlib" : $es4.$$coerce($$$$algorithm, String);

				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "compress"'));
			}

			return $$this.$$ByteArray.$$compress || ($$this.$$ByteArray.$$compress = compress);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'deflate', {
		get:function ()
		{
			var $$this = this;

			function deflate()
			{
				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "deflate"'));
			}

			return $$this.$$ByteArray.$$deflate || ($$this.$$ByteArray.$$deflate = deflate);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'inflate', {
		get:function ()
		{
			var $$this = this;

			function inflate()
			{
				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "inflate"'));
			}

			return $$this.$$ByteArray.$$inflate || ($$this.$$ByteArray.$$inflate = inflate);
		}});


		//public instance method
		Object.defineProperty(ByteArray.prototype, 'uncompress', {
		get:function ()
		{
			var $$this = this;

			function uncompress($$$$algorithm)
			{
				//set default parameter values
				var algorithm = (0 > arguments.length - 1) ? "zlib" : $es4.$$coerce($$$$algorithm, String);

				throw $es4.$$primitive(new Error('ByteArray: attempted call to an unimplemented function "uncompress"'));
			}

			return $$this.$$ByteArray.$$uncompress || ($$this.$$ByteArray.$$uncompress = uncompress);
		}});

		Object.defineProperty(ByteArray.prototype, 'bytesAvailable', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength - $$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
		}});
		Object.defineProperty(ByteArray.prototype, 'endian', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_endian, String);
		}, set:function ($$$$type)
		{
			//set default parameter values
			var type = $es4.$$coerce($$$$type, String);

			var $$this = this;
			$$this.$$ByteArray.$_properties.ByteArrayScope.$_endian = type;
		}});
		Object.defineProperty(ByteArray.prototype, 'length', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength, uint);
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, uint);

			var $$this = this;
			if (value == $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
			{
				return;
			}
			var arrayBuffer;
			if (value < $$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength)
			{
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_growSize = ByteArray.BYTES_GROW_SIZE;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = value;
				if ($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition > value)
				{
					$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition = value;
				}
				return;
			}
			if (value > $$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer.byteLength)
			{
				arrayBuffer = $es4.$$primitive(new window.ArrayBuffer(value + ($$this.$$ByteArray.$_properties.ByteArrayScope.$_growSize = ($$this.$$ByteArray.$_properties.ByteArrayScope.$_growSize * 2))));
				$es4.$$primitive(new window.Uint8Array(arrayBuffer).set($es4.$$primitive(new window.Uint8Array($$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer))));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_dataView = $es4.$$primitive(new window.DataView(arrayBuffer));
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_arrayBuffer = arrayBuffer;
				$$this.$$ByteArray.$_properties.ByteArrayScope.$_byteLength = value;
			}
		}});
		Object.defineProperty(ByteArray.prototype, 'position', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition, uint);
		}, set:function ($$$$offset)
		{
			//set default parameter values
			var offset = $es4.$$coerce($$$$offset, uint);

			var $$this = this;
			$$this.$$ByteArray.$_properties.ByteArrayScope.$_bytePosition = offset;
		}});
		Object.defineProperty(ByteArray.prototype, 'objectEncoding', {get:function ()
		{
			var $$this = this;
			return ObjectEncoding.AMF3;
		}, set:function ($$$$version)
		{
			//set default parameter values
			var version = $es4.$$coerce($$$$version, uint);

			var $$this = this;
			if (version != ObjectEncoding.AMF3)
			{
				throw $es4.$$primitive(new Error('ByteArray: desired object encoding not supported at this time'));
			}
		}});

		//properties
		ByteArray.prototype.$$v.$_properties = {
		get:function () { var $$this = this.$$this; return $$this.$$ByteArray.$$p.$_properties; },
		set:function (value) { var $$this = this.$$this; $$this.$$ByteArray.$$p.$_properties = value }
		};

	});

	//class initializer
	ByteArray.$$cinit = (function ()
	{
		ByteArray.$$cinit = undefined;
	});

	Object.defineProperty(ByteArray, 'defaultObjectEncoding', {get:function ()
	{
		if (ByteArray.$$cinit !== undefined) ByteArray.$$cinit();

		return ObjectEncoding.AMF3;
	}, set:function ($$$$version)
	{
		if (ByteArray.$$cinit !== undefined) ByteArray.$$cinit();

		//set default parameter values
		var version = $es4.$$coerce($$$$version, uint);

		if (version != ObjectEncoding.AMF3)
		{
			throw $es4.$$primitive(new Error('ByteArray: desired object encoding not supported at this time'));
		}
	}});

	function ByteArray()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof ByteArray) || $$this.$$ByteArray !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], ByteArray) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			ByteArray.$$construct($$this, $$args);
		}
	}

	//construct
	ByteArray.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (ByteArray.$$cinit !== undefined) ByteArray.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$ByteArray', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$ByteArray, '$_properties', ByteArray.prototype.$$v.$_properties);

		//private instance method
		Object.defineProperty($$this.$$ByteArray, 'writeUnsignedByte', ByteArray.prototype.$$v.writeUnsignedByte);

		//private instance method
		Object.defineProperty($$this.$$ByteArray, 'writeUnsignedShort', ByteArray.prototype.$$v.writeUnsignedShort);

		//private instance method
		Object.defineProperty($$this.$$ByteArray, 'internalWriteUTFBytes', ByteArray.prototype.$$v.internalWriteUTFBytes);

		//initialize properties
		ByteArray.$$iinit($$this);

		//call constructor
		if (args !== undefined) ByteArray.$$constructor.apply($$this, args);
	});

	//initializer
	ByteArray.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$ByteArray.$$p.$_properties = undefined;
	
	});

	//constructor
	ByteArray.$$constructor = (function ()
	{
		var $$this = this;
		if ($$this.$$ByteArray.$_properties === undefined)
		{
			$$this.$__properties({});
		}
	});

	return $es4.$$class(ByteArray, {IMPLEMENTS:['flash.utils.IDataInput', 'flash.utils.IDataOutput']}, 'flash.utils::ByteArray');
})();
//flash.utils.ByteArray


//flash.utils.CompressionAlgorithm
$$package('flash.utils').CompressionAlgorithm = function () { throw new Error('Use of unimplemented class: CompressionAlgorithm'); }
//flash.utils.CompressionAlgorithm


//flash.utils.Dictionary
$es4.$$package('flash.utils').Dictionary = (function ()
{
	//class pre initializer
	Dictionary.$$sinit = (function ()
	{
		Dictionary.$$sinit = undefined;

		//set prototype and constructor
		Dictionary.prototype = Object.create(Object.prototype);
		Object.defineProperty(Dictionary.prototype, "constructor", { value: Dictionary, enumerable: false });

		//hold private values
		Object.defineProperty(Dictionary.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Dictionary.prototype, 'toJSON', {
		get:function ()
		{
			var $$this = this;

			function toJSON($$$$k)
			{
				//set default parameter values
				var k = $es4.$$coerce($$$$k, String);

				throw $es4.$$primitive(new Error('Dictionary: does not support toJSON at this time'));
			}

			return $$this.$$Dictionary.$$toJSON || ($$this.$$Dictionary.$$toJSON = toJSON);
		}});


		//private instance method
		Dictionary.prototype.$$v.$$get = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$get($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				if (!$$this.$$Dictionary.$map.has(key))
				{
					return undefined;
				}
				return $$this.$$Dictionary.$map.get(key).value;
			}

			return $$this.$$Dictionary.$$p.$$$$get || ($$this.$$Dictionary.$$p.$$$$get = $$get);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$set = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$set($$$$key, $$$$value)
			{
				//set default parameter values
				var key = $$$$key;
				var value = $$$$value;

				$$this.$$Dictionary.$map.set(key, {index:$$this.$$Dictionary.$values.length, value:value});
				$$this.$$Dictionary.$keys.push(key);
				$$this.$$Dictionary.$values.push(value);
			}

			return $$this.$$Dictionary.$$p.$$$$set || ($$this.$$Dictionary.$$p.$$$$set = $$set);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$call = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$call($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $$$$name;
				var args = $es4.$$coerce($$$$args, Array);

				return $$this.$$Dictionary.$map.get(name).value.apply($$this, args);
			}

			return $$this.$$Dictionary.$$p.$$$$call || ($$this.$$Dictionary.$$p.$$$$call = $$call);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$delete = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$delete($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				if ($$this.$$Dictionary.$map.has(key))
				{
					var value = $$this.$$Dictionary.$map.get(key);
					$$this.$$Dictionary.$values.splice(value.index, 1);
					$$this.$$Dictionary.$keys.splice(value.index, 1);
				}
				return $es4.$$coerce($$this.$$Dictionary.$map.delete(key), Boolean);
			}

			return $$this.$$Dictionary.$$p.$$$$delete || ($$this.$$Dictionary.$$p.$$$$delete = $$delete);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$nextName = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextName($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$Dictionary.$keys[index - 1];
			}

			return $$this.$$Dictionary.$$p.$$$$nextName || ($$this.$$Dictionary.$$p.$$$$nextName = $$nextName);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$nextNameIndex = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextNameIndex($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return (index < $$this.$$Dictionary.$values.length) ? index + 1 : 0;
			}

			return $$this.$$Dictionary.$$p.$$$$nextNameIndex || ($$this.$$Dictionary.$$p.$$$$nextNameIndex = $$nextNameIndex);
		}};


		//private instance method
		Dictionary.prototype.$$v.$$nextValue = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextValue($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$Dictionary.$values[index - 1];
			}

			return $$this.$$Dictionary.$$p.$$$$nextValue || ($$this.$$Dictionary.$$p.$$$$nextValue = $$nextValue);
		}};

		//properties
		Dictionary.prototype.$$v.$$isProxy = {
		get:function () { var $$this = this.$$this; return $$this.$$Dictionary.$$p.$$isProxy; },
		set:function (value) { var $$this = this.$$this; $$this.$$Dictionary.$$p.$$isProxy = $es4.$$coerce(value, Boolean); }
		};

		Dictionary.prototype.$$v.$map = {
		get:function () { var $$this = this.$$this; return $$this.$$Dictionary.$$p.$map; },
		set:function (value) { var $$this = this.$$this; $$this.$$Dictionary.$$p.$map = value }
		};

		Dictionary.prototype.$$v.$keys = {
		get:function () { var $$this = this.$$this; return $$this.$$Dictionary.$$p.$keys; },
		set:function (value) { var $$this = this.$$this; $$this.$$Dictionary.$$p.$keys = $es4.$$coerce(value, Array); }
		};

		Dictionary.prototype.$$v.$values = {
		get:function () { var $$this = this.$$this; return $$this.$$Dictionary.$$p.$values; },
		set:function (value) { var $$this = this.$$this; $$this.$$Dictionary.$$p.$values = $es4.$$coerce(value, Array); }
		};

	});

	//class initializer
	Dictionary.$$cinit = (function ()
	{
		Dictionary.$$cinit = undefined;
	});

	function Dictionary()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Dictionary) || $$this.$$Dictionary !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Dictionary) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Dictionary.$$construct($$this, $$args);
		}
	}

	//construct
	Dictionary.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Dictionary.$$cinit !== undefined) Dictionary.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Dictionary', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Dictionary, '$$isProxy', Dictionary.prototype.$$v.$$isProxy);
		Object.defineProperty($$this.$$Dictionary, '$map', Dictionary.prototype.$$v.$map);
		Object.defineProperty($$this.$$Dictionary, '$keys', Dictionary.prototype.$$v.$keys);
		Object.defineProperty($$this.$$Dictionary, '$values', Dictionary.prototype.$$v.$values);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$get', Dictionary.prototype.$$v.$$get);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$set', Dictionary.prototype.$$v.$$set);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$call', Dictionary.prototype.$$v.$$call);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$delete', Dictionary.prototype.$$v.$$delete);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$nextName', Dictionary.prototype.$$v.$$nextName);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$nextNameIndex', Dictionary.prototype.$$v.$$nextNameIndex);

		//private instance method
		Object.defineProperty($$this.$$Dictionary, '$$nextValue', Dictionary.prototype.$$v.$$nextValue);

		//initialize properties
		Dictionary.$$iinit($$this);

		//call constructor
		if (args !== undefined) Dictionary.$$constructor.apply($$this, args);
	});

	//initializer
	Dictionary.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Dictionary.$$p.$$isProxy = $es4.$$coerce(true, Boolean);
		$$this.$$Dictionary.$$p.$map = $es4.$$primitive(new global.Map());
		$$this.$$Dictionary.$$p.$keys = $es4.$$coerce([], Array);
		$$this.$$Dictionary.$$p.$values = $es4.$$coerce([], Array);
	
	});

	//constructor
	Dictionary.$$constructor = (function ($$$$weakKeys)
	{
		var $$this = this;
		//set default parameter values
		var weakKeys = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$weakKeys, Boolean);

		if (weakKeys)
		{
			trace('Warning: Dictionary: does not support weakKeys at this time');
		}
	});

	return $es4.$$class(Dictionary, null, 'flash.utils::Dictionary');
})();
//flash.utils.Dictionary


//flash.utils.Endian
$es4.$$package('flash.utils').Endian = (function ()
{
	//properties
	var $$j = {};
	Endian.BIG_ENDIAN = "bigEndian";
	Endian.LITTLE_ENDIAN = "littleEndian";

	//class pre initializer
	Endian.$$sinit = (function ()
	{
		Endian.$$sinit = undefined;

		//set prototype and constructor
		Endian.prototype = Object.create(Object.prototype);
		Object.defineProperty(Endian.prototype, "constructor", { value: Endian, enumerable: false });

		//hold private values
		Object.defineProperty(Endian.prototype, '$$v', {value:{}});
	});

	//class initializer
	Endian.$$cinit = (function ()
	{
		Endian.$$cinit = undefined;
	});

	function Endian()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Endian) || $$this.$$Endian !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Endian) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Endian.$$construct($$this, $$args);
		}
	}

	//construct
	Endian.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Endian.$$cinit !== undefined) Endian.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Endian', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Endian.$$iinit($$this);

		//call constructor
		if (args !== undefined) Endian.$$constructor.apply($$this, args);
	});

	//initializer
	Endian.$$iinit = (function ($$this)
	{
	});

	//constructor
	Endian.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(Endian, null, 'flash.utils::Endian');
})();
//flash.utils.Endian


//flash.utils.Proxy
$es4.$$package('flash.utils').Proxy = (function ()
{
	//imports
	var flash_proxy;

	//class pre initializer
	Proxy.$$sinit = (function ()
	{
		Proxy.$$sinit = undefined;

		//initialize imports
		flash_proxy = $es4.$$['flash.utils'].flash_proxy;

		//set prototype and constructor
		Proxy.prototype = Object.create(Object.prototype);
		Object.defineProperty(Proxy.prototype, "constructor", { value: Proxy, enumerable: false });

		//hold private values
		Object.defineProperty(Proxy.prototype, '$$v', {value:{}});

		//private instance method
		Proxy.prototype.$$v.$$get = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$get($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				return $$this.$$namespace($$this.flash_proxy).getProperty(key);
			}

			return $$this.$$Proxy.$$p.$$$$get || ($$this.$$Proxy.$$p.$$$$get = $$get);
		}};


		//private instance method
		Proxy.prototype.$$v.$$set = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$set($$$$key, $$$$value)
			{
				//set default parameter values
				var key = $$$$key;
				var value = $$$$value;

				$$this.$$namespace($$this.flash_proxy).setProperty(key, value);
				return value;
			}

			return $$this.$$Proxy.$$p.$$$$set || ($$this.$$Proxy.$$p.$$$$set = $$set);
		}};


		//private instance method
		Proxy.prototype.$$v.$$call = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$call($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $$$$name;
				var args = $es4.$$coerce($$$$args, Array);

				args.unshift(name);
				return $$this.$$namespace($$this.flash_proxy).callProperty.apply($$this, args);
			}

			return $$this.$$Proxy.$$p.$$$$call || ($$this.$$Proxy.$$p.$$$$call = $$call);
		}};


		//private instance method
		Proxy.prototype.$$v.$$delete = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$delete($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				return $$this.$$namespace($$this.flash_proxy).deleteProperty(key);
			}

			return $$this.$$Proxy.$$p.$$$$delete || ($$this.$$Proxy.$$p.$$$$delete = $$delete);
		}};


		//private instance method
		Proxy.prototype.$$v.$$nextName = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextName($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$namespace($$this.flash_proxy).nextName(index);
			}

			return $$this.$$Proxy.$$p.$$$$nextName || ($$this.$$Proxy.$$p.$$$$nextName = $$nextName);
		}};


		//private instance method
		Proxy.prototype.$$v.$$nextNameIndex = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextNameIndex($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$namespace($$this.flash_proxy).nextNameIndex(index);
			}

			return $$this.$$Proxy.$$p.$$$$nextNameIndex || ($$this.$$Proxy.$$p.$$$$nextNameIndex = $$nextNameIndex);
		}};


		//private instance method
		Proxy.prototype.$$v.$$nextValue = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextValue($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$namespace($$this.flash_proxy).nextValue(index);
			}

			return $$this.$$Proxy.$$p.$$$$nextValue || ($$this.$$Proxy.$$p.$$$$nextValue = $$nextValue);
		}};

		//properties
		Proxy.prototype.$$v.$$isProxy = {
		get:function () { var $$this = this.$$this; return $$this.$$Proxy.$$p.$$isProxy; },
		set:function (value) { var $$this = this.$$this; $$this.$$Proxy.$$p.$$isProxy = $es4.$$coerce(value, Boolean); }
		};

		Proxy.prototype.$$v.$keys = {
		get:function () { var $$this = this.$$this; return $$this.$$Proxy.$$p.$keys; },
		set:function (value) { var $$this = this.$$this; $$this.$$Proxy.$$p.$keys = $es4.$$coerce(value, Array); }
		};

		Proxy.prototype.$$v.$values = {
		get:function () { var $$this = this.$$this; return $$this.$$Proxy.$$p.$values; },
		set:function (value) { var $$this = this.$$this; $$this.$$Proxy.$$p.$values = $es4.$$coerce(value, Array); }
		};

	});

	//class initializer
	Proxy.$$cinit = (function ()
	{
		Proxy.$$cinit = undefined;
	});

	function Proxy()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Proxy) || $$this.$$Proxy !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Proxy) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Proxy.$$construct($$this, $$args);
		}
	}

	//construct
	Proxy.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Proxy.$$cinit !== undefined) Proxy.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Proxy', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


			//custom namespace method
			$es4.$$cnamespace_function('deleteProperty', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name)
			{
				//set default parameter values
				var name = $$$$name;

				for (var i = 0; i < $$this.$$Proxy.$keys.length; i++)
				{
					if ($$this.$$Proxy.$keys[i] == name)
					{
						break;
					}
				}
				if (i == $$this.$$Proxy.$keys.length)
				{
					return false;
				}
				$$this.$$Proxy.$keys.splice(i, 1);
				$$this.$$Proxy.$values.splice(i, 1);
				return true;
			}));



			//custom namespace method
			$es4.$$cnamespace_function('getProperty', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name)
			{
				//set default parameter values
				var name = $$$$name;

				for (var i = 0; i < $$this.$$Proxy.$keys.length; i++)
				{
					if ($$this.$$Proxy.$keys[i] == name)
					{
						break;
					}
				}
				if (i == $$this.$$Proxy.$keys.length)
				{
					return undefined;
				}
				return $$this.$$Proxy.$values[i];
			}));



			//custom namespace method
			$es4.$$cnamespace_function('setProperty', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name, $$$$value)
			{
				//set default parameter values
				var name = $$$$name;
				var value = $$$$value;

				for (var i = 0; i < $$this.$$Proxy.$keys.length; i++)
				{
					if ($$this.$$Proxy.$keys[i] == name)
					{
						break;
					}
				}
				$$this.$$Proxy.$keys[i] = name;
				$$this.$$Proxy.$values[i] = value;
			}));



			//custom namespace method
			$es4.$$cnamespace_function('hasProperty', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name)
			{
				//set default parameter values
				var name = $$$$name;

				for (var i = 0; i < $$this.$$Proxy.$keys.length; i++)
				{
					if ($$this.$$Proxy.$keys[i] == name)
					{
						return true;
					}
				}
				return false;
			}));



			//custom namespace method
			$es4.$$cnamespace_function('nextName', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $es4.$$coerce($$this.$$Proxy.$keys[index - 1], String);
			}));



			//custom namespace method
			$es4.$$cnamespace_function('nextNameIndex', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return (index < $$this.$$Proxy.$keys.length) ? index + 1 : 0;
			}));



			//custom namespace method
			$es4.$$cnamespace_function('nextValue', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$Proxy.$values[index - 1];
			}));



			//custom namespace method
			$es4.$$cnamespace_function('callProperty', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name, $$$$rest)
			{
				//set default parameter values
				var name = $$$$name;
				for (var $$i = 1, $$length = arguments.length, rest = new Array($$length - 1); $$i < $$length; $$i += 1) rest[$$i - 1] = arguments[$$i];

				for (var i = 0; i < $$this.$$Proxy.$keys.length; i++)
				{
					if ($$this.$$Proxy.$keys[i] == name)
					{
						break;
					}
				}
				if (i == $$this.$$Proxy.$keys.length)
				{
					throw $es4.$$primitive(new Error('property not found'));
				}
				return $$this.$$Proxy.$values[i].apply($$this, rest);
			}));



			//custom namespace method
			$es4.$$cnamespace_function('getDescendants', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name)
			{
				//set default parameter values
				var name = $$$$name;

				throw $es4.$$primitive(new Error('Proxy: not implemented'));
			}));



			//custom namespace method
			$es4.$$cnamespace_function('isAttribute', $$this, $$this.$$Proxy.$$ns, $['flash.utils'].flash_proxy, (function ($$$$name)
			{
				//set default parameter values
				var name = $$$$name;

				throw $es4.$$primitive(new Error('Proxy: not implemented'));
			}));


		Object.defineProperty($$this.$$Proxy, '$$isProxy', Proxy.prototype.$$v.$$isProxy);
		Object.defineProperty($$this.$$Proxy, '$keys', Proxy.prototype.$$v.$keys);
		Object.defineProperty($$this.$$Proxy, '$values', Proxy.prototype.$$v.$values);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$get', Proxy.prototype.$$v.$$get);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$set', Proxy.prototype.$$v.$$set);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$call', Proxy.prototype.$$v.$$call);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$delete', Proxy.prototype.$$v.$$delete);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$nextName', Proxy.prototype.$$v.$$nextName);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$nextNameIndex', Proxy.prototype.$$v.$$nextNameIndex);

		//private instance method
		Object.defineProperty($$this.$$Proxy, '$$nextValue', Proxy.prototype.$$v.$$nextValue);

		//initialize properties
		Proxy.$$iinit($$this);

		//call constructor
		if (args !== undefined) Proxy.$$constructor.apply($$this, args);
	});

	//initializer
	Proxy.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Proxy.$$p.$$isProxy = $es4.$$coerce(true, Boolean);
		$$this.$$Proxy.$$p.$keys = $es4.$$coerce([], Array);
		$$this.$$Proxy.$$p.$values = $es4.$$coerce([], Array);
	
	});

	//constructor
	Proxy.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(Proxy, null, 'flash.utils::Proxy');
})();
//flash.utils.Proxy


//flash.utils.Timer
$es4.$$package('flash.utils').Timer = (function ()
{
	//imports
	var EventDispatcher;
	var TimerEvent;

	//class pre initializer
	Timer.$$sinit = (function ()
	{
		Timer.$$sinit = undefined;

		//initialize imports
		EventDispatcher = $es4.$$['flash.events'].EventDispatcher;
		TimerEvent = $es4.$$['flash.events'].TimerEvent;

		//ensure $$sinit is called on super class
		if (EventDispatcher.$$sinit !== undefined) EventDispatcher.$$sinit();

		//set prototype and constructor
		Timer.prototype = Object.create(EventDispatcher.prototype);
		Object.defineProperty(Timer.prototype, "constructor", { value: Timer, enumerable: false });

		//hold private values
		Object.defineProperty(Timer.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(Timer.prototype, 'reset', {
		get:function ()
		{
			var $$this = this;

			function reset()
			{
				$$this.stop();
				$$this.$$Timer._currentCount = 0;
			}

			return $$this.$$Timer.$$reset || ($$this.$$Timer.$$reset = reset);
		}});


		//public instance method
		Object.defineProperty(Timer.prototype, 'start', {
		get:function ()
		{
			var $$this = this;

			function start()
			{
				if ($$this.$$Timer.timer)
				{
					return;
				}
				$$this.$$Timer.timer = window.setInterval($$this.$$Timer.tick, $$this.$$Timer._delay);
			}

			return $$this.$$Timer.$$start || ($$this.$$Timer.$$start = start);
		}});


		//public instance method
		Object.defineProperty(Timer.prototype, 'stop', {
		get:function ()
		{
			var $$this = this;

			function stop()
			{
				if (!$$this.$$Timer.timer)
				{
					return;
				}
				window.clearInterval($$this.$$Timer.timer);
				$$this.$$Timer.timer = null;
			}

			return $$this.$$Timer.$$stop || ($$this.$$Timer.$$stop = stop);
		}});


		//private instance method
		Timer.prototype.$$v.tick = {
		get:function ()
		{
			var $$this = this.$$this;

			function tick()
			{
				if (!$$this.$$Timer.timer)
				{
					return;
				}
				++$$this.$$Timer._currentCount;
				try
				{
					$$this.dispatchEvent($es4.$$primitive(new TimerEvent(TimerEvent.TIMER)));
				}
				catch (e)
				{
					trace("ERROR", e);
				}
				$$this.$$Timer.checkComplete();
			}

			return $$this.$$Timer.$$p.$$tick || ($$this.$$Timer.$$p.$$tick = tick);
		}};


		//private instance method
		Timer.prototype.$$v.checkComplete = {
		get:function ()
		{
			var $$this = this.$$this;

			function checkComplete()
			{
				if ($$this.$$Timer._repeatCount > 0 && $$this.$$Timer._currentCount >= $$this.$$Timer._repeatCount)
				{
					$$this.stop();
					$$this.dispatchEvent($es4.$$primitive(new TimerEvent(TimerEvent.TIMER_COMPLETE)));
				}
			}

			return $$this.$$Timer.$$p.$$checkComplete || ($$this.$$Timer.$$p.$$checkComplete = checkComplete);
		}};

		Object.defineProperty(Timer.prototype, 'currentCount', {get:function ()
		{
			var $$this = this;
			return $$this.$$Timer._currentCount;
		}});
		Object.defineProperty(Timer.prototype, 'delay', {get:function ()
		{
			var $$this = this;
			return $$this.$$Timer._delay;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Number);

			var $$this = this;
			$$this.$$Timer._delay = value;
			if ($$this.$$Timer.timer)
			{
				$$this.stop();
				$$this.start();
			}
		}});
		Object.defineProperty(Timer.prototype, 'repeatCount', {get:function ()
		{
			var $$this = this;
			return $$this.$$Timer._repeatCount;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, int);

			var $$this = this;
			$$this.$$Timer._repeatCount = value;
			$$this.$$Timer.checkComplete();
		}});
		Object.defineProperty(Timer.prototype, 'running', {get:function ()
		{
			var $$this = this;
			return $es4.$$coerce($$this.$$Timer.timer != null, Boolean);
		}});

		//properties
		Timer.prototype.$$v.timer = {
		get:function () { var $$this = this.$$this; return $$this.$$Timer.$$p.timer; },
		set:function (value) { var $$this = this.$$this; $$this.$$Timer.$$p.timer = $es4.$$coerce(value, Object); }
		};

		Timer.prototype.$$v._delay = {
		get:function () { var $$this = this.$$this; return $$this.$$Timer.$$p._delay; },
		set:function (value) { var $$this = this.$$this; $$this.$$Timer.$$p._delay = $es4.$$coerce(value, Number); }
		};

		Timer.prototype.$$v._repeatCount = {
		get:function () { var $$this = this.$$this; return $$this.$$Timer.$$p._repeatCount; },
		set:function (value) { var $$this = this.$$this; $$this.$$Timer.$$p._repeatCount = $es4.$$coerce(value, int); }
		};

		Timer.prototype.$$v._currentCount = {
		get:function () { var $$this = this.$$this; return $$this.$$Timer.$$p._currentCount; },
		set:function (value) { var $$this = this.$$this; $$this.$$Timer.$$p._currentCount = $es4.$$coerce(value, int); }
		};

	});

	//class initializer
	Timer.$$cinit = (function ()
	{
		Timer.$$cinit = undefined;
	});

	function Timer()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Timer) || $$this.$$Timer !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Timer) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Timer.$$construct($$this, $$args);
		}
	}

	//construct
	Timer.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Timer.$$cinit !== undefined) Timer.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Timer', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$Timer, 'timer', Timer.prototype.$$v.timer);
		Object.defineProperty($$this.$$Timer, '_delay', Timer.prototype.$$v._delay);
		Object.defineProperty($$this.$$Timer, '_repeatCount', Timer.prototype.$$v._repeatCount);
		Object.defineProperty($$this.$$Timer, '_currentCount', Timer.prototype.$$v._currentCount);

		//private instance method
		Object.defineProperty($$this.$$Timer, 'tick', Timer.prototype.$$v.tick);

		//private instance method
		Object.defineProperty($$this.$$Timer, 'checkComplete', Timer.prototype.$$v.checkComplete);

		//call construct on super
		EventDispatcher.$$construct($$this);

		//initialize properties
		Timer.$$iinit($$this);

		//call constructor
		if (args !== undefined) Timer.$$constructor.apply($$this, args);
	});

	//initializer
	Timer.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$Timer.$$p.timer = $es4.$$coerce(null, Object);
		$$this.$$Timer.$$p._delay = $es4.$$coerce(undefined, Number);
		$$this.$$Timer.$$p._repeatCount = $es4.$$coerce(undefined, int);
		$$this.$$Timer.$$p._currentCount = $es4.$$coerce(0, int);
	
		//call iinit on super
		EventDispatcher.$$iinit($$this);
	});

	//constructor
	Timer.$$constructor = (function ($$$$delay, $$$$repeatCount)
	{
		var $$this = this;
		//set default parameter values
		var delay = $es4.$$coerce($$$$delay, Number);
		var repeatCount = (1 > arguments.length - 1) ? 0 : $es4.$$coerce($$$$repeatCount, int);


		EventDispatcher.$$constructor.call($$this);

		$$this.$$Timer._delay = delay;
		$$this.$$Timer._repeatCount = repeatCount;
	});

	return $es4.$$class(Timer, {EXTENDS:'flash.events.EventDispatcher'}, 'flash.utils::Timer');
})();
//flash.utils.Timer


//flash.xml.XMLDocument
$es4.$$package('flash.xml').XMLDocument = (function ()
{
	//imports
	var XMLNode;
	var Browser;
	var XMLNodeType;

	//properties
	var $$j = {};
	Object.defineProperty(XMLDocument, '$_regex2', {
	get:function () { if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit(); return $$j.$_regex2; },
	set:function (value) { if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit(); $$j.$_regex2 = $es4.$$coerce(value, RegExp); }
	});

	Object.defineProperty(XMLDocument, '$_regex3', {
	get:function () { if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit(); return $$j.$_regex3; },
	set:function (value) { if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit(); $$j.$_regex3 = $es4.$$coerce(value, RegExp); }
	});


	//class pre initializer
	XMLDocument.$$sinit = (function ()
	{
		XMLDocument.$$sinit = undefined;

		//initialize imports
		XMLNode = $es4.$$['flash.xml'].XMLNode;
		Browser = $es4.$$['browser'].Browser;
		XMLNodeType = $es4.$$['flash.xml'].XMLNodeType;

		//ensure $$sinit is called on super class
		if (XMLNode.$$sinit !== undefined) XMLNode.$$sinit();

		//set prototype and constructor
		XMLDocument.prototype = Object.create(XMLNode.prototype);
		Object.defineProperty(XMLDocument.prototype, "constructor", { value: XMLDocument, enumerable: false });

		//hold private values
		Object.defineProperty(XMLDocument.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(XMLDocument.prototype, 'createElement', {
		get:function ()
		{
			var $$this = this;

			function createElement($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				throw $es4.$$primitive(new Error('XMLDocument: attempted call to an unimplemented function "createElement"'));
			}

			return $$this.$$XMLDocument.$$createElement || ($$this.$$XMLDocument.$$createElement = createElement);
		}});


		//public instance method
		Object.defineProperty(XMLDocument.prototype, 'createTextNode', {
		get:function ()
		{
			var $$this = this;

			function createTextNode($$$$text)
			{
				//set default parameter values
				var text = $es4.$$coerce($$$$text, String);

				throw $es4.$$primitive(new Error('XMLDocument: attempted call to an unimplemented function "createTextNode"'));
			}

			return $$this.$$XMLDocument.$$createTextNode || ($$this.$$XMLDocument.$$createTextNode = createTextNode);
		}});


		//public instance method
		Object.defineProperty(XMLDocument.prototype, 'parseXML', {
		get:function ()
		{
			var $$this = this;

			function parseXML($$$$source)
			{
				//set default parameter values
				var source = $es4.$$coerce($$$$source, String);

				$$this.$$XMLDocument.$_source = source = XMLDocument.trim(source.replace(XMLDocument.$_regex2, ''));
				var xmlDoc = null;
				var node = null;
				if (source.charAt(0) !== '<')
				{
					if (source.indexOf('<![CDATA[') === 0)
					{
						node = $es4.$$primitive(new XMLNode(XMLNodeType.CDATA_NODE, source));
					}
					else
					{
						node = $es4.$$primitive(new XMLNode(XMLNodeType.TEXT_NODE, source));
					}
					$$this.$__childNodes = [node];
					$$this.firstChild = $$this.lastChild = node;
					return;
				}
				xmlDoc = Browser.domParseXML(source);
				node = $es4.$$primitive(new XMLNode(XMLNodeType.ELEMENT_NODE, xmlDoc.documentElement.nodevalue));
				$$this.$__childNodes = [node];
				$$this.firstChild = $$this.lastChild = node;
				$$this.$$XMLDocument.$_parseRecursiveXML(node, xmlDoc.documentElement);
			}

			return $$this.$$XMLDocument.$$parseXML || ($$this.$$XMLDocument.$$parseXML = parseXML);
		}});


		//private instance method
		XMLDocument.prototype.$$v.$_parseRecursiveXML = {
		get:function ()
		{
			var $$this = this.$$this;

			function $_parseRecursiveXML($$$$node, $$$$domObject)
			{
				//set default parameter values
				var node = $$$$node;
				var domObject = $$$$domObject;

				node.$__prefix = domObject.prefix;
				node.nodeName = domObject.nodeName;
				node.$__localName = domObject.localName;
				var hasError = false;
				if (domObject.nodeName == 'parsererror')
				{
					domObject.nodeName = null;
					node.nodeType = XMLNodeType.TEXT_NODE;
					hasError = true;
				}
				if (node.nodeName == "#cdata-section")
				{
					node.nodeName = null;
				}
				node.nodeValue = domObject.nodeValue;
				if (hasError)
				{
					return;
				}
				var domObjectAttributes = domObject.attributes;
				if (domObjectAttributes && domObjectAttributes.length)
				{
					var attributes = node.attributes;
					for (var i = $es4.$$coerce(domObjectAttributes.length, int); i--;)
					{
						attributes[domObjectAttributes[i].nodeName] = domObjectAttributes[i].value;
					}
				}
				var ignoreWhite = $$this.ignoreWhite;
				var domObjectChildNodes = domObject.childNodes;
				if (domObjectChildNodes && domObjectChildNodes.length)
				{
					var childNodes = node.$__childNodes;
					for (i = $es4.$$coerce(domObjectChildNodes.length, int); i--;)
					{
						var innerNode = domObjectChildNodes[i];
						if (innerNode.nodeName == 'parsererror')
						{
							continue;
						}
						if (ignoreWhite)
						{
							if (innerNode.nodeType == XMLNodeType.ELEMENT_NODE)
							{
								innerNode.nodeValue = (innerNode.nodeValue) ? XMLDocument.trim(innerNode.nodeValue) : '';
							}
							else if (innerNode.nodeType == XMLNodeType.TEXT_NODE && !((XMLDocument.$_regex3).test(innerNode.nodeValue)))
							{
								continue;
							}
						}
						innerNode = $es4.$$primitive(new XMLNode(innerNode.nodeType, innerNode.nodeValue));
						innerNode.parentNode = node;
						$$this.$$XMLDocument.$_parseRecursiveXML(innerNode, domObject.childNodes[i]);
						childNodes.unshift(innerNode);
					}
					node.firstChild = childNodes[0];
					node.lastChild = childNodes[childNodes.length - 1];
				}
			}

			return $$this.$$XMLDocument.$$p.$$$_parseRecursiveXML || ($$this.$$XMLDocument.$$p.$$$_parseRecursiveXML = $_parseRecursiveXML);
		}};


		//public instance method
		Object.defineProperty(XMLDocument.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				return $$this.$$XMLDocument.$_source;
			}

			return $$this.$$XMLDocument.$$toString || ($$this.$$XMLDocument.$$toString = toString);
		}});

		//properties
		XMLDocument.prototype.$$v.$_source = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLDocument.$$p.$_source; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLDocument.$$p.$_source = $es4.$$coerce(value, String); }
		};

		Object.defineProperty(XMLDocument.prototype, 'docTypeDecl', {
		get:function () { var $$this = this; return $$this.$$XMLDocument.docTypeDecl; },
		set:function (value) { var $$this = this; $$this.$$XMLDocument.docTypeDecl = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(XMLDocument.prototype, 'idMap', {
		get:function () { var $$this = this; return $$this.$$XMLDocument.idMap; },
		set:function (value) { var $$this = this; $$this.$$XMLDocument.idMap = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(XMLDocument.prototype, 'ignoreWhite', {
		get:function () { var $$this = this; return $$this.$$XMLDocument.ignoreWhite; },
		set:function (value) { var $$this = this; $$this.$$XMLDocument.ignoreWhite = $es4.$$coerce(value, Boolean); }
		});

		Object.defineProperty(XMLDocument.prototype, 'xmlDecl', {
		get:function () { var $$this = this; return $$this.$$XMLDocument.xmlDecl; },
		set:function (value) { var $$this = this; $$this.$$XMLDocument.xmlDecl = $es4.$$coerce(value, Object); }
		});

	});

	//class initializer
	XMLDocument.$$cinit = (function ()
	{
		XMLDocument.$$cinit = undefined;

		//initialize properties
		$$j.$_regex2 = $es4.$$coerce(/<!--[\s\S]*?-->/g, RegExp);
		$$j.$_regex3 = $es4.$$coerce(/\S/, RegExp);
	
	});

	//private static method
	XMLDocument.trim = (function ($$$$string)
	{
		if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit();

		//set default parameter values
		var string = $$$$string;

		if (!string)
		{
			return '';
		}
		return $es4.$$coerce(string.trim(), String);
	});
	function XMLDocument()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XMLDocument) || $$this.$$XMLDocument !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XMLDocument) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XMLDocument.$$construct($$this, $$args);
		}
	}

	//construct
	XMLDocument.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XMLDocument.$$cinit !== undefined) XMLDocument.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XMLDocument', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$XMLDocument, '$_source', XMLDocument.prototype.$$v.$_source);

		//private instance method
		Object.defineProperty($$this.$$XMLDocument, '$_parseRecursiveXML', XMLDocument.prototype.$$v.$_parseRecursiveXML);

		//call construct on super
		XMLNode.$$construct($$this);

		//initialize properties
		XMLDocument.$$iinit($$this);

		//call constructor
		if (args !== undefined) XMLDocument.$$constructor.apply($$this, args);
	});

	//initializer
	XMLDocument.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$XMLDocument.$$p.$_source = $es4.$$coerce(undefined, String);
		$$this.$$XMLDocument.docTypeDecl = $es4.$$coerce(undefined, Object);
		$$this.$$XMLDocument.idMap = $es4.$$coerce(undefined, Object);
		$$this.$$XMLDocument.ignoreWhite = $es4.$$coerce(undefined, Boolean);
		$$this.$$XMLDocument.xmlDecl = $es4.$$coerce(undefined, Object);
	
		//call iinit on super
		XMLNode.$$iinit($$this);
	});

	//constructor
	XMLDocument.$$constructor = (function ($$$$source)
	{
		var $$this = this;
		//set default parameter values
		var source = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$source, String);

		if (source)
		{
			$$this.parseXML(source);
		}
		XMLNode.$$constructor.call($$this, XMLNodeType.ELEMENT_NODE, source);
	});

	return $es4.$$class(XMLDocument, {EXTENDS:'flash.xml.XMLNode'}, 'flash.xml::XMLDocument');
})();
//flash.xml.XMLDocument


//flash.xml.XMLNode
$es4.$$package('flash.xml').XMLNode = (function ()
{
	//imports
	var XMLNode;
	var XMLNodeType;

	//class pre initializer
	XMLNode.$$sinit = (function ()
	{
		XMLNode.$$sinit = undefined;

		//initialize imports
		XMLNodeType = $es4.$$['flash.xml'].XMLNodeType;

		//set prototype and constructor
		XMLNode.prototype = Object.create(Object.prototype);
		Object.defineProperty(XMLNode.prototype, "constructor", { value: XMLNode, enumerable: false });

		//hold private values
		Object.defineProperty(XMLNode.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(XMLNode.prototype, 'appendChild', {
		get:function ()
		{
			var $$this = this;

			function appendChild($$$$node)
			{
				//set default parameter values
				var node = $es4.$$coerce($$$$node, $es4.$$['flash.xml'].XMLNode);

				if (node.parentNode)
				{
					node.removeNode();
				}
				node.parentNode = $$this;
				$$this.$__childNodes.push(node);
			}

			return $$this.$$XMLNode.$$appendChild || ($$this.$$XMLNode.$$appendChild = appendChild);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'cloneNode', {
		get:function ()
		{
			var $$this = this;

			function cloneNode($$$$deep)
			{
				//set default parameter values
				var deep = $es4.$$coerce($$$$deep, Boolean);

				var newNode = $es4.$$coerce($es4.$$primitive(new XMLNode($$this.nodeType, $$this.nodeValue)), $es4.$$['flash.xml'].XMLNode);
				if (!deep)
				{
					newNode.$__childNodes = $$this.$__childNodes.concat();
				}
				return newNode;
			}

			return $$this.$$XMLNode.$$cloneNode || ($$this.$$XMLNode.$$cloneNode = cloneNode);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'getNamespaceForPrefix', {
		get:function ()
		{
			var $$this = this;

			function getNamespaceForPrefix($$$$prefix)
			{
				//set default parameter values
				var prefix = $es4.$$coerce($$$$prefix, String);

				throw $es4.$$primitive(new Error('XMLNode: attempted call to an unimplemented function "getNamespaceForPrefix"'));
			}

			return $$this.$$XMLNode.$$getNamespaceForPrefix || ($$this.$$XMLNode.$$getNamespaceForPrefix = getNamespaceForPrefix);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'getPrefixForNamespace', {
		get:function ()
		{
			var $$this = this;

			function getPrefixForNamespace($$$$ns)
			{
				//set default parameter values
				var ns = $es4.$$coerce($$$$ns, String);

				throw $es4.$$primitive(new Error('XMLNode: attempted call to an unimplemented function "getPrefixForNamespace"'));
			}

			return $$this.$$XMLNode.$$getPrefixForNamespace || ($$this.$$XMLNode.$$getPrefixForNamespace = getPrefixForNamespace);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'hasChildNodes', {
		get:function ()
		{
			var $$this = this;

			function hasChildNodes()
			{
				return $es4.$$coerce($$this.$__childNodes.length > 0, Boolean);
			}

			return $$this.$$XMLNode.$$hasChildNodes || ($$this.$$XMLNode.$$hasChildNodes = hasChildNodes);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'insertBefore', {
		get:function ()
		{
			var $$this = this;

			function insertBefore($$$$node, $$$$before)
			{
				//set default parameter values
				var node = $es4.$$coerce($$$$node, $es4.$$['flash.xml'].XMLNode);
				var before = $es4.$$coerce($$$$before, $es4.$$['flash.xml'].XMLNode);

				var childNodes = $$this.$__childNodes;
				var childNodesLength = $es4.$$coerce(childNodes.length, int);
				for (var i = 0; i < childNodesLength; i++)
				{
					if (childNodes[i] != before)
					{
						continue;
					}
					if (node.parentNode)
					{
						node.removeNode();
					}
					node.parentNode = $$this;
					childNodes.splice(i, 0, node);
					return;
				}
				trace('xmlNode insertion failed');
			}

			return $$this.$$XMLNode.$$insertBefore || ($$this.$$XMLNode.$$insertBefore = insertBefore);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'removeNode', {
		get:function ()
		{
			var $$this = this;

			function removeNode()
			{
				if (!$$this.parentNode)
				{
					return;
				}
				$$this.parentNode.$__removeNodeChild($$this);
			}

			return $$this.$$XMLNode.$$removeNode || ($$this.$$XMLNode.$$removeNode = removeNode);
		}});


		//protected instance method
		Object.defineProperty(XMLNode.prototype, '$__removeNodeChild', {
		get:function ()
		{
			var $$this = this;

			function $__removeNodeChild($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, $es4.$$['flash.xml'].XMLNode);

				var childNodes = $$this.$__childNodes;
				var childNodesLength = $es4.$$coerce(childNodes.length, int);
				for (var i = 0; i < childNodesLength; i++)
				{
					if (childNodes[i] != child)
					{
						continue;
					}
					childNodes.splice(0, 1);
					i--;
					return true;
				}
				return false;
			}

			return $$this.$$XMLNode.$$$__removeNodeChild || ($$this.$$XMLNode.$$$__removeNodeChild = $__removeNodeChild);
		}});


		//public instance method
		Object.defineProperty(XMLNode.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString($$$$$toXMLString)
			{
				//set default parameter values
				var $toXMLString = (0 > arguments.length - 1) ? false : $es4.$$coerce($$$$$toXMLString, Boolean);

				if (!$$this.nodeName && $$this.nodeType != XMLNodeType.CDATA_NODE)
				{
					return '[XMLNode]';
				}
				if ($$this.nodeType == XMLNodeType.TEXT_NODE || $$this.nodeName == "#text")
				{
					return $$this.nodeValue;
				}
				if ($$this.nodeType == XMLNodeType.CDATA_NODE)
				{
					return ($toXMLString) ? $$this.nodeValue : $$this.nodeValue.split("<").join("&lt;").split(">").join("&gt;");
				}
				var attributesSerialised = "";
				var attributes = $$this.$$XMLNode.$_attributes;
				for (var iter in attributes)
				{
					attributesSerialised += " " + iter + "=\"" + attributes[iter] + "\"";
				}
				var nodeStr = "<" + $$this.nodeName + attributesSerialised;
				var nodeEnding = "";
				if (!$$this.childNodes.length)
				{
					nodeStr += " />";
				}
				else
				{
					nodeStr += ">";
					nodeEnding = "</" + $$this.nodeName + ">";
				}
				var innerNodes = "";
				var childNodesLength = $es4.$$coerce($$this.childNodes.length, int);
				for (var i = 0; i < childNodesLength; i++)
				{
					innerNodes += $es4.$$coerce($$this.childNodes[i].toString(), String);
				}
				return nodeStr + innerNodes + nodeEnding;
			}

			return $$this.$$XMLNode.$$toString || ($$this.$$XMLNode.$$toString = toString);
		}});

		Object.defineProperty(XMLNode.prototype, 'attributes', {get:function ()
		{
			var $$this = this;
			return $$this.$$XMLNode.$_attributes;
		}, set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$XMLNode.$_attributes = value;
		}});
		Object.defineProperty(XMLNode.prototype, 'childNodes', {get:function ()
		{
			var $$this = this;
			return $$this.$__childNodes;
		}});
		Object.defineProperty(XMLNode.prototype, 'localName', {get:function ()
		{
			var $$this = this;
			return $$this.$__localName;
		}});
		Object.defineProperty(XMLNode.prototype, 'namespaceURI', {get:function ()
		{
			var $$this = this;
			return $$this.$__namespaceURI;
		}});
		Object.defineProperty(XMLNode.prototype, 'prefix', {get:function ()
		{
			var $$this = this;
			return $$this.$__prefix;
		}});

		//properties
		XMLNode.prototype.$$v.$_attributes = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLNode.$$p.$_attributes; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLNode.$$p.$_attributes = $es4.$$coerce(value, Object); }
		};

		Object.defineProperty(XMLNode.prototype, '$__childNodes', {
		get:function () { var $$this = this; return $$this.$$XMLNode.$__childNodes; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.$__childNodes = $es4.$$coerce(value, Array); }
		});

		Object.defineProperty(XMLNode.prototype, '$__localName', {
		get:function () { var $$this = this; return $$this.$$XMLNode.$__localName; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.$__localName = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(XMLNode.prototype, '$__prefix', {
		get:function () { var $$this = this; return $$this.$$XMLNode.$__prefix; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.$__prefix = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(XMLNode.prototype, '$__namespaceURI', {
		get:function () { var $$this = this; return $$this.$$XMLNode.$__namespaceURI; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.$__namespaceURI = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(XMLNode.prototype, '$__domObject', {
		get:function () { var $$this = this; return $$this.$$XMLNode.$__domObject; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.$__domObject = $es4.$$coerce(value, Object); }
		});

		Object.defineProperty(XMLNode.prototype, 'firstChild', {
		get:function () { var $$this = this; return $$this.$$XMLNode.firstChild; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.firstChild = $es4.$$coerce(value, $es4.$$['flash.xml'].XMLNode); }
		});

		Object.defineProperty(XMLNode.prototype, 'lastChild', {
		get:function () { var $$this = this; return $$this.$$XMLNode.lastChild; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.lastChild = $es4.$$coerce(value, $es4.$$['flash.xml'].XMLNode); }
		});

		Object.defineProperty(XMLNode.prototype, 'nextSibling', {
		get:function () { var $$this = this; return $$this.$$XMLNode.nextSibling; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.nextSibling = $es4.$$coerce(value, $es4.$$['flash.xml'].XMLNode); }
		});

		Object.defineProperty(XMLNode.prototype, 'nodeName', {
		get:function () { var $$this = this; return $$this.$$XMLNode.nodeName; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.nodeName = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(XMLNode.prototype, 'nodeType', {
		get:function () { var $$this = this; return $$this.$$XMLNode.nodeType; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.nodeType = $es4.$$coerce(value, uint); }
		});

		Object.defineProperty(XMLNode.prototype, 'nodeValue', {
		get:function () { var $$this = this; return $$this.$$XMLNode.nodeValue; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.nodeValue = $es4.$$coerce(value, String); }
		});

		Object.defineProperty(XMLNode.prototype, 'parentNode', {
		get:function () { var $$this = this; return $$this.$$XMLNode.parentNode; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.parentNode = $es4.$$coerce(value, $es4.$$['flash.xml'].XMLNode); }
		});

		Object.defineProperty(XMLNode.prototype, 'previousSibling', {
		get:function () { var $$this = this; return $$this.$$XMLNode.previousSibling; },
		set:function (value) { var $$this = this; $$this.$$XMLNode.previousSibling = $es4.$$coerce(value, $es4.$$['flash.xml'].XMLNode); }
		});

	});

	//class initializer
	XMLNode.$$cinit = (function ()
	{
		XMLNode.$$cinit = undefined;
	});

	function XMLNode()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XMLNode) || $$this.$$XMLNode !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XMLNode) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XMLNode.$$construct($$this, $$args);
		}
	}

	//construct
	XMLNode.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XMLNode.$$cinit !== undefined) XMLNode.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XMLNode', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$XMLNode, '$_attributes', XMLNode.prototype.$$v.$_attributes);

		//initialize properties
		XMLNode.$$iinit($$this);

		//call constructor
		if (args !== undefined) XMLNode.$$constructor.apply($$this, args);
	});

	//initializer
	XMLNode.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$XMLNode.$$p.$_attributes = $es4.$$coerce({}, Object);
		$$this.$$XMLNode.$__childNodes = $es4.$$coerce([], Array);
		$$this.$$XMLNode.$__localName = $es4.$$coerce(undefined, String);
		$$this.$$XMLNode.$__prefix = $es4.$$coerce(undefined, String);
		$$this.$$XMLNode.$__namespaceURI = $es4.$$coerce(undefined, String);
		$$this.$$XMLNode.$__domObject = $es4.$$coerce(undefined, Object);
		$$this.$$XMLNode.firstChild = $es4.$$coerce(undefined, $es4.$$['flash.xml'].XMLNode);
		$$this.$$XMLNode.lastChild = $es4.$$coerce(undefined, $es4.$$['flash.xml'].XMLNode);
		$$this.$$XMLNode.nextSibling = $es4.$$coerce(undefined, $es4.$$['flash.xml'].XMLNode);
		$$this.$$XMLNode.nodeName = $es4.$$coerce(undefined, String);
		$$this.$$XMLNode.nodeType = $es4.$$coerce(undefined, uint);
		$$this.$$XMLNode.nodeValue = $es4.$$coerce(undefined, String);
		$$this.$$XMLNode.parentNode = $es4.$$coerce(undefined, $es4.$$['flash.xml'].XMLNode);
		$$this.$$XMLNode.previousSibling = $es4.$$coerce(undefined, $es4.$$['flash.xml'].XMLNode);
	
	});

	//constructor
	XMLNode.$$constructor = (function ($$$$type, $$$$value)
	{
		var $$this = this;
		//set default parameter values
		var type = $es4.$$coerce($$$$type, uint);
		var value = $es4.$$coerce($$$$value, String);

		$$this.nodeType = type;
		if (type != XMLNodeType.ELEMENT_NODE)
		{
			$$this.nodeValue = value;
		}
	});

	return $es4.$$class(XMLNode, null, 'flash.xml::XMLNode');
})();
//flash.xml.XMLNode


//flash.xml.XMLNodeType
$es4.$$package('flash.xml').XMLNodeType = (function ()
{
	//properties
	var $$j = {};
	XMLNodeType.CDATA_NODE = 4;
	XMLNodeType.ELEMENT_NODE = 1;
	XMLNodeType.TEXT_NODE = 3;

	//class pre initializer
	XMLNodeType.$$sinit = (function ()
	{
		XMLNodeType.$$sinit = undefined;

		//set prototype and constructor
		XMLNodeType.prototype = Object.create(Object.prototype);
		Object.defineProperty(XMLNodeType.prototype, "constructor", { value: XMLNodeType, enumerable: false });

		//hold private values
		Object.defineProperty(XMLNodeType.prototype, '$$v', {value:{}});
	});

	//class initializer
	XMLNodeType.$$cinit = (function ()
	{
		XMLNodeType.$$cinit = undefined;
	});

	function XMLNodeType()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XMLNodeType) || $$this.$$XMLNodeType !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XMLNodeType) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XMLNodeType.$$construct($$this, $$args);
		}
	}

	//construct
	XMLNodeType.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XMLNodeType.$$cinit !== undefined) XMLNodeType.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XMLNodeType', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		XMLNodeType.$$iinit($$this);

		//call constructor
		if (args !== undefined) XMLNodeType.$$constructor.apply($$this, args);
	});

	//initializer
	XMLNodeType.$$iinit = (function ($$this)
	{
	});

	//constructor
	XMLNodeType.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(XMLNodeType, null, 'flash.xml::XMLNodeType');
})();
//flash.xml.XMLNodeType


//player.Player
$es4.$$package('player').Player = (function ()
{
	//imports
	var Stage;

	//properties
	var $$j = {};
	Object.defineProperty(Player, '$_domStageContainerID', {
	get:function () { if (Player.$$cinit !== undefined) Player.$$cinit(); return $$j.$_domStageContainerID; },
	set:function (value) { if (Player.$$cinit !== undefined) Player.$$cinit(); $$j.$_domStageContainerID = $es4.$$coerce(value, String); }
	});

	Object.defineProperty(Player, '$_frameRate', {
	get:function () { if (Player.$$cinit !== undefined) Player.$$cinit(); return $$j.$_frameRate; },
	set:function (value) { if (Player.$$cinit !== undefined) Player.$$cinit(); $$j.$_frameRate = value }
	});

	Object.defineProperty(Player, '$_callObject', {
	get:function () { if (Player.$$cinit !== undefined) Player.$$cinit(); return $$j.$_callObject; },
	set:function (value) { if (Player.$$cinit !== undefined) Player.$$cinit(); $$j.$_callObject = $es4.$$coerce(value, Object); }
	});

	Object.defineProperty(Player, '$_stage', {
	get:function () { if (Player.$$cinit !== undefined) Player.$$cinit(); return $$j.$_stage; },
	set:function (value) { if (Player.$$cinit !== undefined) Player.$$cinit(); $$j.$_stage = $es4.$$coerce(value, Stage); }
	});

	Object.defineProperty(Player, '$_uid', {
	get:function () { if (Player.$$cinit !== undefined) Player.$$cinit(); return $$j.$_uid; },
	set:function (value) { if (Player.$$cinit !== undefined) Player.$$cinit(); $$j.$_uid = value }
	});


	//class pre initializer
	Player.$$sinit = (function ()
	{
		Player.$$sinit = undefined;

		//initialize imports
		Stage = $es4.$$['flash.display'].Stage;

		//set prototype and constructor
		Player.prototype = Object.create(Object.prototype);
		Object.defineProperty(Player.prototype, "constructor", { value: Player, enumerable: false });

		//hold private values
		Object.defineProperty(Player.prototype, '$$v', {value:{}});
	});

	//class initializer
	Player.$$cinit = (function ()
	{
		Player.$$cinit = undefined;

		//initialize properties
		$$j.$_domStageContainerID = $es4.$$coerce(undefined, String);
		$$j.$_frameRate = undefined;
		$$j.$_callObject = $es4.$$coerce(undefined, Object);
		$$j.$_stage = $es4.$$coerce(undefined, Stage);
		$$j.$_uid = 0;
	
	});

	//public static method
	Player.$__init = (function ($$$$domStageContainerID, $$$$frameRate, $$$$callObject)
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		//set default parameter values
		var domStageContainerID = $es4.$$coerce($$$$domStageContainerID, String);
		var frameRate = (1 > arguments.length - 1) ? 7 : $es4.$$coerce($$$$frameRate, int);
		var callObject = (2 > arguments.length - 1) ? null : $es4.$$coerce($$$$callObject, Object);

		Player.$_domStageContainerID = domStageContainerID;
		Player.$_frameRate = frameRate;
		Player.$_callObject = callObject;
	});

	//public static method
	Player.$__getStage = (function ()
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		if (Player.$_stage)
		{
			return Player.$_stage;
		}
		var domStageContainer = document.getElementById(Player.$_domStageContainerID);
		var stage = Stage['$__init'](domStageContainer);
		var setTimeout = $es4.$$coerce(window.setTimeout, Function);
		var requestAnimationFrame = $es4.$$coerce(window.requestAnimationFrame, Function);
		var beginTime = $es4.$$primitive(new Date().getTime());
		document.addEventListener('visibilitychange', onVisibilityChange, false);

		function onVisibilityChange($$$$event) 
		{
			//set default parameter values
			var event = $$$$event;

			stage.$__notify('visibilityChange', document.hidden);
			if (!window.audioContexts)
			{
				return;
			}
			for (var i = $es4.$$coerce(window.audioContexts.length, int); i--;)
			{
				var audioContext = window.audioContexts[i];
				try
				{
					if (document.hidden)
					{
						audioContext.suspend();
					}
					else
					{
						audioContext.resume();
					}
				}
				catch (error)
				{
				}
			}
		}
;

		render();

		function render() 
		{
			setTimeout(onTimeout, 1000 / Player.$_frameRate);
			var endTime = $es4.$$primitive(new Date().getTime());
			var timeElapsed = endTime - beginTime;
			beginTime = endTime;
			stage.$__notify('enterFrame', timeElapsed);
		}
;

		function onTimeout() 
		{
			if (requestAnimationFrame != null)
			{
				requestAnimationFrame(render);
			}
			else
			{
				render();
			}
		}
;

		return $es4.$$coerce(Player.$_stage = stage, Stage);
	});

	//public static method
	Player.getFrameRate = (function ()
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		return $es4.$$coerce(Player.$_frameRate, int);
	});

	//public static method
	Player.setFrameRate = (function ($$$$frameRate)
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		//set default parameter values
		var frameRate = $es4.$$coerce($$$$frameRate, int);

		Player.$_frameRate = frameRate;
	});

	//public static method
	Player.getUniqueID = (function ($$$$prefix)
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		//set default parameter values
		var prefix = (0 > arguments.length - 1) ? 'uid' : $es4.$$coerce($$$$prefix, String);

		return prefix + '_' + Player.$_uid++;
	});

	//public static method
	Player.getDomStageContainerID = (function ()
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		return Player.$_domStageContainerID;
	});

	//public static method
	Player.getCallObject = (function ()
	{
		if (Player.$$cinit !== undefined) Player.$$cinit();

		return Player.$_callObject;
	});
	function Player()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof Player) || $$this.$$Player !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], Player) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			Player.$$construct($$this, $$args);
		}
	}

	//construct
	Player.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (Player.$$cinit !== undefined) Player.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$Player', {value:{$$this:$$this, $$p:{}, $$ns:{}}});


		//initialize properties
		Player.$$iinit($$this);

		//call constructor
		if (args !== undefined) Player.$$constructor.apply($$this, args);
	});

	//initializer
	Player.$$iinit = (function ($$this)
	{
	});

	//constructor
	Player.$$constructor = (function ()
	{
		var $$this = this;
	});

	return $es4.$$class(Player, null, 'player::Player');
})();
//player.Player


//XML
$es4.$$package('').XML = (function ()
{
	//imports
	var XMLDocument;
	var XMLNode;
	var XMLNodeType;
	var Browser;

	//properties
	var $$j = {};
	Object.defineProperty(XML, '$_ignoreComments', {
	get:function () { if (XML.$$cinit !== undefined) XML.$$cinit(); return $$j.$_ignoreComments; },
	set:function (value) { if (XML.$$cinit !== undefined) XML.$$cinit(); $$j.$_ignoreComments = $es4.$$coerce(value, Boolean); }
	});

	Object.defineProperty(XML, '$_ignoreProcessingInstructions', {
	get:function () { if (XML.$$cinit !== undefined) XML.$$cinit(); return $$j.$_ignoreProcessingInstructions; },
	set:function (value) { if (XML.$$cinit !== undefined) XML.$$cinit(); $$j.$_ignoreProcessingInstructions = $es4.$$coerce(value, Boolean); }
	});

	Object.defineProperty(XML, '$_ignoreWhitespace', {
	get:function () { if (XML.$$cinit !== undefined) XML.$$cinit(); return $$j.$_ignoreWhitespace; },
	set:function (value) { if (XML.$$cinit !== undefined) XML.$$cinit(); $$j.$_ignoreWhitespace = $es4.$$coerce(value, Boolean); }
	});

	Object.defineProperty(XML, '$_prettyIndent', {
	get:function () { if (XML.$$cinit !== undefined) XML.$$cinit(); return $$j.$_prettyIndent; },
	set:function (value) { if (XML.$$cinit !== undefined) XML.$$cinit(); $$j.$_prettyIndent = $es4.$$coerce(value, int); }
	});

	Object.defineProperty(XML, '$_prettyPrinting', {
	get:function () { if (XML.$$cinit !== undefined) XML.$$cinit(); return $$j.$_prettyPrinting; },
	set:function (value) { if (XML.$$cinit !== undefined) XML.$$cinit(); $$j.$_prettyPrinting = $es4.$$coerce(value, Boolean); }
	});


	//class pre initializer
	XML.$$sinit = (function ()
	{
		XML.$$sinit = undefined;

		//initialize imports
		XMLDocument = $es4.$$['flash.xml'].XMLDocument;
		XMLNode = $es4.$$['flash.xml'].XMLNode;
		XMLNodeType = $es4.$$['flash.xml'].XMLNodeType;
		Browser = $es4.$$['browser'].Browser;

		//set prototype and constructor
		XML.prototype = Object.create(Object.prototype);
		Object.defineProperty(XML.prototype, "constructor", { value: XML, enumerable: false });

		//hold private values
		Object.defineProperty(XML.prototype, '$$v', {value:{}});

		//internal instance method
		Object.defineProperty(XML.prototype, 'lazyInitialized', {
		get:function ()
		{
			var $$this = this;

			function lazyInitialized()
			{
				if (!$$this.$$XML.$_xmlNode)
				{
					throw $es4.$$primitive(new Error('XML: already initialized'));
				}
				var xmlNode = $$this.$$XML.$_xmlNode;
				$$this.$$XML.$_xmlNode = null;
				$$this.$$XML.$_attributes = $es4.$$primitive(new XMLList());
				$$this.$$XML.$_attributes.$__parent = $$this;
				var attributes = xmlNode.attributes;
				for (var property in attributes)
				{
					var attribute = '<' + property + '>' + attributes[property] + '</' + property + '>';
					var attributeXML = $es4.$$coerce($es4.$$primitive(new XML(attribute)), XML);
					attributeXML.$__nodeKind = 'attribute';
					$$this.$$XML.$_attributes[$$this.$$XML.$_attributes.length()] = attributeXML;
				}
				if ($$this.$$XML.$_cdata || ($$this.$$XML.$_nodeKind == 'attribute' && !xmlNode.childNodes.length))
				{
					$$this.$$XML.$_children = $es4.$$primitive(new XMLList(['']));
				}
				else
				{
					$$this.$$XML.$_children = $es4.$$primitive(new XMLList(xmlNode.childNodes));
				}
				$$this.$$XML.$_children.$__parent = $$this;
			}

			return $$this.$$XML.$$lazyInitialized || ($$this.$$XML.$$lazyInitialized = lazyInitialized);
		}});


		//internal instance method
		Object.defineProperty(XML.prototype, '$__invalidateString', {
		get:function ()
		{
			var $$this = this;

			function $__invalidateString()
			{
				$$this.$$XML.$_stringInvalidated = true;
				$$this.$$XML.$_xmlStringInvalidated = true;
				if ($$this.$$XML.$_parent)
				{
					$$this.$$XML.$_parent.$__invalidateString();
				}
			}

			return $$this.$$XML.$$$__invalidateString || ($$this.$$XML.$$$__invalidateString = $__invalidateString);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'appendChild', {
		get:function ()
		{
			var $$this = this;

			function appendChild($$$$child)
			{
				//set default parameter values
				var child = $es4.$$coerce($$$$child, Object);

				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return $es4.$$coerce($$this, XML);
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				if ($es4.$$is(child, XMLList))
				{
					child.$__parent = $$this;
					for (var $$i1 in child)
					{
						var xml = $es4.$$coerce(child[$$i1], XML);

						$$this.appendChild(xml);
					}
				}
				else if ($es4.$$is(child, XML))
				{
					$$this.$$XML.$_children[$$this.$$XML.$_children.length()] = child;
				}
				else if ($es4.$$is(child, String))
				{
					return $$this.appendChild($es4.$$primitive(new XML(child.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/"/g, '&quot;'))));
				}
				return $es4.$$coerce($$this, XML);
			}

			return $$this.$$XML.$$appendChild || ($$this.$$XML.$$appendChild = appendChild);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'attribute', {
		get:function ()
		{
			var $$this = this;

			function attribute($$$$attributeName)
			{
				//set default parameter values
				var attributeName = $$$$attributeName;

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				attributeName = attributeName.toString();
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this;
				for (var $$i2 in $$this.$$XML.$_attributes)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_attributes[$$i2], XML);

					if (xml.name() == attributeName)
					{
						xmlList[0] = xml;
						break;
					}
				}
				return xmlList;
			}

			return $$this.$$XML.$$attribute || ($$this.$$XML.$$attribute = attribute);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'attributes', {
		get:function ()
		{
			var $$this = this;

			function attributes()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $$this.$$XML.$_attributes;
			}

			return $$this.$$XML.$$attributes || ($$this.$$XML.$$attributes = attributes);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'child', {
		get:function ()
		{
			var $$this = this;

			function child($$$$propertyName)
			{
				//set default parameter values
				var propertyName = $es4.$$coerce($$$$propertyName, Object);

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this;
				for (var $$i3 in $$this.$$XML.$_children)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_children[$$i3], XML);

					if (propertyName == null || xml.name() == propertyName)
					{
						xmlList[xmlList.length()] = xml;
					}
				}
				return xmlList;
			}

			return $$this.$$XML.$$child || ($$this.$$XML.$$child = child);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'childIndex', {
		get:function ()
		{
			var $$this = this;

			function childIndex()
			{
				if (!$$this.$$XML.$_parent)
				{
					return -1;
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var index = 0;
				var xmlList = $es4.$$coerce(($$this.$$XML.$_nodeKind == 'attribute') ? $$this.$$XML.$_parent.attributes() : $$this.$$XML.$_parent.children(), XMLList);
				for (var $$i4 in xmlList)
				{
					var xml = $es4.$$coerce(xmlList[$$i4], XML);

					if (xml == $$this)
					{
						return index;
					}
					index++;
				}
				return -1;
			}

			return $$this.$$XML.$$childIndex || ($$this.$$XML.$$childIndex = childIndex);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'children', {
		get:function ()
		{
			var $$this = this;

			function children()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $$this.$$XML.$_children;
			}

			return $$this.$$XML.$$children || ($$this.$$XML.$$children = children);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'contains', {
		get:function ()
		{
			var $$this = this;

			function contains($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, XML);

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var valueString = value.toXMLString();
				for (var $$i5 in $$this.$$XML.$_children)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_children[$$i5], XML);

					if (xml.toXMLString() == valueString)
					{
						return true;
					}
				}
				return false;
			}

			return $$this.$$XML.$$contains || ($$this.$$XML.$$contains = contains);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'copy', {
		get:function ()
		{
			var $$this = this;

			function copy()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $es4.$$coerce($es4.$$primitive(new XML($$this)), XML);
			}

			return $$this.$$XML.$$copy || ($$this.$$XML.$$copy = copy);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'descendants', {
		get:function ()
		{
			var $$this = this;

			function descendants($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, Object);

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return xmlList;
				}
				for (var $$i6 in $$this.$$XML.$_children)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_children[$$i6], XML);

					if (xml.nodeKind() != 'element')
					{
						if (name == null)
						{
							xmlList[xmlList.length()] = xml;
						}
						continue;
					}
					if (name == null || name.toString() == xml.name())
					{
						xmlList[xmlList.length()] = xml;
					}
					xmlList.$__merge(xml.descendants(name));
				}
				return xmlList;
			}

			return $$this.$$XML.$$descendants || ($$this.$$XML.$$descendants = descendants);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'elements', {
		get:function ()
		{
			var $$this = this;

			function elements($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, Object);

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this;
				for (var $$i7 in $$this.$$XML.$_children)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_children[$$i7], XML);

					if (xml.nodeKind() == 'element')
					{
						xmlList[xmlList.length()] = xml;
					}
				}
				return xmlList;
			}

			return $$this.$$XML.$$elements || ($$this.$$XML.$$elements = elements);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'insertChildAfter', {
		get:function ()
		{
			var $$this = this;

			function insertChildAfter($$$$child1, $$$$child2)
			{
				//set default parameter values
				var child1 = $es4.$$coerce($$$$child1, Object);
				var child2 = $es4.$$coerce($$$$child2, Object);

				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return $$this;
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $$this.$$XML.$_children.$__insertChildAfter(child1, child2);
			}

			return $$this.$$XML.$$insertChildAfter || ($$this.$$XML.$$insertChildAfter = insertChildAfter);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'insertChildBefore', {
		get:function ()
		{
			var $$this = this;

			function insertChildBefore($$$$child1, $$$$child2)
			{
				//set default parameter values
				var child1 = $es4.$$coerce($$$$child1, Object);
				var child2 = $es4.$$coerce($$$$child2, Object);

				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return $$this;
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $$this.$$XML.$_children.$__insertChildBefore(child1, child2);
			}

			return $$this.$$XML.$$insertChildBefore || ($$this.$$XML.$$insertChildBefore = insertChildBefore);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'prependChild', {
		get:function ()
		{
			var $$this = this;

			function prependChild($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Object);

				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return $es4.$$coerce($$this, XML);
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $es4.$$coerce($$this.$$XML.$_children.$__prepend(value), XML);
			}

			return $$this.$$XML.$$prependChild || ($$this.$$XML.$$prependChild = prependChild);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'replace', {
		get:function ()
		{
			var $$this = this;

			function replace($$$$propertyName, $$$$value)
			{
				//set default parameter values
				var propertyName = $es4.$$coerce($$$$propertyName, Object);
				var value = $es4.$$coerce($$$$value, XML);

				if ($$this.$$XML.$_nodeKind != 'element')
				{
					return $es4.$$coerce($$this, XML);
				}
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				return $$this.$$XML.$_children.$__replace($$this.child(propertyName), value);
			}

			return $$this.$$XML.$$replace || ($$this.$$XML.$$replace = replace);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'length', {
		get:function ()
		{
			var $$this = this;

			function length()
			{
				return 1;
			}

			return $$this.$$XML.$$length || ($$this.$$XML.$$length = length);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'localName', {
		get:function ()
		{
			var $$this = this;

			function localName()
			{
				return $$this.$$XML.$_localName;
			}

			return $$this.$$XML.$$localName || ($$this.$$XML.$$localName = localName);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'name', {
		get:function ()
		{
			var $$this = this;

			function name()
			{
				return $$this.$$XML.$_name;
			}

			return $$this.$$XML.$$name || ($$this.$$XML.$$name = name);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'nodeKind', {
		get:function ()
		{
			var $$this = this;

			function nodeKind()
			{
				return $$this.$$XML.$_nodeKind;
			}

			return $$this.$$XML.$$nodeKind || ($$this.$$XML.$$nodeKind = nodeKind);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'parent', {
		get:function ()
		{
			var $$this = this;

			function parent()
			{
				return $$this.$$XML.$_parent;
			}

			return $$this.$$XML.$$parent || ($$this.$$XML.$$parent = parent);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'setChildren', {
		get:function ()
		{
			var $$this = this;

			function setChildren($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Object);

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				$$this.$$XML.$_children.$__parent = null;
				$$this.$$XML.$_children = $es4.$$primitive(new XMLList(value));
				$$this.$$XML.$_children.$__parent = $$this;
				return $es4.$$coerce($$this, XML);
			}

			return $$this.$$XML.$$setChildren || ($$this.$$XML.$$setChildren = setChildren);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'setLocalName', {
		get:function ()
		{
			var $$this = this;

			function setLocalName($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				$$this.$$XML.$_localName = name;
				$$this.$__invalidateString();
			}

			return $$this.$$XML.$$setLocalName || ($$this.$$XML.$$setLocalName = setLocalName);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'setName', {
		get:function ()
		{
			var $$this = this;

			function setName($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				$$this.$$XML.$_name = name;
				$$this.$__invalidateString();
			}

			return $$this.$$XML.$$setName || ($$this.$$XML.$$setName = setName);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'text', {
		get:function ()
		{
			var $$this = this;

			function text()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this;
				if ($$this.$$XML.$_nodeKind == 'attribute')
				{
					return xmlList;
				}
				for (var $$i8 in $$this.$$XML.$_children)
				{
					var xml = $es4.$$coerce($$this.$$XML.$_children[$$i8], XML);

					if (xml.nodeKind() == 'text')
					{
						xmlList[xmlList.length()] = xml;
					}
				}
				return xmlList;
			}

			return $$this.$$XML.$$text || ($$this.$$XML.$$text = text);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'hasOwnProperty', {
		get:function ()
		{
			var $$this = this;

			function hasOwnProperty($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				if (name.charAt(0) == '@')
				{
					return $es4.$$coerce($$this.attribute(name.substring(1)).length() > 0, Boolean);
				}
				return $es4.$$coerce($$this.child(name).length() > 0, Boolean);
			}

			return $$this.$$XML.$$hasOwnProperty || ($$this.$$XML.$$hasOwnProperty = hasOwnProperty);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'propertyIsEnumerable', {
		get:function ()
		{
			var $$this = this;

			function propertyIsEnumerable($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				return $es4.$$coerce(name == '0', Boolean);
			}

			return $$this.$$XML.$$propertyIsEnumerable || ($$this.$$XML.$$propertyIsEnumerable = propertyIsEnumerable);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				if ($$this.$$XML.$_nodeKind == 'attribute')
				{
					return $es4.$$coerce($$this.$$XML.$_children[0].toString(), String);
				}
				if ($$this.$$XML.$_nodeKind == 'text')
				{
					return $$this.$$XML.$_string;
				}
				if (!$$this.$$XML.$_stringInvalidated)
				{
					return $$this.$$XML.$_string;
				}
				$$this.$$XML.$_stringInvalidated = false;
				if ($$this.$$XML.$_children.length() == 0)
				{
					return $$this.$$XML.$_string = '';
				}
				if ($$this.$$XML.$_children.length() == 1 && $$this.$$XML.$_children[0].nodeKind() == 'text')
				{
					return $es4.$$coerce($$this.$$XML.$_string = $$this.$$XML.$_children[0].toString(), String);
				}
				return $$this.$$XML.$_string = $$this.toXMLString();
			}

			return $$this.$$XML.$$toString || ($$this.$$XML.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'toXMLString', {
		get:function ()
		{
			var $$this = this;

			function toXMLString()
			{
				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				if ($$this.$$XML.$_nodeKind == 'attribute')
				{
					return $es4.$$coerce($$this.$$XML.$_children[0].toXMLString(), String);
				}
				if ($$this.$$XML.$_nodeKind == 'text')
				{
					if ($$this.$$XML.$_cdata)
					{
						return '<![CDATA[' + $$this.$$XML.$_xmlString + ']]>';
					}
					return $$this.$$XML.$_xmlString;
				}
				if (!$$this.$$XML.$_xmlStringInvalidated)
				{
					return $$this.$$XML.$_xmlString;
				}
				$$this.$$XML.$_xmlStringInvalidated = false;
				var xmlString = null;
				var childXML = null;
				if (!$$this.$$XML.$_attributes.length())
				{
					if (!$$this.$$XML.$_children.length())
					{
						return '<' + $$this.$$XML.$_name + '/>';
					}
					xmlString = '<' + $$this.$$XML.$_name + '>';
					for (var $$i9 in $$this.$$XML.$_children)
					{
						childXML = $es4.$$coerce($$this.$$XML.$_children[$$i9], XML);

						xmlString += childXML.toXMLString();
					}
					xmlString += '</' + $$this.$$XML.$_name + '>';
					return xmlString;
				}
				xmlString = '<a>b</a>';
				var xmlDocument = Browser.domParseXML(xmlString);
				for (var $$i10 in $$this.$$XML.$_attributes)
				{
					var attributeXML = $es4.$$coerce($$this.$$XML.$_attributes[$$i10], XML);

					xmlDocument.documentElement.setAttribute(attributeXML.name(), attributeXML.toXMLString());
				}
				xmlString = $es4.$$coerce(Browser.getNewXMLSerializer().serializeToString(xmlDocument), String);
				xmlString = xmlString.substring(2, xmlString.length - 5);
				if (!$$this.$$XML.$_children.length())
				{
					return '<' + $$this.$$XML.$_name + xmlString.substring(0, xmlString.length - 1) + '/>';
				}
				for (var $$i11 in $$this.$$XML.$_children)
				{
					childXML = $es4.$$coerce($$this.$$XML.$_children[$$i11], XML);

					xmlString += childXML.toXMLString();
				}
				return $$this.$$XML.$_xmlString = '<' + $$this.$$XML.$_name + xmlString + '</' + $$this.$$XML.$_name + '>';
			}

			return $$this.$$XML.$$toXMLString || ($$this.$$XML.$$toXMLString = toXMLString);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'hasComplexContent', {
		get:function ()
		{
			var $$this = this;

			function hasComplexContent()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "hasComplexContent"'));
			}

			return $$this.$$XML.$$hasComplexContent || ($$this.$$XML.$$hasComplexContent = hasComplexContent);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'hasSimpleContent', {
		get:function ()
		{
			var $$this = this;

			function hasSimpleContent()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "hasSimpleContent"'));
			}

			return $$this.$$XML.$$hasSimpleContent || ($$this.$$XML.$$hasSimpleContent = hasSimpleContent);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'addNamespace', {
		get:function ()
		{
			var $$this = this;

			function addNamespace($$$$ns)
			{
				//set default parameter values
				var ns = $es4.$$coerce($$$$ns, Object);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "addNamespace"'));
			}

			return $$this.$$XML.$$addNamespace || ($$this.$$XML.$$addNamespace = addNamespace);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'comments', {
		get:function ()
		{
			var $$this = this;

			function comments()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "comments"'));
			}

			return $$this.$$XML.$$comments || ($$this.$$XML.$$comments = comments);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'inScopeNamespaces', {
		get:function ()
		{
			var $$this = this;

			function inScopeNamespaces()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "inScopeNamespaces"'));
			}

			return $$this.$$XML.$$inScopeNamespaces || ($$this.$$XML.$$inScopeNamespaces = inScopeNamespaces);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'namespace', {
		get:function ()
		{
			var $$this = this;

			function namespace($$$$prefix)
			{
				//set default parameter values
				var prefix = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$prefix, String);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "namespace"'));
			}

			return $$this.$$XML.$$namespace || ($$this.$$XML.$$namespace = namespace);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'namespaceDeclarations', {
		get:function ()
		{
			var $$this = this;

			function namespaceDeclarations()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "namespaceDeclarations"'));
			}

			return $$this.$$XML.$$namespaceDeclarations || ($$this.$$XML.$$namespaceDeclarations = namespaceDeclarations);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'normalize', {
		get:function ()
		{
			var $$this = this;

			function normalize()
			{
				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "normalize"'));
			}

			return $$this.$$XML.$$normalize || ($$this.$$XML.$$normalize = normalize);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'processingInstructions', {
		get:function ()
		{
			var $$this = this;

			function processingInstructions($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? "*" : $es4.$$coerce($$$$name, String);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "processingInstructions"'));
			}

			return $$this.$$XML.$$processingInstructions || ($$this.$$XML.$$processingInstructions = processingInstructions);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'removeNamespace', {
		get:function ()
		{
			var $$this = this;

			function removeNamespace($$$$ns)
			{
				//set default parameter values
				var ns = $es4.$$coerce($$$$ns, Namespace);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "removeNamespace"'));
			}

			return $$this.$$XML.$$removeNamespace || ($$this.$$XML.$$removeNamespace = removeNamespace);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'setNamespace', {
		get:function ()
		{
			var $$this = this;

			function setNamespace($$$$ns)
			{
				//set default parameter values
				var ns = $es4.$$coerce($$$$ns, Namespace);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "setNamespace"'));
			}

			return $$this.$$XML.$$setNamespace || ($$this.$$XML.$$setNamespace = setNamespace);
		}});


		//public instance method
		Object.defineProperty(XML.prototype, 'toJSON', {
		get:function ()
		{
			var $$this = this;

			function toJSON($$$$k)
			{
				//set default parameter values
				var k = $es4.$$coerce($$$$k, String);

				throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "toJSON"'));
			}

			return $$this.$$XML.$$toJSON || ($$this.$$XML.$$toJSON = toJSON);
		}});


		//private instance method
		XML.prototype.$$v.$$get = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$get($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				if (key == '$attributes')
				{
					return $$this.$$XML.$_attributes;
				}
				var index = parseInt(key);
				if (index === 0)
				{
					return $$this;
				}
				if (!isNaN(index))
				{
					return undefined;
				}
				return $$this.child(key);
			}

			return $$this.$$XML.$$p.$$$$get || ($$this.$$XML.$$p.$$$$get = $$get);
		}};


		//private instance method
		XML.prototype.$$v.$$set = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$set($$$$key, $$$$value)
			{
				//set default parameter values
				var key = $$$$key;
				var value = $$$$value;

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var index = parseInt(key);
				var xml = null;
				if (isNaN(index))
				{
					var xmlList = $es4.$$coerce($$this.child(key), XMLList);
					if (xmlList.length())
					{
						for (var $$i12 in xmlList)
						{
							var child = $es4.$$coerce(xmlList[$$i12], XML);

							xml = $es4.$$coerce($es4.$$primitive(new XML(value)), XML);
							xml.$__parent = child;
							child.setChildren(xml);
						}
						return value;
					}
					xml = $es4.$$coerce($es4.$$primitive(new XML('<' + key + '/>')), XML);
					xml.appendChild(value);
					value = xml;
					index = $$this.$$XML.$_children.length();
				}
				else
				{
					throw $es4.$$primitive(new Error('XML: Assignment to indexed XML is not allowed: ' + key));
				}
				return $$this.$$XML.$_children[index] = value;
			}

			return $$this.$$XML.$$p.$$$$set || ($$this.$$XML.$$p.$$$$set = $$set);
		}};


		//private instance method
		XML.prototype.$$v.$$call = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$call($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $$$$name;
				var args = $es4.$$coerce($$$$args, Array);

				var string = $$this.toString();
				return string[name].apply(string, args);
			}

			return $$this.$$XML.$$p.$$$$call || ($$this.$$XML.$$p.$$$$call = $$call);
		}};


		//private instance method
		XML.prototype.$$v.$$delete = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$delete($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				if ($$this.$$XML.$_xmlNode)
				{
					lazyInitialized();
				}
				var index = parseInt(key);
				if (isNaN(index))
				{
					var xmlList = $$this.child(key);
					while (xmlList.length())
					{
						delete xmlList[0];
					}
					return true;
				}
				else
				{
					throw $es4.$$primitive(new Error('XML: deletion of indexed XML is not allowed: ' + key));
				}
			}

			return $$this.$$XML.$$p.$$$$delete || ($$this.$$XML.$$p.$$$$delete = $$delete);
		}};


		//private instance method
		XML.prototype.$$v.$$nextName = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextName($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return null;
			}

			return $$this.$$XML.$$p.$$$$nextName || ($$this.$$XML.$$p.$$$$nextName = $$nextName);
		}};


		//private instance method
		XML.prototype.$$v.$$nextNameIndex = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextNameIndex($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return 0;
			}

			return $$this.$$XML.$$p.$$$$nextNameIndex || ($$this.$$XML.$$p.$$$$nextNameIndex = $$nextNameIndex);
		}};


		//private instance method
		XML.prototype.$$v.$$nextValue = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextValue($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

			}

			return $$this.$$XML.$$p.$$$$nextValue || ($$this.$$XML.$$p.$$$$nextValue = $$nextValue);
		}};

		Object.defineProperty(XML.prototype, '$__nodeKind', {set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, String);

			var $$this = this;
			$$this.$$XML.$_nodeKind = value;
		}});
		Object.defineProperty(XML.prototype, '$__parent', {set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			if (value)
			{
				value.$__invalidateString();
			}
			if ($$this.$$XML.$_parent && !value)
			{
				$$this.$$XML.$_parent.$__invalidateString();
			}
			$$this.$$XML.$_parent = value;
		}});
		Object.defineProperty(XML.prototype, '$__text', {set:function ($$$$text)
		{
			//set default parameter values
			var text = $es4.$$coerce($$$$text, String);

			var $$this = this;
			$$this.$$XML.$_xmlString = $$this.$$XML.$_string = text;
			$$this.$__invalidateString();
		}});

		//properties
		XML.prototype.$$v.$$isProxy = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$$isProxy; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$$isProxy = $es4.$$coerce(value, Boolean); }
		};

		XML.prototype.$$v.$_name = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_name; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_name = $es4.$$coerce(value, Object); }
		};

		XML.prototype.$$v.$_localName = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_localName; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_localName = $es4.$$coerce(value, Object); }
		};

		XML.prototype.$$v.$_parent = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_parent; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_parent = $es4.$$coerce(value, Object); }
		};

		XML.prototype.$$v.$_children = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_children; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_children = $es4.$$coerce(value, XMLList); }
		};

		XML.prototype.$$v.$_attributes = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_attributes; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_attributes = $es4.$$coerce(value, XMLList); }
		};

		XML.prototype.$$v.$_nodeKind = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_nodeKind; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_nodeKind = $es4.$$coerce(value, String); }
		};

		XML.prototype.$$v.$_cdata = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_cdata; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_cdata = $es4.$$coerce(value, Boolean); }
		};

		XML.prototype.$$v.$_string = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_string; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_string = $es4.$$coerce(value, String); }
		};

		XML.prototype.$$v.$_stringInvalidated = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_stringInvalidated; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_stringInvalidated = $es4.$$coerce(value, Boolean); }
		};

		XML.prototype.$$v.$_xmlString = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_xmlString; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_xmlString = $es4.$$coerce(value, String); }
		};

		XML.prototype.$$v.$_xmlStringInvalidated = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_xmlStringInvalidated; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_xmlStringInvalidated = $es4.$$coerce(value, Boolean); }
		};

		XML.prototype.$$v.$_xmlNode = {
		get:function () { var $$this = this.$$this; return $$this.$$XML.$$p.$_xmlNode; },
		set:function (value) { var $$this = this.$$this; $$this.$$XML.$$p.$_xmlNode = $es4.$$coerce(value, XMLNode); }
		};

	});

	//class initializer
	XML.$$cinit = (function ()
	{
		XML.$$cinit = undefined;

		//initialize properties
		$$j.$_ignoreComments = $es4.$$coerce(true, Boolean);
		$$j.$_ignoreProcessingInstructions = $es4.$$coerce(true, Boolean);
		$$j.$_ignoreWhitespace = $es4.$$coerce(true, Boolean);
		$$j.$_prettyIndent = $es4.$$coerce(2, int);
		$$j.$_prettyPrinting = $es4.$$coerce(true, Boolean);
	
	});

	//public static method
	XML.defaultSettings = (function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "defaultSettings"'));
	});

	//public static method
	XML.setSettings = (function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "setSettings"'));
	});

	//public static method
	XML.settings = (function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "settings"'));
	});
	Object.defineProperty(XML, 'ignoreComments', {get:function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		return XML.$_ignoreComments;
	}, set:function ($$$$value)
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "ignoreComments"'));
	}});
	Object.defineProperty(XML, 'ignoreProcessingInstructions', {get:function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		return XML.$_ignoreProcessingInstructions;
	}, set:function ($$$$value)
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "ignoreProcessingInstructions"'));
	}});
	Object.defineProperty(XML, 'ignoreWhitespace', {get:function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		return XML.$_ignoreWhitespace;
	}, set:function ($$$$value)
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		XML.$_ignoreWhitespace = value;
	}});
	Object.defineProperty(XML, 'prettyIndent', {get:function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		return XML.$_prettyIndent;
	}, set:function ($$$$value)
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, int);

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "prettyIndent"'));
	}});
	Object.defineProperty(XML, 'prettyPrinting', {get:function ()
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		return XML.$_prettyPrinting;
	}, set:function ($$$$value)
	{
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//set default parameter values
		var value = $es4.$$coerce($$$$value, Boolean);

		throw $es4.$$primitive(new Error('XML: attempted call to an unimplemented function "prettyPrinting"'));
	}});

	function XML()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XML) || $$this.$$XML !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XML) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XML.$$construct($$this, $$args);
		}
	}

	//construct
	XML.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XML.$$cinit !== undefined) XML.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XML', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$XML, '$$isProxy', XML.prototype.$$v.$$isProxy);
		Object.defineProperty($$this.$$XML, '$_name', XML.prototype.$$v.$_name);
		Object.defineProperty($$this.$$XML, '$_localName', XML.prototype.$$v.$_localName);
		Object.defineProperty($$this.$$XML, '$_parent', XML.prototype.$$v.$_parent);
		Object.defineProperty($$this.$$XML, '$_children', XML.prototype.$$v.$_children);
		Object.defineProperty($$this.$$XML, '$_attributes', XML.prototype.$$v.$_attributes);
		Object.defineProperty($$this.$$XML, '$_nodeKind', XML.prototype.$$v.$_nodeKind);
		Object.defineProperty($$this.$$XML, '$_cdata', XML.prototype.$$v.$_cdata);
		Object.defineProperty($$this.$$XML, '$_string', XML.prototype.$$v.$_string);
		Object.defineProperty($$this.$$XML, '$_stringInvalidated', XML.prototype.$$v.$_stringInvalidated);
		Object.defineProperty($$this.$$XML, '$_xmlString', XML.prototype.$$v.$_xmlString);
		Object.defineProperty($$this.$$XML, '$_xmlStringInvalidated', XML.prototype.$$v.$_xmlStringInvalidated);
		Object.defineProperty($$this.$$XML, '$_xmlNode', XML.prototype.$$v.$_xmlNode);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$get', XML.prototype.$$v.$$get);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$set', XML.prototype.$$v.$$set);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$call', XML.prototype.$$v.$$call);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$delete', XML.prototype.$$v.$$delete);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$nextName', XML.prototype.$$v.$$nextName);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$nextNameIndex', XML.prototype.$$v.$$nextNameIndex);

		//private instance method
		Object.defineProperty($$this.$$XML, '$$nextValue', XML.prototype.$$v.$$nextValue);

		//initialize properties
		XML.$$iinit($$this);

		//call constructor
		if (args !== undefined) XML.$$constructor.apply($$this, args);
	});

	//initializer
	XML.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$XML.$$p.$$isProxy = $es4.$$coerce(true, Boolean);
		$$this.$$XML.$$p.$_name = $es4.$$coerce(undefined, Object);
		$$this.$$XML.$$p.$_localName = $es4.$$coerce(undefined, Object);
		$$this.$$XML.$$p.$_parent = $es4.$$coerce(undefined, Object);
		$$this.$$XML.$$p.$_children = $es4.$$coerce(undefined, XMLList);
		$$this.$$XML.$$p.$_attributes = $es4.$$coerce(undefined, XMLList);
		$$this.$$XML.$$p.$_nodeKind = $es4.$$coerce(undefined, String);
		$$this.$$XML.$$p.$_cdata = $es4.$$coerce(undefined, Boolean);
		$$this.$$XML.$$p.$_string = $es4.$$coerce(undefined, String);
		$$this.$$XML.$$p.$_stringInvalidated = $es4.$$coerce(undefined, Boolean);
		$$this.$$XML.$$p.$_xmlString = $es4.$$coerce(undefined, String);
		$$this.$$XML.$$p.$_xmlStringInvalidated = $es4.$$coerce(undefined, Boolean);
		$$this.$$XML.$$p.$_xmlNode = $es4.$$coerce(undefined, XMLNode);
	
	});

	//constructor
	XML.$$constructor = (function ($$$$object)
	{
		var $$this = this;
		//set default parameter values
		var object = $es4.$$coerce($$$$object, Object);

		var nodeKind;
		if ($es4.$$is(object, XML))
		{
			nodeKind = object.nodeKind();
			if (nodeKind == 'attribute')
			{
				object = '<' + object.name() + '>' + object.toXMLString() + '</' + object.name() + '>';
			}
			else
			{
				object = object.toXMLString();
			}
		}
		else if ($es4.$$is(object, XMLNode))
		{
			$$this.$$XML.$_xmlNode = $es4.$$as(object, XMLNode);
		}
		else if (object == null)
		{
			$$this.$$XML.$_xmlNode = $es4.$$primitive(new XMLNode(XMLNodeType.TEXT_NODE, ''));
		}
		var xmlDocument;
		if ($es4.$$is(object, String))
		{
			xmlDocument = $es4.$$primitive(new XMLDocument());
			xmlDocument.ignoreWhite = XML.ignoreWhitespace;
			xmlDocument.parseXML($es4.$$as(object, String));
			if (xmlDocument.childNodes.length != 1)
			{
				throw $es4.$$primitive(new TypeError('XML: The markup in the document following the root element must be well-formed.'));
			}
			$$this.$$XML.$_xmlNode = xmlDocument.firstChild;
		}
		if (!$$this.$$XML.$_xmlNode)
		{
			throw $es4.$$primitive(new Error('unknown XML value given in XML constructor'));
		}
		if ($$this.$$XML.$_xmlNode.nodeType == XMLNodeType.ELEMENT_NODE)
		{
			$$this.$$XML.$_name = $$this.$$XML.$_xmlNode.nodeName;
			$$this.$$XML.$_localName = $$this.$$XML.$_xmlNode.localName;
		}
		else
		{
			if ($$this.$$XML.$_xmlNode.nodeType == XMLNodeType.CDATA_NODE)
			{
				$$this.$$XML.$_cdata = true;
			}
			if ($es4.$$is(object, XMLNode))
			{
				$$this.$$XML.$_string = $$this.$$XML.$_xmlString = ($es4.$$as(object, XMLNode)).toString(true);
			}
			else
			{
				$$this.$$XML.$_string = $$this.$$XML.$_xmlString = object.toString();
			}
			nodeKind = 'text';
		}
		$$this.$$XML.$_nodeKind = (nodeKind) ? nodeKind : 'element';
		if ($$this.$$XML.$_nodeKind != 'text')
		{
			$$this.$__invalidateString();
		}
	});

	return $es4.$$class(XML, null, 'XML');
})();
//XML


//XMLList
$es4.$$package('').XMLList = (function ()
{
	//imports
	var XMLDocument;

	//class pre initializer
	XMLList.$$sinit = (function ()
	{
		XMLList.$$sinit = undefined;

		//initialize imports
		XMLDocument = $es4.$$['flash.xml'].XMLDocument;

		//set prototype and constructor
		XMLList.prototype = Object.create(Object.prototype);
		Object.defineProperty(XMLList.prototype, "constructor", { value: XMLList, enumerable: false });

		//hold private values
		Object.defineProperty(XMLList.prototype, '$$v', {value:{}});

		//public instance method
		Object.defineProperty(XMLList.prototype, 'attribute', {
		get:function ()
		{
			var $$this = this;

			function attribute($$$$attributeName)
			{
				//set default parameter values
				var attributeName = $$$$attributeName;

				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i0 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i0], XML);

					if (xml.nodeKind() != 'element')
					{
						continue;
					}
					xmlList.$__merge(xml.attribute(attributeName));
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$attribute || ($$this.$$XMLList.$$attribute = attribute);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'attributes', {
		get:function ()
		{
			var $$this = this;

			function attributes()
			{
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i1 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i1], XML);

					if (xml.nodeKind() != 'element')
					{
						continue;
					}
					xmlList.$__merge(xml.attributes());
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$attributes || ($$this.$$XMLList.$$attributes = attributes);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'child', {
		get:function ()
		{
			var $$this = this;

			function child($$$$propertyName)
			{
				//set default parameter values
				var propertyName = $es4.$$coerce($$$$propertyName, Object);

				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i2 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i2], XML);

					if (xml.nodeKind() != 'element')
					{
						continue;
					}
					xmlList.$__merge(xml.child(propertyName));
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$child || ($$this.$$XMLList.$$child = child);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'children', {
		get:function ()
		{
			var $$this = this;

			function children()
			{
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i3 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i3], XML);

					if (xml.nodeKind() != 'element')
					{
						continue;
					}
					xmlList.$__merge(xml.children());
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$children || ($$this.$$XMLList.$$children = children);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'contains', {
		get:function ()
		{
			var $$this = this;

			function contains($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, XML);

				var valueString = value.toXMLString();
				for (var $$i4 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i4], XML);

					if (xml.toXMLString() == valueString)
					{
						return true;
					}
				}
				return false;
			}

			return $$this.$$XMLList.$$contains || ($$this.$$XMLList.$$contains = contains);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'copy', {
		get:function ()
		{
			var $$this = this;

			function copy()
			{
				return $es4.$$coerce($es4.$$primitive(new XMLList($$this)), XMLList);
			}

			return $$this.$$XMLList.$$copy || ($$this.$$XMLList.$$copy = copy);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'descendants', {
		get:function ()
		{
			var $$this = this;

			function descendants($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, Object);

				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				for (var $$i5 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i5], XML);

					if (xml.nodeKind() != 'element')
					{
						if (name == null)
						{
							xmlList[xmlList.length()] = xml;
						}
						continue;
					}
					if (name == null || name.toString() == xml.name())
					{
						xmlList[xmlList.length()] = xml;
					}
					xmlList.$__merge(xml.descendants(name));
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$descendants || ($$this.$$XMLList.$$descendants = descendants);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'elements', {
		get:function ()
		{
			var $$this = this;

			function elements($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, Object);

				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i6 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i6], XML);

					if (xml.nodeKind() == 'element')
					{
						xmlList[xmlList.length()] = xml;
					}
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$elements || ($$this.$$XMLList.$$elements = elements);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'length', {
		get:function ()
		{
			var $$this = this;

			function length()
			{
				return $es4.$$coerce($$this.$$XMLList.$_nodes.length, int);
			}

			return $$this.$$XMLList.$$length || ($$this.$$XMLList.$$length = length);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'parent', {
		get:function ()
		{
			var $$this = this;

			function parent()
			{
				return $$this.$$XMLList.$_parent;
			}

			return $$this.$$XMLList.$$parent || ($$this.$$XMLList.$$parent = parent);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'text', {
		get:function ()
		{
			var $$this = this;

			function text()
			{
				var xmlList = $es4.$$coerce($es4.$$primitive(new XMLList()), XMLList);
				xmlList.$__parent = $$this.$$XMLList.$_parent;
				for (var $$i7 in $$this.$$XMLList.$_nodes)
				{
					var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i7], XML);

					if (xml.nodeKind() == 'text')
					{
						xmlList[xmlList.length()] = xml;
					}
				}
				return xmlList;
			}

			return $$this.$$XMLList.$$text || ($$this.$$XMLList.$$text = text);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'hasOwnProperty', {
		get:function ()
		{
			var $$this = this;

			function hasOwnProperty($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				var index = parseInt(name);
				if (isNaN(index))
				{
					return false;
				}
				return $es4.$$coerce(index >= 0 && index < $$this.$$XMLList.$_nodes.length, Boolean);
			}

			return $$this.$$XMLList.$$hasOwnProperty || ($$this.$$XMLList.$$hasOwnProperty = hasOwnProperty);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'propertyIsEnumerable', {
		get:function ()
		{
			var $$this = this;

			function propertyIsEnumerable($$$$name)
			{
				//set default parameter values
				var name = $es4.$$coerce($$$$name, String);

				var index = parseInt(name);
				if (isNaN(index))
				{
					return false;
				}
				return $es4.$$coerce(index >= 0 && index < $$this.$$XMLList.$_nodes.length, Boolean);
			}

			return $$this.$$XMLList.$$propertyIsEnumerable || ($$this.$$XMLList.$$propertyIsEnumerable = propertyIsEnumerable);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'toString', {
		get:function ()
		{
			var $$this = this;

			function toString()
			{
				var string = '';
				for (var $$i8 in $$this.$$XMLList.$_nodes)
				{
					var childXML = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i8], XML);

					string += childXML.toString();
				}
				return string;
			}

			return $$this.$$XMLList.$$toString || ($$this.$$XMLList.$$toString = toString);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'toXMLString', {
		get:function ()
		{
			var $$this = this;

			function toXMLString()
			{
				var xmlString = '';
				for (var $$i9 in $$this.$$XMLList.$_nodes)
				{
					var childXML = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i9], XML);

					xmlString += childXML.toXMLString();
				}
				return xmlString;
			}

			return $$this.$$XMLList.$$toXMLString || ($$this.$$XMLList.$$toXMLString = toXMLString);
		}});


		//internal instance method
		Object.defineProperty(XMLList.prototype, '$__insertChildAfter', {
		get:function ()
		{
			var $$this = this;

			function $__insertChildAfter($$$$child1, $$$$child2)
			{
				//set default parameter values
				var child1 = $es4.$$coerce($$$$child1, Object);
				var child2 = $es4.$$coerce($$$$child2, Object);

				if (!$$this.$$XMLList.$_parent)
				{
					throw $es4.$$primitive(new Error('XMLList parent must be defined'));
				}
				var index = 0;
				if ($es4.$$is(child2, XMLList))
				{
					if (!child1)
					{
						index = 0;
					}
					else
					{
						if (child1.parent() != $$this.$$XMLList.$_parent)
						{
							return $$this.$$XMLList.$_parent;
						}
						index = $es4.$$coerce(child1.childIndex(), int);
						if (index == -1)
						{
							return $$this.$$XMLList.$_parent;
						}
						index++;
					}
					var length = $es4.$$coerce(child2.length(), int);
					for (var i = 0; i < length; i++)
					{
						$$this.$$XMLList.$_nodes.splice(i + index, 0, child2[i]);
					}
					$$this.$$XMLList.$_parent.$__invalidateString();
					return $$this.$$XMLList.$_parent;
				}
				if (!($es4.$$is(child2, XML)) || child2.parent() != $$this.$$XMLList.$_parent)
				{
					child2 = $es4.$$primitive(new XML(child2));
					child2.$__parent = $$this.$$XMLList.$_parent;
				}
				if (!child1)
				{
					index = 0;
				}
				else
				{
					if (child1.parent() != $$this.$$XMLList.$_parent)
					{
						return $$this.$$XMLList.$_parent;
					}
					index = $es4.$$coerce(child1.childIndex(), int);
					if (index == -1)
					{
						return $$this.$$XMLList.$_parent;
					}
					index++;
				}
				$$this.$$XMLList.$_nodes.splice(index, 0, child2);
				$$this.$$XMLList.$_parent.$__invalidateString();
				return $$this.$$XMLList.$_parent;
			}

			return $$this.$$XMLList.$$$__insertChildAfter || ($$this.$$XMLList.$$$__insertChildAfter = $__insertChildAfter);
		}});


		//internal instance method
		Object.defineProperty(XMLList.prototype, '$__insertChildBefore', {
		get:function ()
		{
			var $$this = this;

			function $__insertChildBefore($$$$child1, $$$$child2)
			{
				//set default parameter values
				var child1 = $es4.$$coerce($$$$child1, Object);
				var child2 = $es4.$$coerce($$$$child2, Object);

				if (!$$this.$$XMLList.$_parent)
				{
					throw $es4.$$primitive(new Error('XMLList parent must be defined'));
				}
				var index = 0;
				if ($es4.$$is(child2, XMLList))
				{
					if (!child1)
					{
						index = 0;
					}
					else
					{
						if (child1.parent() != $$this.$$XMLList.$_parent)
						{
							return $$this.$$XMLList.$_parent;
						}
						index = $es4.$$coerce(child1.childIndex(), int);
						if (index == -1)
						{
							return $$this.$$XMLList.$_parent;
						}
						if (index != 0)
						{
							index--;
						}
					}
					var length = $es4.$$coerce(child2.length(), int);
					for (var i = 0; i < length; i++)
					{
						$$this.$$XMLList.$_nodes.splice(i + index, 0, child2[i]);
					}
					$$this.$$XMLList.$_parent.$__invalidateString();
					return $$this.$$XMLList.$_parent;
				}
				if (!($es4.$$is(child2, XML)) || child2.parent() != $$this.$$XMLList.$_parent)
				{
					child2 = $es4.$$primitive(new XML(child2));
					child2.$__parent = $$this.$$XMLList.$_parent;
				}
				if (!child1)
				{
					index = 0;
				}
				else
				{
					if (child1.parent() != $$this.$$XMLList.$_parent)
					{
						return $$this.$$XMLList.$_parent;
					}
					index = $es4.$$coerce(child1.childIndex(), int);
					if (index == -1)
					{
						return $$this.$$XMLList.$_parent;
					}
					if (index != 0)
					{
						index--;
					}
				}
				$$this.$$XMLList.$_nodes.splice(index, 0, child2);
				$$this.$$XMLList.$_parent.$__invalidateString();
				return $$this.$$XMLList.$_parent;
			}

			return $$this.$$XMLList.$$$__insertChildBefore || ($$this.$$XMLList.$$$__insertChildBefore = $__insertChildBefore);
		}});


		//internal instance method
		Object.defineProperty(XMLList.prototype, '$__prependChild', {
		get:function ()
		{
			var $$this = this;

			function $__prependChild($$$$value)
			{
				//set default parameter values
				var value = $es4.$$coerce($$$$value, Object);

				return $es4.$$coerce($$this.$__insertChildAfter(null, value), XML);
			}

			return $$this.$$XMLList.$$$__prependChild || ($$this.$$XMLList.$$$__prependChild = $__prependChild);
		}});


		//internal instance method
		Object.defineProperty(XMLList.prototype, '$__replace', {
		get:function ()
		{
			var $$this = this;

			function $__replace($$$$childList, $$$$value)
			{
				//set default parameter values
				var childList = $es4.$$coerce($$$$childList, XMLList);
				var value = $es4.$$coerce($$$$value, XML);

				for (var $$i10 in childList)
				{
					var xml = $es4.$$coerce(childList[$$i10], XML);

					$$this.$$XMLList.$$set(xml.childIndex(), value);
				}
				return $es4.$$as($$this.$$XMLList.$_parent, XML);
			}

			return $$this.$$XMLList.$$$__replace || ($$this.$$XMLList.$$$__replace = $__replace);
		}});


		//internal instance method
		Object.defineProperty(XMLList.prototype, '$__merge', {
		get:function ()
		{
			var $$this = this;

			function $__merge($$$$xmlList)
			{
				//set default parameter values
				var xmlList = $es4.$$coerce($$$$xmlList, XMLList);

				for (var $$i11 in xmlList)
				{
					var xml = $es4.$$coerce(xmlList[$$i11], XML);

					$$this.$$XMLList.$_nodes.push(xml);
				}
			}

			return $$this.$$XMLList.$$$__merge || ($$this.$$XMLList.$$$__merge = $__merge);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'comments', {
		get:function ()
		{
			var $$this = this;

			function comments()
			{
				throw $es4.$$primitive(new Error('XMLList: attempted call to an unimplemented function "comments"'));
			}

			return $$this.$$XMLList.$$comments || ($$this.$$XMLList.$$comments = comments);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'hasComplexContent', {
		get:function ()
		{
			var $$this = this;

			function hasComplexContent()
			{
				throw $es4.$$primitive(new Error('XMLList: attempted call to an unimplemented function "hasComplexContent"'));
			}

			return $$this.$$XMLList.$$hasComplexContent || ($$this.$$XMLList.$$hasComplexContent = hasComplexContent);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'hasSimpleContent', {
		get:function ()
		{
			var $$this = this;

			function hasSimpleContent()
			{
				throw $es4.$$primitive(new Error('XMLList: attempted call to an unimplemented function "hasSimpleContent"'));
			}

			return $$this.$$XMLList.$$hasSimpleContent || ($$this.$$XMLList.$$hasSimpleContent = hasSimpleContent);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'normalize', {
		get:function ()
		{
			var $$this = this;

			function normalize()
			{
				throw $es4.$$primitive(new Error('XMLList: attempted call to an unimplemented function "normalize"'));
			}

			return $$this.$$XMLList.$$normalize || ($$this.$$XMLList.$$normalize = normalize);
		}});


		//public instance method
		Object.defineProperty(XMLList.prototype, 'processingInstructions', {
		get:function ()
		{
			var $$this = this;

			function processingInstructions($$$$name)
			{
				//set default parameter values
				var name = (0 > arguments.length - 1) ? "*" : $es4.$$coerce($$$$name, String);

				throw $es4.$$primitive(new Error('XMLList: attempted call to an unimplemented function "processingInstructions"'));
			}

			return $$this.$$XMLList.$$processingInstructions || ($$this.$$XMLList.$$processingInstructions = processingInstructions);
		}});


		//private instance method
		XMLList.prototype.$$v.$$get = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$get($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				if (key == '$attributes')
				{
					return $$this.attributes();
				}
				var index = parseInt(key);
				if (isNaN(index))
				{
					if ($$this.$$XMLList.$_parent && $$this.$$XMLList.$_parent.attributes() == $$this)
					{
						var attributes = $es4.$$coerce($$this.$$XMLList.$_parent.attribute(key), XMLList);
						return (attributes.length()) ? attributes[0] : $es4.$$primitive(new XMLList());
					}
					else
					{
						return $$this.child(key);
					}
				}
				return $$this.$$XMLList.$_nodes[index];
			}

			return $$this.$$XMLList.$$p.$$$$get || ($$this.$$XMLList.$$p.$$$$get = $$get);
		}};


		//private instance method
		XMLList.prototype.$$v.$$set = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$set($$$$key, $$$$value)
			{
				//set default parameter values
				var key = $$$$key;
				var value = $$$$value;

				var index = parseInt(key);
				var xml = null;
				if (isNaN(index))
				{
					if ($$this.$$XMLList.$_parent && $$this.$$XMLList.$_parent.attributes() == $$this)
					{
						var attributes = $es4.$$coerce($$this.$$XMLList.$_parent.attribute(key), XMLList);
						if (attributes.length())
						{
							attributes[0] = value;
						}
						else
						{
							attributes = $es4.$$coerce($$this.$$XMLList.$_parent.attributes(), XMLList);
							xml = $es4.$$coerce($es4.$$primitive(new XML('<' + key + '>' + value + '</' + key + '>')), XML);
							xml.$__nodeKind = 'attribute';
							xml.$__parent = $$this.$$XMLList.$_parent;
							attributes[attributes.length()] = xml;
						}
					}
					else if ($$this.$$XMLList.$_parent)
					{
						var children = $es4.$$coerce($$this.$$XMLList.$_parent.child(key), XMLList);
						if (children.length())
						{
							children[0] = value;
						}
						else
						{
							children = $es4.$$coerce($$this.$$XMLList.$_parent.children(), XMLList);
							children[children.length()] = value;
						}
					}
					return value;
				}
				if (index < 0)
				{
					throw $es4.$$primitive(new Error('XMLList: index out of range: ' + index));
				}
				if (index > $$this.$$XMLList.$_nodes.length)
				{
					index = $$this.$$XMLList.$_nodes.length;
				}
				if ($$this.$$XMLList.$_nodes[index])
				{
					if ($$this.$$XMLList.$_nodes[index].nodeKind() == 'attribute')
					{
						$$this.$$XMLList.$_nodes[index].children()[0].$__text = (value) ? value.toString() : '';
						return value;
					}
					else if ($$this.$$XMLList.$_nodes[index].nodeKind() == 'text')
					{
						return value;
					}
					else if ($$this.$$XMLList.$_parent && $$this.$$XMLList.$_parent.children() == $$this)
					{
						if ($$this.$$XMLList.$_nodes[index].children().length())
						{
							$$this.$$XMLList.$_nodes[index].$__nodes.splice(0);
						}
						$$this.$$XMLList.$_nodes[index].appendChild(value);
						return;
					}
				}
				if ($es4.$$is(value, XMLList))
				{
					for (var $$i12 in value)
					{
						xml = $es4.$$coerce(value[$$i12], XML);

						$$this.$$XMLList.$$set(index++, xml);
					}
					return;
				}
				else if (!($es4.$$is(value, XML)))
				{
					value = $es4.$$primitive(new XML(value));
					value.$__parent = $$this.$$XMLList.$_parent;
				}
				else if (!value.parent())
				{
					value.$__parent = $$this.$$XMLList.$_parent;
				}
				else if (value.parent() != $$this.$$XMLList.$_parent && $$this.$$XMLList.$_parent)
				{
					value = $es4.$$primitive(new XML(value));
					value.$__parent = $$this.$$XMLList.$_parent;
				}
				else if ($$this.$$XMLList.$_parent)
				{
					$$this.$$XMLList.$_parent.$__invalidateString();
				}
				return $$this.$$XMLList.$_nodes[index] = value;
			}

			return $$this.$$XMLList.$$p.$$$$set || ($$this.$$XMLList.$$p.$$$$set = $$set);
		}};


		//private instance method
		XMLList.prototype.$$v.$$append = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$append($$$$index, $$$$child2)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);
				var child2 = $es4.$$coerce($$$$child2, Object);

				index++;
				if ($es4.$$is(child2, XMLList))
				{
					var length = $es4.$$coerce(child2.length(), int);
					for (var i = 0; i < length; i++)
					{
						$$this.$$XMLList.$_nodes.splice(i + index, 0, child2[i]);
					}
					if ($$this.$$XMLList.$_parent)
					{
						$$this.$$XMLList.$_parent.$__invalidateString();
					}
					return child2;
				}
				if (!($es4.$$is(child2, XML)) || child2.parent() != $$this.$$XMLList.$_parent)
				{
					child2 = $es4.$$primitive(new XML(child2));
					child2.$__parent = $$this.$$XMLList.$_parent;
				}
				$$this.$$XMLList.$_nodes.splice(index, 0, child2);
				if ($$this.$$XMLList.$_parent)
				{
					$$this.$$XMLList.$_parent.$__invalidateString();
				}
				return child2;
			}

			return $$this.$$XMLList.$$p.$$$$append || ($$this.$$XMLList.$$p.$$$$append = $$append);
		}};


		//private instance method
		XMLList.prototype.$$v.$call = {
		get:function ()
		{
			var $$this = this.$$this;

			function $call($$$$name, $$$$args)
			{
				//set default parameter values
				var name = $$$$name;
				var args = $es4.$$coerce($$$$args, Array);

				throw $es4.$$primitive(new Error('XMLList: call not supported'));
			}

			return $$this.$$XMLList.$$p.$$$call || ($$this.$$XMLList.$$p.$$$call = $call);
		}};


		//private instance method
		XMLList.prototype.$$v.$$delete = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$delete($$$$key)
			{
				//set default parameter values
				var key = $$$$key;

				var index = parseInt(key);
				if (isNaN(index))
				{
					if ($$this.$$XMLList.$_parent && $$this.$$XMLList.$_parent.attributes() == $$this)
					{
						var attributes = $es4.$$coerce($$this.$$XMLList.$_parent.attribute(key), XMLList);
						if (attributes.length())
						{
							return $es4.$$coerce(delete attributes[0], Boolean);
						}
					}
					return true;
				}
				if (index < 0 || index >= $$this.$$XMLList.$_nodes.length)
				{
					throw $es4.$$primitive(new Error('XMLList: index out of range: ' + index));
				}
				var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[index], XML);
				if (xml.parent())
				{
					if (xml.nodeKind() == 'element' && $$this != xml.parent().children())
					{
						delete xml.parent().children()[xml.childIndex()];
					}
					else if (xml.nodeKind() == 'attribute' && $$this != xml.parent().attributes())
					{
						delete xml.parent().attributes()[xml.childIndex()];
					}
				}
				xml.$__parent = null;
				$$this.$$XMLList.$_nodes.splice(index, 1);
				if ($$this.$$XMLList.$_parent)
				{
					$$this.$$XMLList.$_parent.$__invalidateString();
				}
				return true;
			}

			return $$this.$$XMLList.$$p.$$$$delete || ($$this.$$XMLList.$$p.$$$$delete = $$delete);
		}};


		//private instance method
		XMLList.prototype.$$v.$$nextName = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextName($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return index.toString();
			}

			return $$this.$$XMLList.$$p.$$$$nextName || ($$this.$$XMLList.$$p.$$$$nextName = $$nextName);
		}};


		//private instance method
		XMLList.prototype.$$v.$$nextNameIndex = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextNameIndex($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return (index < $$this.$$XMLList.$_nodes.length) ? index + 1 : 0;
			}

			return $$this.$$XMLList.$$p.$$$$nextNameIndex || ($$this.$$XMLList.$$p.$$$$nextNameIndex = $$nextNameIndex);
		}};


		//private instance method
		XMLList.prototype.$$v.$$nextValue = {
		get:function ()
		{
			var $$this = this.$$this;

			function $$nextValue($$$$index)
			{
				//set default parameter values
				var index = $es4.$$coerce($$$$index, int);

				return $$this.$$XMLList.$_nodes[index - 1];
			}

			return $$this.$$XMLList.$$p.$$$$nextValue || ($$this.$$XMLList.$$p.$$$$nextValue = $$nextValue);
		}};

		Object.defineProperty(XMLList.prototype, '$__nodes', {get:function ()
		{
			var $$this = this;
			return $$this.$$XMLList.$_nodes;
		}});
		Object.defineProperty(XMLList.prototype, '$__parent', {set:function ($$$$value)
		{
			//set default parameter values
			var value = $es4.$$coerce($$$$value, Object);

			var $$this = this;
			$$this.$$XMLList.$_parent = value;
			for (var $$i13 in $$this.$$XMLList.$_nodes)
			{
				var xml = $es4.$$coerce($$this.$$XMLList.$_nodes[$$i13], XML);

				xml.$__parent = value;
			}
		}});

		//properties
		XMLList.prototype.$$v.$$isProxy = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLList.$$p.$$isProxy; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLList.$$p.$$isProxy = $es4.$$coerce(value, Boolean); }
		};

		XMLList.prototype.$$v.$_parent = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLList.$$p.$_parent; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLList.$$p.$_parent = $es4.$$coerce(value, Object); }
		};

		XMLList.prototype.$$v.$_nodes = {
		get:function () { var $$this = this.$$this; return $$this.$$XMLList.$$p.$_nodes; },
		set:function (value) { var $$this = this.$$this; $$this.$$XMLList.$$p.$_nodes = $es4.$$coerce(value, Array); }
		};

	});

	//class initializer
	XMLList.$$cinit = (function ()
	{
		XMLList.$$cinit = undefined;
	});

	function XMLList()
	{
		var $$this;

		//save scope
		if (arguments.length !== 0 && arguments[0] === $es4.$$MANUAL_CONSTRUCT && arguments[1] !== undefined) $$this = arguments[1];
		else
		{
			var $$this = this;

			if (!($$this instanceof XMLList) || $$this.$$XMLList !== undefined) return (arguments.length !== 0) ? $es4.$$as(arguments[0], XMLList) : $es4.$$throwArgumentError();
		}

		//call construct if no arguments, or argument zero does not equal manual construct
		if (arguments.length === 0 || arguments[0] !== $es4.$$MANUAL_CONSTRUCT)
		{
			for (var $$i = 0, $$length = arguments.length, $$args = new Array($$length); $$i < $$length; $$i += 1) $$args[$$i] = arguments[$$i];

			XMLList.$$construct($$this, $$args);
		}
	}

	//construct
	XMLList.$$construct = (function ($$this, args)
	{
		//initialize function if not initialized
		if (XMLList.$$cinit !== undefined) XMLList.$$cinit();

		//hold property values, and methods
		Object.defineProperty($$this, '$$XMLList', {value:{$$this:$$this, $$p:{}, $$ns:{}}});

		Object.defineProperty($$this.$$XMLList, '$$isProxy', XMLList.prototype.$$v.$$isProxy);
		Object.defineProperty($$this.$$XMLList, '$_parent', XMLList.prototype.$$v.$_parent);
		Object.defineProperty($$this.$$XMLList, '$_nodes', XMLList.prototype.$$v.$_nodes);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$get', XMLList.prototype.$$v.$$get);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$set', XMLList.prototype.$$v.$$set);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$append', XMLList.prototype.$$v.$$append);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$call', XMLList.prototype.$$v.$call);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$delete', XMLList.prototype.$$v.$$delete);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$nextName', XMLList.prototype.$$v.$$nextName);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$nextNameIndex', XMLList.prototype.$$v.$$nextNameIndex);

		//private instance method
		Object.defineProperty($$this.$$XMLList, '$$nextValue', XMLList.prototype.$$v.$$nextValue);

		//initialize properties
		XMLList.$$iinit($$this);

		//call constructor
		if (args !== undefined) XMLList.$$constructor.apply($$this, args);
	});

	//initializer
	XMLList.$$iinit = (function ($$this)
	{
		//initialize properties
		$$this.$$XMLList.$$p.$$isProxy = $es4.$$coerce(true, Boolean);
		$$this.$$XMLList.$$p.$_parent = $es4.$$coerce(undefined, Object);
		$$this.$$XMLList.$$p.$_nodes = $es4.$$coerce([], Array);
	
	});

	//constructor
	XMLList.$$constructor = (function ($$$$object)
	{
		var $$this = this;
		//set default parameter values
		var object = (0 > arguments.length - 1) ? null : $es4.$$coerce($$$$object, Object);

		var xml;
		var i;
		var length;
		if (!object)
		{
		}
		else if ($es4.$$is(object, XMLList))
		{
			for (xml in object)
			{
				$$this.$$XMLList.$_nodes[$$this.$$XMLList.$_nodes.length] = xml;
			}
		}
		else if ($es4.$$is(object, XML))
		{
			$$this.$$XMLList.$_nodes[0] = object;
		}
		else if ($es4.$$is(object, Array))
		{
			length = object.length;
			for (i = 0; i < length; i++)
			{
				$$this.$$XMLList.$_nodes[i] = $es4.$$primitive(new XML(object[i]));
			}
		}
		else if ($es4.$$is(object, String))
		{
			var xmlDocument = $es4.$$primitive(new XMLDocument());
			xmlDocument.ignoreWhite = XML.ignoreWhitespace;
			xmlDocument.parseXML('<root>' + ($es4.$$as(object, String)) + '</root>');
			var childNodes = xmlDocument.firstChild.childNodes;
			length = childNodes.length;
			for (i = 0; i < length; i++)
			{
				$$this.$$XMLList.$_nodes[i] = $es4.$$primitive(new XML(childNodes[i]));
			}
		}
		else
		{
			throw $es4.$$primitive(new Error('unknown XMLList value given in XMLList constructor'));
		}
	});

	return $es4.$$class(XMLList, null, 'XMLList');
})();
//XMLList


//flash.accessibility.ISearchableText
$es4.$$package('flash.accessibility').ISearchableText = (function ()
{
	function ISearchableText()
	{
		//handle cast
		return $es4.$$as(arguments[0], ISearchableText);
	}
	return $es4.$$interface(ISearchableText, null, 'flash.accessibility::ISearchableText');
})();
//flash.accessibility.ISearchableText


//flash.accessibility.ISimpleTextSelection
$es4.$$package('flash.accessibility').ISimpleTextSelection = (function ()
{
	function ISimpleTextSelection()
	{
		//handle cast
		return $es4.$$as(arguments[0], ISimpleTextSelection);
	}
	return $es4.$$interface(ISimpleTextSelection, null, 'flash.accessibility::ISimpleTextSelection');
})();
//flash.accessibility.ISimpleTextSelection


//flash.display.IBitmapDrawable
$es4.$$package('flash.display').IBitmapDrawable = (function ()
{
	function IBitmapDrawable()
	{
		//handle cast
		return $es4.$$as(arguments[0], IBitmapDrawable);
	}
	return $es4.$$interface(IBitmapDrawable, null, 'flash.display::IBitmapDrawable');
})();
//flash.display.IBitmapDrawable


//flash.display.IGraphicsData
$es4.$$package('flash.display').IGraphicsData = (function ()
{
	function IGraphicsData()
	{
		//handle cast
		return $es4.$$as(arguments[0], IGraphicsData);
	}
	return $es4.$$interface(IGraphicsData, null, 'flash.display::IGraphicsData');
})();
//flash.display.IGraphicsData


//flash.display.IGraphicsFill
$es4.$$package('flash.display').IGraphicsFill = (function ()
{
	function IGraphicsFill()
	{
		//handle cast
		return $es4.$$as(arguments[0], IGraphicsFill);
	}
	return $es4.$$interface(IGraphicsFill, null, 'flash.display::IGraphicsFill');
})();
//flash.display.IGraphicsFill


//flash.display.IGraphicsPath
$es4.$$package('flash.display').IGraphicsPath = (function ()
{
	function IGraphicsPath()
	{
		//handle cast
		return $es4.$$as(arguments[0], IGraphicsPath);
	}
	return $es4.$$interface(IGraphicsPath, null, 'flash.display::IGraphicsPath');
})();
//flash.display.IGraphicsPath


//flash.display.IGraphicsStroke
$es4.$$package('flash.display').IGraphicsStroke = (function ()
{
	function IGraphicsStroke()
	{
		//handle cast
		return $es4.$$as(arguments[0], IGraphicsStroke);
	}
	return $es4.$$interface(IGraphicsStroke, null, 'flash.display::IGraphicsStroke');
})();
//flash.display.IGraphicsStroke


//flash.events.IEventDispatcher
$es4.$$package('flash.events').IEventDispatcher = (function ()
{
	function IEventDispatcher()
	{
		//handle cast
		return $es4.$$as(arguments[0], IEventDispatcher);
	}
	return $es4.$$interface(IEventDispatcher, null, 'flash.events::IEventDispatcher');
})();
//flash.events.IEventDispatcher


//flash.net.IDynamicPropertyWriter
$es4.$$package('flash.net').IDynamicPropertyWriter = (function ()
{
	function IDynamicPropertyWriter()
	{
		//handle cast
		return $es4.$$as(arguments[0], IDynamicPropertyWriter);
	}
	return $es4.$$interface(IDynamicPropertyWriter, null, 'flash.net::IDynamicPropertyWriter');
})();
//flash.net.IDynamicPropertyWriter


//flash.text.ime.IIMEClient
$es4.$$package('flash.text.ime').IIMEClient = (function ()
{
	function IIMEClient()
	{
		//handle cast
		return $es4.$$as(arguments[0], IIMEClient);
	}
	return $es4.$$interface(IIMEClient, null, 'flash.text.ime::IIMEClient');
})();
//flash.text.ime.IIMEClient


//flash.utils.IDataInput
$es4.$$package('flash.utils').IDataInput = (function ()
{
	function IDataInput()
	{
		//handle cast
		return $es4.$$as(arguments[0], IDataInput);
	}
	return $es4.$$interface(IDataInput, null, 'flash.utils::IDataInput');
})();
//flash.utils.IDataInput


//flash.utils.IDataOutput
$es4.$$package('flash.utils').IDataOutput = (function ()
{
	function IDataOutput()
	{
		//handle cast
		return $es4.$$as(arguments[0], IDataOutput);
	}
	return $es4.$$interface(IDataOutput, null, 'flash.utils::IDataOutput');
})();
//flash.utils.IDataOutput


//flash.debugger.enterDebugger
$es4.$$package('flash.debugger').enterDebugger = (function ()
{
	var $$this = enterDebugger, $$thisp = enterDebugger;
	//function initializer
	enterDebugger.$$cinit = (function ()
	{
		enterDebugger.$$cinit = undefined;
	});

	function enterDebugger()
	{
		//initialize function if not initialized
		if (enterDebugger.$$cinit !== undefined) enterDebugger.$$cinit();


		debugger;
	}

	return $es4.$$function (enterDebugger);
})();
//flash.debugger.enterDebugger


//flash.media.scanHardware
$es4.$$package('flash.media').scanHardware = function () { throw new Error('Use of unimplemented function: scanHardware'); }
//flash.media.scanHardware


//flash.net.getClassByAlias
$es4.$$package('flash.net').getClassByAlias = function () { throw new Error('Use of unimplemented function: getClassByAlias'); }
//flash.net.getClassByAlias


//flash.net.navigateToURL
$es4.$$package('flash.net').navigateToURL = (function ()
{
	var $$this = navigateToURL, $$thisp = navigateToURL;
	//imports
	var URLRequest;

	//function initializer
	navigateToURL.$$cinit = (function ()
	{
		navigateToURL.$$cinit = undefined;

		//initialize imports
		URLRequest = $es4.$$['flash.net'].URLRequest;
	});

	function navigateToURL($$$$request, $$$$name)
	{
		//initialize function if not initialized
		if (navigateToURL.$$cinit !== undefined) navigateToURL.$$cinit();

		//set default parameter values
		var request = $es4.$$coerce($$$$request, URLRequest);
		var name = (1 > arguments.length - 1) ? null : $es4.$$coerce($$$$name, String);

		window.open(request.url, name);
}

	return $es4.$$function (navigateToURL);
})();
//flash.net.navigateToURL


//flash.net.registerClassAlias
$es4.$$package('flash.net').registerClassAlias = function () { throw new Error('Use of unimplemented function: registerClassAlias'); }
//flash.net.registerClassAlias


//flash.net.sendToURL
$es4.$$package('flash.net').sendToURL = function () { throw new Error('Use of unimplemented function: sendToURL'); }
//flash.net.sendToURL


//flash.profiler.profile
$es4.$$package('flash.profiler').profile = function () { throw new Error('Use of unimplemented function: profile'); }
//flash.profiler.profile


//flash.profiler.showRedrawRegions
$es4.$$package('flash.profiler').showRedrawRegions = function () { throw new Error('Use of unimplemented function: showRedrawRegions'); }
//flash.profiler.showRedrawRegions


//flash.sampler.clearSamples
$es4.$$package('flash.sampler').clearSamples = function () { throw new Error('Use of unimplemented function: clearSamples'); }
//flash.sampler.clearSamples


//flash.sampler.getGetterInvocationCount
$es4.$$package('flash.sampler').getGetterInvocationCount = function () { throw new Error('Use of unimplemented function: getGetterInvocationCount'); }
//flash.sampler.getGetterInvocationCount


//flash.sampler.getInvocationCount
$es4.$$package('flash.sampler').getInvocationCount = function () { throw new Error('Use of unimplemented function: getInvocationCount'); }
//flash.sampler.getInvocationCount


//flash.sampler.getLexicalScopes
$es4.$$package('flash.sampler').getLexicalScopes = function () { throw new Error('Use of unimplemented function: getLexicalScopes'); }
//flash.sampler.getLexicalScopes


//flash.sampler.getMasterString
$es4.$$package('flash.sampler').getMasterString = function () { throw new Error('Use of unimplemented function: getMasterString'); }
//flash.sampler.getMasterString


//flash.sampler.getMemberNames
$es4.$$package('flash.sampler').getMemberNames = function () { throw new Error('Use of unimplemented function: getMemberNames'); }
//flash.sampler.getMemberNames


//flash.sampler.getSampleCount
$es4.$$package('flash.sampler').getSampleCount = function () { throw new Error('Use of unimplemented function: getSampleCount'); }
//flash.sampler.getSampleCount


//flash.sampler.getSamples
$es4.$$package('flash.sampler').getSamples = function () { throw new Error('Use of unimplemented function: getSamples'); }
//flash.sampler.getSamples


//flash.sampler.getSavedThis
$es4.$$package('flash.sampler').getSavedThis = function () { throw new Error('Use of unimplemented function: getSavedThis'); }
//flash.sampler.getSavedThis


//flash.sampler.getSetterInvocationCount
$es4.$$package('flash.sampler').getSetterInvocationCount = function () { throw new Error('Use of unimplemented function: getSetterInvocationCount'); }
//flash.sampler.getSetterInvocationCount


//flash.sampler.getSize
$es4.$$package('flash.sampler').getSize = function () { throw new Error('Use of unimplemented function: getSize'); }
//flash.sampler.getSize


//flash.sampler.isGetterSetter
$es4.$$package('flash.sampler').isGetterSetter = function () { throw new Error('Use of unimplemented function: isGetterSetter'); }
//flash.sampler.isGetterSetter


//flash.sampler.pauseSampling
$es4.$$package('flash.sampler').pauseSampling = function () { throw new Error('Use of unimplemented function: pauseSampling'); }
//flash.sampler.pauseSampling


//flash.sampler.sampleInternalAllocs
$es4.$$package('flash.sampler').sampleInternalAllocs = function () { throw new Error('Use of unimplemented function: sampleInternalAllocs'); }
//flash.sampler.sampleInternalAllocs


//flash.sampler.setSamplerCallback
$es4.$$package('flash.sampler').setSamplerCallback = function () { throw new Error('Use of unimplemented function: setSamplerCallback'); }
//flash.sampler.setSamplerCallback


//flash.sampler.startSampling
$es4.$$package('flash.sampler').startSampling = function () { throw new Error('Use of unimplemented function: startSampling'); }
//flash.sampler.startSampling


//flash.sampler.stopSampling
$es4.$$package('flash.sampler').stopSampling = function () { throw new Error('Use of unimplemented function: stopSampling'); }
//flash.sampler.stopSampling


//flash.system.fscommand
$es4.$$package('flash.system').fscommand = function () { throw new Error('Use of unimplemented function: fscommand'); }
//flash.system.fscommand


//flash.utils.clearInterval
$es4.$$package('flash.utils').clearInterval = (function ()
{
	var $$this = clearInterval, $$thisp = clearInterval;
	//function initializer
	clearInterval.$$cinit = (function ()
	{
		clearInterval.$$cinit = undefined;
	});

	function clearInterval($$$$id)
	{
		//initialize function if not initialized
		if (clearInterval.$$cinit !== undefined) clearInterval.$$cinit();

		//set default parameter values
		var id = $es4.$$coerce($$$$id, uint);

		global.clearInterval(id);
}

	return $es4.$$function (clearInterval);
})();
//flash.utils.clearInterval


//flash.utils.clearTimeout
$es4.$$package('flash.utils').clearTimeout = (function ()
{
	var $$this = clearTimeout, $$thisp = clearTimeout;
	//function initializer
	clearTimeout.$$cinit = (function ()
	{
		clearTimeout.$$cinit = undefined;
	});

	function clearTimeout($$$$id)
	{
		//initialize function if not initialized
		if (clearTimeout.$$cinit !== undefined) clearTimeout.$$cinit();

		//set default parameter values
		var id = $es4.$$coerce($$$$id, uint);

		global.clearTimeout(id);
}

	return $es4.$$function (clearTimeout);
})();
//flash.utils.clearTimeout


//flash.utils.describeType
$es4.$$package('flash.utils').describeType = function () { throw new Error('Use of unimplemented function: describeType'); }
//flash.utils.describeType


//flash.utils.escapeMultiByte
$es4.$$package('flash.utils').escapeMultiByte = function () { throw new Error('Use of unimplemented function: escapeMultiByte'); }
//flash.utils.escapeMultiByte


//flash.utils.getDefinitionByName
$es4.$$package('flash.utils').getDefinitionByName = (function ()
{
	var $$this = getDefinitionByName, $$thisp = getDefinitionByName;
	//function initializer
	getDefinitionByName.$$cinit = (function ()
	{
		getDefinitionByName.$$cinit = undefined;
	});

	function getDefinitionByName($$$$name)
	{
		//initialize function if not initialized
		if (getDefinitionByName.$$cinit !== undefined) getDefinitionByName.$$cinit();

		//set default parameter values
		var name = $es4.$$coerce($$$$name, String);


		var parts = name.split('::').join('.').split('.');
		var definitionName = parts.pop();
		var packageName = parts.join('.');
		
		if ($$[packageName] === undefined || $$[packageName][definitionName] === undefined) throw new Error('Variable ' + name + ' is not defined.');
		
		return $$[packageName][definitionName];
	}

	return $es4.$$function (getDefinitionByName);
})();
//flash.utils.getDefinitionByName


//flash.utils.getQualifiedClassName
$es4.$$package('flash.utils').getQualifiedClassName = (function ()
{
	var $$this = getQualifiedClassName, $$thisp = getQualifiedClassName;
	//function initializer
	getQualifiedClassName.$$cinit = (function ()
	{
		getQualifiedClassName.$$cinit = undefined;
	});

	function getQualifiedClassName($$$$object)
	{
		//initialize function if not initialized
		if (getQualifiedClassName.$$cinit !== undefined) getQualifiedClassName.$$cinit();

		//set default parameter values
		var object = $$$$object;

		if (object.$$isclass !== undefined)
		{
			return $es4.$$coerce(object.$$fullyQualifiedName, String);
		}
		else if (object.$$ismethod !== undefined)
		{
			return 'builtin.as$0::MethodClosure';
		}
		else if (object.constructor.name === 'Number')
		{
			if (object = int(object))
			{
				return 'int';
			}
			else if (object = uint(object))
			{
				return 'uint';
			}
			return 'Number';
		}
		else if (object.constructor.$$isclass !== undefined)
		{
			return $es4.$$coerce(object.constructor.$$fullyQualifiedName, String);
		}
		return $es4.$$coerce(object.constructor.name, String);
}

	return $es4.$$function (getQualifiedClassName);
})();
//flash.utils.getQualifiedClassName


//flash.utils.getQualifiedSuperclassName
$es4.$$package('flash.utils').getQualifiedSuperclassName = (function ()
{
	var $$this = getQualifiedSuperclassName, $$thisp = getQualifiedSuperclassName;
	//imports
	var getQualifiedClassName;

	//function initializer
	getQualifiedSuperclassName.$$cinit = (function ()
	{
		getQualifiedSuperclassName.$$cinit = undefined;

		//initialize imports
		getQualifiedClassName = $es4.$$['flash.utils'].getQualifiedClassName;
	});

	function getQualifiedSuperclassName($$$$object)
	{
		//initialize function if not initialized
		if (getQualifiedSuperclassName.$$cinit !== undefined) getQualifiedSuperclassName.$$cinit();

		//set default parameter values
		var object = $$$$object;

		if (object == Object)
		{
			return null;
		}
		if (object.$$isclass !== undefined)
		{
			if (object === Array)
			{
				return 'Object';
			}
			return getQualifiedClassName(object.__proto__);
		}
		else if (object.$$ismethod !== undefined)
		{
			return 'Function';
		}
		else if (object.constructor.$$isclass !== undefined)
		{
			return getQualifiedClassName(object.constructor.__proto__);
		}
		return $es4.$$coerce(object.constructor.__proto__.name, String);
}

	return $es4.$$function (getQualifiedSuperclassName);
})();
//flash.utils.getQualifiedSuperclassName


//flash.utils.getTimer
$es4.$$package('flash.utils').getTimer = (function ()
{
	var $$this = getTimer, $$thisp = getTimer;
	//function initializer
	getTimer.$$cinit = (function ()
	{
		getTimer.$$cinit = undefined;
	});

	function getTimer()
	{
		//initialize function if not initialized
		if (getTimer.$$cinit !== undefined) getTimer.$$cinit();

		return $es4.$$coerce($es4.$$primitive(new Date().getTime()) - global.$es4.$$startTime, int);
}

	return $es4.$$function (getTimer);
})();
//flash.utils.getTimer


//flash.utils.setInterval
$es4.$$package('flash.utils').setInterval = (function ()
{
	var $$this = setInterval, $$thisp = setInterval;
	//function initializer
	setInterval.$$cinit = (function ()
	{
		setInterval.$$cinit = undefined;
	});

	function setInterval($$$$closure, $$$$delay, $$$$rest)
	{
		//initialize function if not initialized
		if (setInterval.$$cinit !== undefined) setInterval.$$cinit();

		//set default parameter values
		var closure = $es4.$$coerce($$$$closure, Function);
		var delay = $es4.$$coerce($$$$delay, Number);
		for (var $$i = 2, $$length = arguments.length, rest = new Array($$length - 2); $$i < $$length; $$i += 1) rest[$$i - 2] = arguments[$$i];

		return $es4.$$coerce(global.setInterval(function () 
{
	closure.apply(this, rest);
}
, delay), uint);
}

	return $es4.$$function (setInterval);
})();
//flash.utils.setInterval


//flash.utils.setTimeout
$es4.$$package('flash.utils').setTimeout = (function ()
{
	var $$this = setTimeout, $$thisp = setTimeout;
	//function initializer
	setTimeout.$$cinit = (function ()
	{
		setTimeout.$$cinit = undefined;
	});

	function setTimeout($$$$closure, $$$$delay, $$$$rest)
	{
		//initialize function if not initialized
		if (setTimeout.$$cinit !== undefined) setTimeout.$$cinit();

		//set default parameter values
		var closure = $es4.$$coerce($$$$closure, Function);
		var delay = $es4.$$coerce($$$$delay, Number);
		for (var $$i = 2, $$length = arguments.length, rest = new Array($$length - 2); $$i < $$length; $$i += 1) rest[$$i - 2] = arguments[$$i];

		return $es4.$$coerce(global.setTimeout(function () 
{
	closure.apply(this, rest);
}
, delay), uint);
}

	return $es4.$$function (setTimeout);
})();
//flash.utils.setTimeout


//flash.utils.unescapeMultiByte
$es4.$$package('flash.utils').unescapeMultiByte = function () { throw new Error('Use of unimplemented function: unescapeMultiByte'); }
//flash.utils.unescapeMultiByte


$es4.$$['flash.accessibility'].ISearchableText.$$pcinit();

$es4.$$['flash.accessibility'].ISimpleTextSelection.$$pcinit();

$es4.$$['flash.display'].IBitmapDrawable.$$pcinit();

$es4.$$['flash.display'].IGraphicsData.$$pcinit();

$es4.$$['flash.display'].IGraphicsFill.$$pcinit();

$es4.$$['flash.display'].IGraphicsPath.$$pcinit();

$es4.$$['flash.display'].IGraphicsStroke.$$pcinit();

$es4.$$['flash.events'].IEventDispatcher.$$pcinit();

$es4.$$['flash.net'].IDynamicPropertyWriter.$$pcinit();

$es4.$$['flash.text.ime'].IIMEClient.$$pcinit();

$es4.$$['flash.utils'].IDataInput.$$pcinit();

$es4.$$['flash.utils'].IDataOutput.$$pcinit();

$es4.$$['browser'].Browser.$$pcinit();

$es4.$$['fl.controls'].ScrollBarDirection.$$pcinit();

$es4.$$['flash.accessibility'].Accessibility.$$pcinit();

$es4.$$['flash.accessibility'].AccessibilityProperties.$$pcinit();

$es4.$$['flash.display'].Bitmap.$$pcinit();

$es4.$$['flash.display'].BitmapData.$$pcinit();

$es4.$$['flash.display'].CapsStyle.$$pcinit();

$es4.$$['flash.display'].ColorCorrection.$$pcinit();

$es4.$$['flash.display'].ColorCorrectionSupport.$$pcinit();

$es4.$$['flash.display'].DisplayObject.$$pcinit();

$es4.$$['flash.display'].DisplayObjectContainer.$$pcinit();

$es4.$$['flash.display'].Graphics.$$pcinit();

$es4.$$['flash.display'].InteractiveObject.$$pcinit();

$es4.$$['flash.display'].Loader.$$pcinit();

$es4.$$['flash.display'].LoaderInfo.$$pcinit();

$es4.$$['flash.display'].MovieClip.$$pcinit();

$es4.$$['flash.display'].PixelSnapping.$$pcinit();

$es4.$$['flash.display'].Shape.$$pcinit();

$es4.$$['flash.display'].SimpleButton.$$pcinit();

$es4.$$['flash.display'].Sprite.$$pcinit();

$es4.$$['flash.display'].Stage.$$pcinit();

$es4.$$['flash.display'].StageAlign.$$pcinit();

$es4.$$['flash.display'].StageDisplayState.$$pcinit();

$es4.$$['flash.display'].StageQuality.$$pcinit();

$es4.$$['flash.display'].StageScaleMode.$$pcinit();

$es4.$$['flash.display3D'].Context3DCompareMode.$$pcinit();

$es4.$$['flash.errors'].IOError.$$pcinit();

$es4.$$['flash.events'].AsyncErrorEvent.$$pcinit();

$es4.$$['flash.events'].ErrorEvent.$$pcinit();

$es4.$$['flash.events'].Event.$$pcinit();

$es4.$$['flash.events'].EventDispatcher.$$pcinit();

$es4.$$['flash.events'].EventPhase.$$pcinit();

$es4.$$['flash.events'].FocusEvent.$$pcinit();

$es4.$$['flash.events'].HTTPStatusEvent.$$pcinit();

$es4.$$['flash.events'].IOErrorEvent.$$pcinit();

$es4.$$['flash.events'].KeyboardEvent.$$pcinit();

$es4.$$['flash.events'].MouseEvent.$$pcinit();

$es4.$$['flash.events'].NetStatusEvent.$$pcinit();

$es4.$$['flash.events'].ProgressEvent.$$pcinit();

$es4.$$['flash.events'].SampleDataEvent.$$pcinit();

$es4.$$['flash.events'].SecurityErrorEvent.$$pcinit();

$es4.$$['flash.events'].StatusEvent.$$pcinit();

$es4.$$['flash.events'].TextEvent.$$pcinit();

$es4.$$['flash.events'].TimerEvent.$$pcinit();

$es4.$$['flash.events'].UncaughtErrorEvents.$$pcinit();

$es4.$$['flash.external'].ExternalInterface.$$pcinit();

$es4.$$['flash.geom'].ColorTransform.$$pcinit();

$es4.$$['flash.geom'].Matrix.$$pcinit();

$es4.$$['flash.geom'].Point.$$pcinit();

$es4.$$['flash.geom'].Rectangle.$$pcinit();

$es4.$$['flash.geom'].Transform.$$pcinit();

$es4.$$['flash.media'].Microphone.$$pcinit();

$es4.$$['flash.media'].Sound.$$pcinit();

$es4.$$['flash.media'].SoundChannel.$$pcinit();

$es4.$$['flash.media'].SoundCodec.$$pcinit();

$es4.$$['flash.media'].SoundTransform.$$pcinit();

$es4.$$['flash.media'].Video.$$pcinit();

$es4.$$['flash.media'].VideoStatus.$$pcinit();

$es4.$$['flash.net'].NetConnection.$$pcinit();

$es4.$$['flash.net'].NetStream.$$pcinit();

$es4.$$['flash.net'].ObjectEncoding.$$pcinit();

$es4.$$['flash.net'].SharedObject.$$pcinit();

$es4.$$['flash.net'].SharedObjectFlushStatus.$$pcinit();

$es4.$$['flash.net'].Socket.$$pcinit();

$es4.$$['flash.net'].URLLoader.$$pcinit();

$es4.$$['flash.net'].URLLoaderDataFormat.$$pcinit();

$es4.$$['flash.net'].URLRequest.$$pcinit();

$es4.$$['flash.net'].URLRequestMethod.$$pcinit();

$es4.$$['flash.net'].URLVariables.$$pcinit();

$es4.$$['flash.net'].XMLSocket.$$pcinit();

$es4.$$['flash.printing'].PrintJob.$$pcinit();

$es4.$$['flash.printing'].PrintJobOptions.$$pcinit();

$es4.$$['flash.printing'].PrintJobOrientation.$$pcinit();

$es4.$$['flash.system'].ApplicationDomain.$$pcinit();

$es4.$$['flash.system'].Capabilities.$$pcinit();

$es4.$$['flash.system'].LoaderContext.$$pcinit();

$es4.$$['flash.system'].SecurityDomain.$$pcinit();

$es4.$$['flash.system'].System.$$pcinit();

$es4.$$['flash.text'].AntiAliasType.$$pcinit();

$es4.$$['flash.text'].Font.$$pcinit();

$es4.$$['flash.text'].FontStyle.$$pcinit();

$es4.$$['flash.text'].FontType.$$pcinit();

$es4.$$['flash.text'].StyleSheet.$$pcinit();

$es4.$$['flash.text'].TextField.$$pcinit();

$es4.$$['flash.text'].TextFieldAutoSize.$$pcinit();

$es4.$$['flash.text'].TextFieldType.$$pcinit();

$es4.$$['flash.text'].TextFormat.$$pcinit();

$es4.$$['flash.text'].TextFormatAlign.$$pcinit();

$es4.$$['flash.ui'].Keyboard.$$pcinit();

$es4.$$['flash.ui'].Mouse.$$pcinit();

$es4.$$['flash.ui'].MouseCursor.$$pcinit();

$es4.$$['flash.utils'].ByteArray.$$pcinit();

$es4.$$['flash.utils'].Dictionary.$$pcinit();

$es4.$$['flash.utils'].Endian.$$pcinit();

$es4.$$['flash.utils'].Proxy.$$pcinit();

$es4.$$['flash.utils'].Timer.$$pcinit();

$es4.$$['flash.xml'].XMLDocument.$$pcinit();

$es4.$$['flash.xml'].XMLNode.$$pcinit();

$es4.$$['flash.xml'].XMLNodeType.$$pcinit();

$es4.$$['player'].Player.$$pcinit();

$es4.$$[''].XML.$$pcinit();

$es4.$$[''].XMLList.$$pcinit();

if ($es4.$$['flash.accessibility'].ISearchableText.$$sinit !== undefined) $es4.$$['flash.accessibility'].ISearchableText.$$sinit();

if ($es4.$$['flash.accessibility'].ISimpleTextSelection.$$sinit !== undefined) $es4.$$['flash.accessibility'].ISimpleTextSelection.$$sinit();

if ($es4.$$['flash.display'].IBitmapDrawable.$$sinit !== undefined) $es4.$$['flash.display'].IBitmapDrawable.$$sinit();

if ($es4.$$['flash.display'].IGraphicsData.$$sinit !== undefined) $es4.$$['flash.display'].IGraphicsData.$$sinit();

if ($es4.$$['flash.display'].IGraphicsFill.$$sinit !== undefined) $es4.$$['flash.display'].IGraphicsFill.$$sinit();

if ($es4.$$['flash.display'].IGraphicsPath.$$sinit !== undefined) $es4.$$['flash.display'].IGraphicsPath.$$sinit();

if ($es4.$$['flash.display'].IGraphicsStroke.$$sinit !== undefined) $es4.$$['flash.display'].IGraphicsStroke.$$sinit();

if ($es4.$$['flash.events'].IEventDispatcher.$$sinit !== undefined) $es4.$$['flash.events'].IEventDispatcher.$$sinit();

if ($es4.$$['flash.net'].IDynamicPropertyWriter.$$sinit !== undefined) $es4.$$['flash.net'].IDynamicPropertyWriter.$$sinit();

if ($es4.$$['flash.text.ime'].IIMEClient.$$sinit !== undefined) $es4.$$['flash.text.ime'].IIMEClient.$$sinit();

if ($es4.$$['flash.utils'].IDataInput.$$sinit !== undefined) $es4.$$['flash.utils'].IDataInput.$$sinit();

if ($es4.$$['flash.utils'].IDataOutput.$$sinit !== undefined) $es4.$$['flash.utils'].IDataOutput.$$sinit();

if ($es4.$$['browser'].Browser.$$sinit !== undefined) $es4.$$['browser'].Browser.$$sinit();

if ($es4.$$['fl.controls'].ScrollBarDirection.$$sinit !== undefined) $es4.$$['fl.controls'].ScrollBarDirection.$$sinit();

if ($es4.$$['flash.accessibility'].Accessibility.$$sinit !== undefined) $es4.$$['flash.accessibility'].Accessibility.$$sinit();

if ($es4.$$['flash.accessibility'].AccessibilityProperties.$$sinit !== undefined) $es4.$$['flash.accessibility'].AccessibilityProperties.$$sinit();

if ($es4.$$['flash.display'].Bitmap.$$sinit !== undefined) $es4.$$['flash.display'].Bitmap.$$sinit();

if ($es4.$$['flash.display'].BitmapData.$$sinit !== undefined) $es4.$$['flash.display'].BitmapData.$$sinit();

if ($es4.$$['flash.display'].CapsStyle.$$sinit !== undefined) $es4.$$['flash.display'].CapsStyle.$$sinit();

if ($es4.$$['flash.display'].ColorCorrection.$$sinit !== undefined) $es4.$$['flash.display'].ColorCorrection.$$sinit();

if ($es4.$$['flash.display'].ColorCorrectionSupport.$$sinit !== undefined) $es4.$$['flash.display'].ColorCorrectionSupport.$$sinit();

if ($es4.$$['flash.display'].DisplayObject.$$sinit !== undefined) $es4.$$['flash.display'].DisplayObject.$$sinit();

if ($es4.$$['flash.display'].DisplayObjectContainer.$$sinit !== undefined) $es4.$$['flash.display'].DisplayObjectContainer.$$sinit();

if ($es4.$$['flash.display'].Graphics.$$sinit !== undefined) $es4.$$['flash.display'].Graphics.$$sinit();

if ($es4.$$['flash.display'].InteractiveObject.$$sinit !== undefined) $es4.$$['flash.display'].InteractiveObject.$$sinit();

if ($es4.$$['flash.display'].Loader.$$sinit !== undefined) $es4.$$['flash.display'].Loader.$$sinit();

if ($es4.$$['flash.display'].LoaderInfo.$$sinit !== undefined) $es4.$$['flash.display'].LoaderInfo.$$sinit();

if ($es4.$$['flash.display'].MovieClip.$$sinit !== undefined) $es4.$$['flash.display'].MovieClip.$$sinit();

if ($es4.$$['flash.display'].PixelSnapping.$$sinit !== undefined) $es4.$$['flash.display'].PixelSnapping.$$sinit();

if ($es4.$$['flash.display'].Shape.$$sinit !== undefined) $es4.$$['flash.display'].Shape.$$sinit();

if ($es4.$$['flash.display'].SimpleButton.$$sinit !== undefined) $es4.$$['flash.display'].SimpleButton.$$sinit();

if ($es4.$$['flash.display'].Sprite.$$sinit !== undefined) $es4.$$['flash.display'].Sprite.$$sinit();

if ($es4.$$['flash.display'].Stage.$$sinit !== undefined) $es4.$$['flash.display'].Stage.$$sinit();

if ($es4.$$['flash.display'].StageAlign.$$sinit !== undefined) $es4.$$['flash.display'].StageAlign.$$sinit();

if ($es4.$$['flash.display'].StageDisplayState.$$sinit !== undefined) $es4.$$['flash.display'].StageDisplayState.$$sinit();

if ($es4.$$['flash.display'].StageQuality.$$sinit !== undefined) $es4.$$['flash.display'].StageQuality.$$sinit();

if ($es4.$$['flash.display'].StageScaleMode.$$sinit !== undefined) $es4.$$['flash.display'].StageScaleMode.$$sinit();

if ($es4.$$['flash.display3D'].Context3DCompareMode.$$sinit !== undefined) $es4.$$['flash.display3D'].Context3DCompareMode.$$sinit();

if ($es4.$$['flash.errors'].IOError.$$sinit !== undefined) $es4.$$['flash.errors'].IOError.$$sinit();

if ($es4.$$['flash.events'].AsyncErrorEvent.$$sinit !== undefined) $es4.$$['flash.events'].AsyncErrorEvent.$$sinit();

if ($es4.$$['flash.events'].ErrorEvent.$$sinit !== undefined) $es4.$$['flash.events'].ErrorEvent.$$sinit();

if ($es4.$$['flash.events'].Event.$$sinit !== undefined) $es4.$$['flash.events'].Event.$$sinit();

if ($es4.$$['flash.events'].EventDispatcher.$$sinit !== undefined) $es4.$$['flash.events'].EventDispatcher.$$sinit();

if ($es4.$$['flash.events'].EventPhase.$$sinit !== undefined) $es4.$$['flash.events'].EventPhase.$$sinit();

if ($es4.$$['flash.events'].FocusEvent.$$sinit !== undefined) $es4.$$['flash.events'].FocusEvent.$$sinit();

if ($es4.$$['flash.events'].HTTPStatusEvent.$$sinit !== undefined) $es4.$$['flash.events'].HTTPStatusEvent.$$sinit();

if ($es4.$$['flash.events'].IOErrorEvent.$$sinit !== undefined) $es4.$$['flash.events'].IOErrorEvent.$$sinit();

if ($es4.$$['flash.events'].KeyboardEvent.$$sinit !== undefined) $es4.$$['flash.events'].KeyboardEvent.$$sinit();

if ($es4.$$['flash.events'].MouseEvent.$$sinit !== undefined) $es4.$$['flash.events'].MouseEvent.$$sinit();

if ($es4.$$['flash.events'].NetStatusEvent.$$sinit !== undefined) $es4.$$['flash.events'].NetStatusEvent.$$sinit();

if ($es4.$$['flash.events'].ProgressEvent.$$sinit !== undefined) $es4.$$['flash.events'].ProgressEvent.$$sinit();

if ($es4.$$['flash.events'].SampleDataEvent.$$sinit !== undefined) $es4.$$['flash.events'].SampleDataEvent.$$sinit();

if ($es4.$$['flash.events'].SecurityErrorEvent.$$sinit !== undefined) $es4.$$['flash.events'].SecurityErrorEvent.$$sinit();

if ($es4.$$['flash.events'].StatusEvent.$$sinit !== undefined) $es4.$$['flash.events'].StatusEvent.$$sinit();

if ($es4.$$['flash.events'].TextEvent.$$sinit !== undefined) $es4.$$['flash.events'].TextEvent.$$sinit();

if ($es4.$$['flash.events'].TimerEvent.$$sinit !== undefined) $es4.$$['flash.events'].TimerEvent.$$sinit();

if ($es4.$$['flash.events'].UncaughtErrorEvents.$$sinit !== undefined) $es4.$$['flash.events'].UncaughtErrorEvents.$$sinit();

if ($es4.$$['flash.external'].ExternalInterface.$$sinit !== undefined) $es4.$$['flash.external'].ExternalInterface.$$sinit();

if ($es4.$$['flash.geom'].ColorTransform.$$sinit !== undefined) $es4.$$['flash.geom'].ColorTransform.$$sinit();

if ($es4.$$['flash.geom'].Matrix.$$sinit !== undefined) $es4.$$['flash.geom'].Matrix.$$sinit();

if ($es4.$$['flash.geom'].Point.$$sinit !== undefined) $es4.$$['flash.geom'].Point.$$sinit();

if ($es4.$$['flash.geom'].Rectangle.$$sinit !== undefined) $es4.$$['flash.geom'].Rectangle.$$sinit();

if ($es4.$$['flash.geom'].Transform.$$sinit !== undefined) $es4.$$['flash.geom'].Transform.$$sinit();

if ($es4.$$['flash.media'].Microphone.$$sinit !== undefined) $es4.$$['flash.media'].Microphone.$$sinit();

if ($es4.$$['flash.media'].Sound.$$sinit !== undefined) $es4.$$['flash.media'].Sound.$$sinit();

if ($es4.$$['flash.media'].SoundChannel.$$sinit !== undefined) $es4.$$['flash.media'].SoundChannel.$$sinit();

if ($es4.$$['flash.media'].SoundCodec.$$sinit !== undefined) $es4.$$['flash.media'].SoundCodec.$$sinit();

if ($es4.$$['flash.media'].SoundTransform.$$sinit !== undefined) $es4.$$['flash.media'].SoundTransform.$$sinit();

if ($es4.$$['flash.media'].Video.$$sinit !== undefined) $es4.$$['flash.media'].Video.$$sinit();

if ($es4.$$['flash.media'].VideoStatus.$$sinit !== undefined) $es4.$$['flash.media'].VideoStatus.$$sinit();

if ($es4.$$['flash.net'].NetConnection.$$sinit !== undefined) $es4.$$['flash.net'].NetConnection.$$sinit();

if ($es4.$$['flash.net'].NetStream.$$sinit !== undefined) $es4.$$['flash.net'].NetStream.$$sinit();

if ($es4.$$['flash.net'].ObjectEncoding.$$sinit !== undefined) $es4.$$['flash.net'].ObjectEncoding.$$sinit();

if ($es4.$$['flash.net'].SharedObject.$$sinit !== undefined) $es4.$$['flash.net'].SharedObject.$$sinit();

if ($es4.$$['flash.net'].SharedObjectFlushStatus.$$sinit !== undefined) $es4.$$['flash.net'].SharedObjectFlushStatus.$$sinit();

if ($es4.$$['flash.net'].Socket.$$sinit !== undefined) $es4.$$['flash.net'].Socket.$$sinit();

if ($es4.$$['flash.net'].URLLoader.$$sinit !== undefined) $es4.$$['flash.net'].URLLoader.$$sinit();

if ($es4.$$['flash.net'].URLLoaderDataFormat.$$sinit !== undefined) $es4.$$['flash.net'].URLLoaderDataFormat.$$sinit();

if ($es4.$$['flash.net'].URLRequest.$$sinit !== undefined) $es4.$$['flash.net'].URLRequest.$$sinit();

if ($es4.$$['flash.net'].URLRequestMethod.$$sinit !== undefined) $es4.$$['flash.net'].URLRequestMethod.$$sinit();

if ($es4.$$['flash.net'].URLVariables.$$sinit !== undefined) $es4.$$['flash.net'].URLVariables.$$sinit();

if ($es4.$$['flash.net'].XMLSocket.$$sinit !== undefined) $es4.$$['flash.net'].XMLSocket.$$sinit();

if ($es4.$$['flash.printing'].PrintJob.$$sinit !== undefined) $es4.$$['flash.printing'].PrintJob.$$sinit();

if ($es4.$$['flash.printing'].PrintJobOptions.$$sinit !== undefined) $es4.$$['flash.printing'].PrintJobOptions.$$sinit();

if ($es4.$$['flash.printing'].PrintJobOrientation.$$sinit !== undefined) $es4.$$['flash.printing'].PrintJobOrientation.$$sinit();

if ($es4.$$['flash.system'].ApplicationDomain.$$sinit !== undefined) $es4.$$['flash.system'].ApplicationDomain.$$sinit();

if ($es4.$$['flash.system'].Capabilities.$$sinit !== undefined) $es4.$$['flash.system'].Capabilities.$$sinit();

if ($es4.$$['flash.system'].LoaderContext.$$sinit !== undefined) $es4.$$['flash.system'].LoaderContext.$$sinit();

if ($es4.$$['flash.system'].SecurityDomain.$$sinit !== undefined) $es4.$$['flash.system'].SecurityDomain.$$sinit();

if ($es4.$$['flash.system'].System.$$sinit !== undefined) $es4.$$['flash.system'].System.$$sinit();

if ($es4.$$['flash.text'].AntiAliasType.$$sinit !== undefined) $es4.$$['flash.text'].AntiAliasType.$$sinit();

if ($es4.$$['flash.text'].Font.$$sinit !== undefined) $es4.$$['flash.text'].Font.$$sinit();

if ($es4.$$['flash.text'].FontStyle.$$sinit !== undefined) $es4.$$['flash.text'].FontStyle.$$sinit();

if ($es4.$$['flash.text'].FontType.$$sinit !== undefined) $es4.$$['flash.text'].FontType.$$sinit();

if ($es4.$$['flash.text'].StyleSheet.$$sinit !== undefined) $es4.$$['flash.text'].StyleSheet.$$sinit();

if ($es4.$$['flash.text'].TextField.$$sinit !== undefined) $es4.$$['flash.text'].TextField.$$sinit();

if ($es4.$$['flash.text'].TextFieldAutoSize.$$sinit !== undefined) $es4.$$['flash.text'].TextFieldAutoSize.$$sinit();

if ($es4.$$['flash.text'].TextFieldType.$$sinit !== undefined) $es4.$$['flash.text'].TextFieldType.$$sinit();

if ($es4.$$['flash.text'].TextFormat.$$sinit !== undefined) $es4.$$['flash.text'].TextFormat.$$sinit();

if ($es4.$$['flash.text'].TextFormatAlign.$$sinit !== undefined) $es4.$$['flash.text'].TextFormatAlign.$$sinit();

if ($es4.$$['flash.ui'].Keyboard.$$sinit !== undefined) $es4.$$['flash.ui'].Keyboard.$$sinit();

if ($es4.$$['flash.ui'].Mouse.$$sinit !== undefined) $es4.$$['flash.ui'].Mouse.$$sinit();

if ($es4.$$['flash.ui'].MouseCursor.$$sinit !== undefined) $es4.$$['flash.ui'].MouseCursor.$$sinit();

if ($es4.$$['flash.utils'].ByteArray.$$sinit !== undefined) $es4.$$['flash.utils'].ByteArray.$$sinit();

if ($es4.$$['flash.utils'].Dictionary.$$sinit !== undefined) $es4.$$['flash.utils'].Dictionary.$$sinit();

if ($es4.$$['flash.utils'].Endian.$$sinit !== undefined) $es4.$$['flash.utils'].Endian.$$sinit();

if ($es4.$$['flash.utils'].Proxy.$$sinit !== undefined) $es4.$$['flash.utils'].Proxy.$$sinit();

if ($es4.$$['flash.utils'].Timer.$$sinit !== undefined) $es4.$$['flash.utils'].Timer.$$sinit();

if ($es4.$$['flash.xml'].XMLDocument.$$sinit !== undefined) $es4.$$['flash.xml'].XMLDocument.$$sinit();

if ($es4.$$['flash.xml'].XMLNode.$$sinit !== undefined) $es4.$$['flash.xml'].XMLNode.$$sinit();

if ($es4.$$['flash.xml'].XMLNodeType.$$sinit !== undefined) $es4.$$['flash.xml'].XMLNodeType.$$sinit();

if ($es4.$$['player'].Player.$$sinit !== undefined) $es4.$$['player'].Player.$$sinit();

if ($es4.$$[''].XML.$$sinit !== undefined) $es4.$$[''].XML.$$sinit();

if ($es4.$$[''].XMLList.$$sinit !== undefined) $es4.$$[''].XMLList.$$sinit();})();